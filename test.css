:root {
  --sv-font-family-main: Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Open Sans, Helvetica Neue, sans-serif;
  --sv-font-family-heading: Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Open Sans, Helvetica Neue, sans-serif;
  --sv-font-family-mono: JetBrains Mono, Courier New, Courier, monospace;
  --sv-text-xs: 0.75rem;
  --sv-text-sm: 0.875rem;
  --sv-text-base: 1rem;
  --sv-text-lg: 1.125rem;
  --sv-text-xl: 1.25rem;
  --sv-text-2xl: 1.5rem;
  --sv-text-3xl: 1.875rem;
  --sv-text-4xl: 2.25rem;
  --sv-text-5xl: 3rem;
  --sv-text-6xl: 4rem;
  --sv-text-body-sm: 0.875rem;
  --sv-text-body-md: 1rem;
  --sv-text-body-lg: 1.125rem;
  --sv-text-heading-sm: 1.25rem;
  --sv-text-heading-md: 1.5rem;
  --sv-text-heading-lg: 1.875rem;
  --sv-font-light: 300;
  --sv-font-normal: 400;
  --sv-font-medium: 500;
  --sv-font-semibold: 600;
  --sv-font-bold: 700;
  --sv-font-extrabold: 800;
  --sv-leading-none: 1;
  --sv-leading-tight: 1.25;
  --sv-leading-snug: 1.375;
  --sv-leading-normal: 1.5;
  --sv-leading-relaxed: 1.625;
  --sv-leading-loose: 2;
  --sv-tracking-tighter: -0.05em;
  --sv-tracking-tight: -0.025em;
  --sv-tracking-normal: 0;
  --sv-tracking-wide: 0.025em;
  --sv-tracking-wider: 0.05em;
  --sv-tracking-widest: 0.1em;
}

:root {
  --sv-spacing-unit: 0.25rem;
  --sv-space-0: 0;
  --sv-space-1: 0.25rem;
  --sv-space-2: 0.5rem;
  --sv-space-3: 0.75rem;
  --sv-space-4: 1rem;
  --sv-space-5: 1.25rem;
  --sv-space-6: 1.5rem;
  --sv-space-7: 1.75rem;
  --sv-space-8: 2rem;
  --sv-space-10: 2.5rem;
  --sv-space-12: 3rem;
  --sv-space-16: 4rem;
  --sv-space-20: 5rem;
  --sv-space-24: 6rem;
  --sv-space-32: 8rem;
  --sv-space-xs: 0.5rem;
  --sv-space-sm: 1rem;
  --sv-space-md: 1.5rem;
  --sv-space-lg: 2rem;
  --sv-space-xl: 2.5rem;
  --sv-space-2xl: 4rem;
  --sv-space-3xl: 6rem;
}

:root {
  --sv-padding-unit: 0.25rem;
  --sv-padding-0: 0;
  --sv-padding-1: 0.25rem;
  --sv-padding-2: 0.5rem;
  --sv-padding-3: 0.75rem;
  --sv-padding-4: 1rem;
  --sv-padding-5: 1.25rem;
  --sv-padding-6: 1.5rem;
  --sv-padding-7: 1.75rem;
  --sv-padding-8: 2rem;
  --sv-padding-10: 2.5rem;
  --sv-padding-12: 3rem;
  --sv-padding-16: 4rem;
  --sv-padding-20: 5rem;
  --sv-padding-24: 6rem;
  --sv-padding-32: 8rem;
  --sv-padding-xs: 0.5rem;
  --sv-padding-sm: 1rem;
  --sv-padding-md: 1.5rem;
  --sv-padding-lg: 2rem;
  --sv-padding-xl: 2.5rem;
  --sv-padding-2xl: 4rem;
  --sv-padding-3xl: 6rem;
}

:root {
  --sv-size-unit: 0.25rem;
  --sv-size-0: 0;
  --sv-size-1: 0.25rem;
  --sv-size-2: 0.5rem;
  --sv-size-3: 0.75rem;
  --sv-size-4: 1rem;
  --sv-size-5: 1.25rem;
  --sv-size-6: 1.5rem;
  --sv-size-7: 1.75rem;
  --sv-size-8: 2rem;
  --sv-size-10: 2.5rem;
  --sv-size-12: 3rem;
  --sv-size-16: 4rem;
  --sv-size-20: 5rem;
  --sv-size-24: 6rem;
  --sv-size-32: 8rem;
  --sv-size-40: 10rem;
  --sv-size-48: 12rem;
  --sv-size-64: 16rem;
  --sv-size-xs: 0.5rem;
  --sv-size-sm: 1rem;
  --sv-size-md: 1.5rem;
  --sv-size-lg: 2rem;
  --sv-size-xl: 2.5rem;
  --sv-size-2xl: 4rem;
  --sv-size-3xl: 6rem;
}

:root {
  --sv-radius-none: 0;
  --sv-radius-xs: 0.125rem;
  --sv-radius-sm: 0.25rem;
  --sv-radius-md: 0.5rem;
  --sv-radius-lg: 0.75rem;
  --sv-radius-xl: 1rem;
  --sv-radius-2xl: 1.5rem;
  --sv-radius-3xl: 2rem;
  --sv-radius-full: 9999px;
}

:root {
  --sv-shadow-color-light: rgba(0, 0, 0, 0.1);
  --sv-shadow-color-medium: rgba(0, 0, 0, 0.14);
  --sv-shadow-color-dark: rgba(0, 0, 0, 0.2);
  --sv-shadow-none: none;
  --sv-shadow-xs: 0 1px 2px 0 rgba(0, 0, 0, 0.1);
  --sv-shadow-sm: 0 2px 4px -1px rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.14);
  --sv-shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.14);
  --sv-shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.14);
  --sv-shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.14);
  --sv-shadow-2xl: 0 25px 50px -12px rgba(0, 0, 0, 0.14);
  --sv-shadow-inner: inset 0 2px 4px 0 rgba(0, 0, 0, 0.1);
  --sv-shadow-outline: 0 0 0 3px rgba(0, 0, 0, 0.05);
  --sv-shadow-top: 0 -6px 16px -8px rgba(0, 0, 0, 0.1);
  --sv-shadow-right: 6px 0 16px -8px rgba(0, 0, 0, 0.1);
  --sv-shadow-bottom: 0 6px 16px -8px rgba(0, 0, 0, 0.1);
  --sv-shadow-left: -6px 0 16px -8px rgba(0, 0, 0, 0.1);
  --sv-shadow-focus: 0 0 0 3px rgba(0, 0, 0, 0.08);
  --sv-shadow-focus-error: 0 0 0 3px rgba(0, 0, 0, 0.12);
  --sv-shadow-focus-success: 0 0 0 3px rgba(0, 0, 0, 0.08);
}

.dark-theme {
  --sv-shadow-color-light: rgba(0, 0, 0, 0.25);
  --sv-shadow-color-medium: rgba(0, 0, 0, 0.35);
  --sv-shadow-color-dark: rgba(0, 0, 0, 0.5);
  --sv-shadow-focus: 0 0 0 3px rgba(255, 255, 255, 0.1);
  --sv-shadow-focus-error: 0 0 0 3px rgba(0, 0, 0, 0.25);
  --sv-shadow-focus-success: 0 0 0 3px rgba(255, 255, 255, 0.1);
}

:root {
  --sv-breakpoint-xs: 0;
  --sv-breakpoint-sm: 576px;
  --sv-breakpoint-md: 768px;
  --sv-breakpoint-lg: 992px;
  --sv-breakpoint-xl: 1200px;
  --sv-breakpoint-xxl: 1400px;
  --sv-container-sm: 540px;
  --sv-container-md: 720px;
  --sv-container-lg: 960px;
  --sv-container-xl: 1140px;
  --sv-container-xxl: 1320px;
}

:root {
  --sv-icon-size-xs: 0.75rem;
  --sv-icon-size-sm: 1rem;
  --sv-icon-size-md: 1.5rem;
  --sv-icon-size-lg: 2rem;
  --sv-icon-size-xl: 2.5rem;
  --sv-icon-size-2xl: 3rem;
  --sv-btn-size-sm: 1.75rem;
  --sv-btn-size-md: 2rem;
  --sv-btn-size-lg: 2.75rem;
}

:root {
  --sv-motion-duration-short: 0.15s;
  --sv-motion-duration-medium: 0.3s;
  --sv-motion-duration-long: 0.5s;
  --sv-spinner-duration: 0.75s;
  --sv-motion-ease-standard: cubic-bezier(0.4, 0, 0.2, 1);
  --sv-motion-ease-decelerate: cubic-bezier(0, 0, 0.2, 1);
  --sv-motion-ease-accelerate: cubic-bezier(0.4, 0, 1, 1);
  --sv-motion-keyfade: fade-in-out;
  --sv-motion-keybounce: bounce-in;
  --sv-motion-keyspring: spring-in;
}

:root {
  --sv-focus-ring-color: rgba(37, 99, 235, 0.8);
  --sv-focus-ring-width: 2px;
  --sv-focus-ring-offset: 2px;
  --sv-focus-ring-style: solid;
  --sv-z-index-skip-link: 9999;
  --sv-z-index-modal: 1050;
  --sv-z-index-popover: 1040;
  --sv-z-index-tooltip: 1030;
  --sv-z-index-header: 1020;
  --sv-z-index-dropdown: 1010;
  --sv-z-index-overlay: 1000;
  --sv-z-index-default: 1;
  --sv-z-index-negative: -1;
  --sv-min-touch-target: 44px;
  --sv-skip-link-bg: #ffffff;
  --sv-skip-link-color: #111111;
  --sv-skip-link-padding: 8px 16px;
  --sv-skip-link-position-top: 8px;
  --sv-skip-link-position-left: 8px;
}

:root {
  --sv-bg-primary: #ffffff;
  --sv-bg-secondary: #f8f9fa;
  --sv-bg-surface: #ffffff;
  --sv-bg-element: #f5f5f5;
  --sv-bg-element-hover: #e9ecef;
  --sv-bg-element-active: #dce1e6;
  --sv-text-primary: #212529;
  --sv-text-secondary: #6c757d;
  --sv-text-tertiary: #adb5bd;
  --sv-text-accent: #0a9fff;
  --sv-text-on-dark: #ffffff;
  --sv-text-on-light: #212529;
  --sv-border-light: #e9ecef;
  --sv-border-medium: #dee2e6;
  --sv-border-dark: #ced4da;
  --sv-primary: #0a9fff;
  --sv-primary-light: #30b1ff;
  --sv-primary-dark: #007ef3;
  --sv-secondary: #364c5e;
  --sv-secondary-light: #455b70;
  --sv-secondary-dark: #2d4052;
  --sv-info: #29b6f6;
  --sv-success: #4caf50;
  --sv-warning: #ffa726;
  --sv-error: #f44336;
  --sv-error-dark: #d73128;
  --sv-error-darker: #c62828;
  --sv-error-500-rgb: 244, 67, 54;
  --sv-icon-color: var(--sv-text-primary);
}

[data-theme=dark] {
  --sv-bg-primary: #121212;
  --sv-bg-secondary: #1e1e1e;
  --sv-bg-surface: #242424;
  --sv-bg-element: #2d2d2d;
  --sv-bg-element-hover: #383838;
  --sv-bg-element-active: #454545;
  --sv-text-primary: #e9ecef;
  --sv-text-secondary: #adb5bd;
  --sv-text-tertiary: #6c757d;
  --sv-text-accent: #30b1ff;
  --sv-text-on-dark: #ffffff;
  --sv-text-on-light: #212529;
  --sv-border-light: #383838;
  --sv-border-medium: #454545;
  --sv-border-dark: #505050;
  --sv-border-default: #383838;
  --sv-primary: #30b1ff;
  --sv-primary-light: #56c1ff;
  --sv-primary-dark: #0a9fff;
  --sv-primary-500-rgb: 48, 177, 255;
  --sv-secondary: #455b70;
  --sv-secondary-light: #58687c;
  --sv-secondary-dark: #364c5e;
  --sv-info: #29b6f6;
  --sv-success: #4caf50;
  --sv-warning: #ffa726;
  --sv-error: #f44336;
  --sv-error-dark: #d73128;
  --sv-error-darker: #c62828;
  --sv-error-500-rgb: 244, 67, 54;
  --sv-shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.25);
  --sv-shadow-md: 0 2px 8px rgba(0, 0, 0, 0.25);
  --sv-shadow-lg: 0 4px 16px rgba(0, 0, 0, 0.3);
  --sv-shadow-default: 0 2px 8px rgba(0, 0, 0, 0.3);
  --sv-icon-color: var(--sv-text-inverse);
}

:root {
  --sv-bg-primary: #ffffff;
  --sv-bg-secondary: #f8f9fa;
  --sv-bg-surface: #ffffff;
  --sv-bg-element: #f5f5f5;
  --sv-bg-element-hover: #e9ecef;
  --sv-bg-element-active: #dce1e6;
  --sv-text-primary: #212529;
  --sv-text-secondary: #6c757d;
  --sv-text-tertiary: #adb5bd;
  --sv-text-accent: #0a9fff;
  --sv-text-on-dark: #ffffff;
  --sv-text-on-light: #212529;
  --sv-border-light: #e9ecef;
  --sv-border-medium: #dee2e6;
  --sv-border-dark: #ced4da;
  --sv-primary: #0a9fff;
  --sv-primary-light: #30b1ff;
  --sv-primary-dark: #007ef3;
  --sv-secondary: #364c5e;
  --sv-secondary-light: #455b70;
  --sv-secondary-dark: #2d4052;
  --sv-info: #29b6f6;
  --sv-success: #4caf50;
  --sv-warning: #ffa726;
  --sv-error: #f44336;
  --sv-error-dark: #d73128;
  --sv-error-darker: #c62828;
  --sv-error-500-rgb: 244, 67, 54;
  --sv-icon-color: var(--sv-text-primary);
  transition: 0.3s ease-in-out;
  color-scheme: light;
}

@media (prefers-color-scheme: dark) {
  :root:not([data-theme=light]) {
    --sv-bg-primary: #121212;
    --sv-bg-secondary: #1e1e1e;
    --sv-bg-surface: #242424;
    --sv-bg-element: #2d2d2d;
    --sv-bg-element-hover: #383838;
    --sv-bg-element-active: #454545;
    --sv-text-primary: #e9ecef;
    --sv-text-secondary: #adb5bd;
    --sv-text-tertiary: #6c757d;
    --sv-text-accent: #30b1ff;
    --sv-text-on-dark: #ffffff;
    --sv-text-on-light: #212529;
    --sv-border-light: #383838;
    --sv-border-medium: #454545;
    --sv-border-dark: #505050;
    --sv-border-default: #383838;
    --sv-primary: #30b1ff;
    --sv-primary-light: #56c1ff;
    --sv-primary-dark: #0a9fff;
    --sv-primary-500-rgb: 48, 177, 255;
    --sv-secondary: #455b70;
    --sv-secondary-light: #58687c;
    --sv-secondary-dark: #364c5e;
    --sv-info: #29b6f6;
    --sv-success: #4caf50;
    --sv-warning: #ffa726;
    --sv-error: #f44336;
    --sv-error-dark: #d73128;
    --sv-error-darker: #c62828;
    --sv-error-500-rgb: 244, 67, 54;
    --sv-shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.25);
    --sv-shadow-md: 0 2px 8px rgba(0, 0, 0, 0.25);
    --sv-shadow-lg: 0 4px 16px rgba(0, 0, 0, 0.3);
    --sv-shadow-default: 0 2px 8px rgba(0, 0, 0, 0.3);
    --sv-icon-color: var(--sv-text-inverse);
    color-scheme: dark;
  }
}
[data-theme=light] {
  --sv-bg-primary: #ffffff;
  --sv-bg-secondary: #f8f9fa;
  --sv-bg-surface: #ffffff;
  --sv-bg-element: #f5f5f5;
  --sv-bg-element-hover: #e9ecef;
  --sv-bg-element-active: #dce1e6;
  --sv-text-primary: #212529;
  --sv-text-secondary: #6c757d;
  --sv-text-tertiary: #adb5bd;
  --sv-text-accent: #0a9fff;
  --sv-text-on-dark: #ffffff;
  --sv-text-on-light: #212529;
  --sv-border-light: #e9ecef;
  --sv-border-medium: #dee2e6;
  --sv-border-dark: #ced4da;
  --sv-primary: #0a9fff;
  --sv-primary-light: #30b1ff;
  --sv-primary-dark: #007ef3;
  --sv-secondary: #364c5e;
  --sv-secondary-light: #455b70;
  --sv-secondary-dark: #2d4052;
  --sv-info: #29b6f6;
  --sv-success: #4caf50;
  --sv-warning: #ffa726;
  --sv-error: #f44336;
  --sv-error-dark: #d73128;
  --sv-error-darker: #c62828;
  --sv-error-500-rgb: 244, 67, 54;
  --sv-icon-color: var(--sv-text-primary);
  color-scheme: light;
}

[data-theme=dark] {
  --sv-bg-primary: #121212;
  --sv-bg-secondary: #1e1e1e;
  --sv-bg-surface: #242424;
  --sv-bg-element: #2d2d2d;
  --sv-bg-element-hover: #383838;
  --sv-bg-element-active: #454545;
  --sv-text-primary: #e9ecef;
  --sv-text-secondary: #adb5bd;
  --sv-text-tertiary: #6c757d;
  --sv-text-accent: #30b1ff;
  --sv-text-on-dark: #ffffff;
  --sv-text-on-light: #212529;
  --sv-border-light: #383838;
  --sv-border-medium: #454545;
  --sv-border-dark: #505050;
  --sv-border-default: #383838;
  --sv-primary: #30b1ff;
  --sv-primary-light: #56c1ff;
  --sv-primary-dark: #0a9fff;
  --sv-primary-500-rgb: 48, 177, 255;
  --sv-secondary: #455b70;
  --sv-secondary-light: #58687c;
  --sv-secondary-dark: #364c5e;
  --sv-info: #29b6f6;
  --sv-success: #4caf50;
  --sv-warning: #ffa726;
  --sv-error: #f44336;
  --sv-error-dark: #d73128;
  --sv-error-darker: #c62828;
  --sv-error-500-rgb: 244, 67, 54;
  --sv-shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.25);
  --sv-shadow-md: 0 2px 8px rgba(0, 0, 0, 0.25);
  --sv-shadow-lg: 0 4px 16px rgba(0, 0, 0, 0.3);
  --sv-shadow-default: 0 2px 8px rgba(0, 0, 0, 0.3);
  --sv-icon-color: var(--sv-text-inverse);
  color-scheme: dark;
}

.text-primary {
  color: var(--sv-primary) !important;
}

.bg-primary {
  background-color: var(--sv-primary) !important;
}

.border-primary {
  border-color: var(--sv-primary) !important;
}

.text-primary-light {
  color: var(--sv-primary-light) !important;
}

.bg-primary-light {
  background-color: var(--sv-primary-light) !important;
}

.border-primary-light {
  border-color: var(--sv-primary-light) !important;
}

.text-primary-dark {
  color: var(--sv-primary-dark) !important;
}

.bg-primary-dark {
  background-color: var(--sv-primary-dark) !important;
}

.border-primary-dark {
  border-color: var(--sv-primary-dark) !important;
}

.text-secondary {
  color: var(--sv-secondary) !important;
}

.bg-secondary {
  background-color: var(--sv-secondary) !important;
}

.border-secondary {
  border-color: var(--sv-secondary) !important;
}

.text-secondary-light {
  color: var(--sv-secondary-light) !important;
}

.bg-secondary-light {
  background-color: var(--sv-secondary-light) !important;
}

.border-secondary-light {
  border-color: var(--sv-secondary-light) !important;
}

.text-secondary-dark {
  color: var(--sv-secondary-dark) !important;
}

.bg-secondary-dark {
  background-color: var(--sv-secondary-dark) !important;
}

.border-secondary-dark {
  border-color: var(--sv-secondary-dark) !important;
}

.text-tertiary {
  color: var(--sv-tertiary) !important;
}

.bg-tertiary {
  background-color: var(--sv-tertiary) !important;
}

.border-tertiary {
  border-color: var(--sv-tertiary) !important;
}

.text-tertiary-light {
  color: var(--sv-tertiary-light) !important;
}

.bg-tertiary-light {
  background-color: var(--sv-tertiary-light) !important;
}

.border-tertiary-light {
  border-color: var(--sv-tertiary-light) !important;
}

.text-tertiary-dark {
  color: var(--sv-tertiary-dark) !important;
}

.bg-tertiary-dark {
  background-color: var(--sv-tertiary-dark) !important;
}

.border-tertiary-dark {
  border-color: var(--sv-tertiary-dark) !important;
}

.text-success {
  color: var(--sv-success) !important;
}

.bg-success {
  background-color: var(--sv-success) !important;
}

.border-success {
  border-color: var(--sv-success) !important;
}

.text-warning {
  color: var(--sv-warning) !important;
}

.bg-warning {
  background-color: var(--sv-warning) !important;
}

.border-warning {
  border-color: var(--sv-warning) !important;
}

.text-error {
  color: var(--sv-error) !important;
}

.bg-error {
  background-color: var(--sv-error) !important;
}

.border-error {
  border-color: var(--sv-error) !important;
}

.text-info {
  color: var(--sv-info) !important;
}

.bg-info {
  background-color: var(--sv-info) !important;
}

.border-info {
  border-color: var(--sv-info) !important;
}

html.color-scheme-transition,
html.color-scheme-transition *,
html.color-scheme-transition *::before,
html.color-scheme-transition *::after {
  transition: all 0.3s ease !important;
  transition-delay: 0 !important;
}

.text-theme-primary {
  color: var(--sv-primary-600);
}
[data-theme=dark] .text-theme-primary {
  color: var(--sv-primary-400);
}

.text-theme-secondary {
  color: var(--sv-secondary-600);
}
[data-theme=dark] .text-theme-secondary {
  color: var(--sv-secondary-400);
}

.bg-theme-primary {
  background-color: var(--sv-bg-primary);
}

.bg-theme-secondary {
  background-color: var(--sv-bg-secondary);
}

.bg-theme-surface {
  background-color: var(--sv-bg-surface);
}

.bg-theme-app {
  background-color: var(--sv-bg-app);
}

/* 
 * Reset and Normalize
 * A modern CSS reset that provides a solid foundation
 * Removes browser inconsistencies and provides better defaults
 */
/* Box sizing for all elements */
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/* Root element styles */
html {
  font-size: 16px;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  height: 100%;
}

/* Body */
body {
  min-height: 100%;
  line-height: 1.5;
  text-rendering: optimizeSpeed;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Headers */
h1, h2, h3, h4, h5, h6 {
  margin: 0;
  font-weight: inherit;
  font-size: inherit;
  line-height: inherit;
}

/* Inline elements */
a {
  text-decoration: none;
  color: inherit;
  cursor: pointer;
}

a:focus {
  outline: none;
}

/* Lists */
ol, ul, dl {
  list-style: none;
  margin: 0;
  padding: 0;
}

/* Form elements */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
}

button,
input {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
  appearance: button;
  cursor: pointer;
}

button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/* Remove all animations and transitions for people who prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
/* Fallback for browsers that don't support prefers-reduced-motion */
@supports not (prefers-reduced-motion: reduce) {
  /* We can't detect if a user would prefer reduced motion, so we 
     rely on a .reduce-motion class that can be added programmatically
     when the user indicates this preference through UI controls */
  .reduce-motion *,
  .reduce-motion *::before,
  .reduce-motion *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
/* When reduced-motion is active, these utility classes help maintain 
   essential animations despite the global motion reduction settings */
@media (prefers-reduced-motion: no-preference) {
  .motion-safe {
    transition-property: inherit;
    animation-duration: inherit;
  }
}

.motion-critical {
  /* Critical animations still run even with reduced motion preference
     Use this class only for animations that are essential to functionality */
  transition-property: inherit !important;
  animation-duration: inherit !important;
}

/* Images */
img, svg {
  max-width: 100%;
  height: auto;
  display: block;
}

/* Tables */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* Make line-height work properly in flex containers */
.flex {
  display: flex;
  align-items: baseline;
}

/* Remove default fieldset styles */
fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0;
}

/* Hidden elements */
[hidden] {
  display: none !important;
}

/* Disable iOS/Safari zooming on focus */
input, textarea, select, button {
  font-size: 16px;
}

/* Fix for Firefox */
abbr[title] {
  text-decoration: underline dotted;
}

/* Normalize line breaks */
pre, code, kbd, samp {
  font-family: monospace, monospace;
}

/* Prevent text from being selectable */
.no-select {
  user-select: none;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-justify {
  text-align: justify;
}

.text-underline {
  text-decoration: underline;
}

.text-line-through {
  text-decoration: line-through;
}

.text-no-underline {
  text-decoration: none;
}

.text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.text-break {
  word-break: break-word;
  overflow-wrap: break-word;
}

.font-main {
  font-family: var(--sv-font-family-main);
}

.font-heading {
  font-family: var(--sv-font-family-heading);
}

.font-mono {
  font-family: var(--sv-font-family-mono);
}

.text-xs {
  font-size: var(--sv-text-xs);
}

.text-sm {
  font-size: var(--sv-text-sm);
}

.text-base {
  font-size: var(--sv-text-base);
}

.text-lg {
  font-size: var(--sv-text-lg);
}

.text-xl {
  font-size: var(--sv-text-xl);
}

.text-2xl {
  font-size: var(--sv-text-2xl);
}

.text-3xl {
  font-size: var(--sv-text-3xl);
}

.text-4xl {
  font-size: var(--sv-text-4xl);
}

.text-5xl {
  font-size: var(--sv-text-5xl);
}

.text-6xl {
  font-size: var(--sv-text-6xl);
}

.text-body-sm {
  font-size: var(--sv-text-body-sm);
}

.text-body-md {
  font-size: var(--sv-text-body-md);
}

.text-body-lg {
  font-size: var(--sv-text-body-lg);
}

.text-heading-sm {
  font-size: var(--sv-text-heading-sm);
}

.text-heading-md {
  font-size: var(--sv-text-heading-md);
}

.text-heading-lg {
  font-size: var(--sv-text-heading-lg);
}

.font-light {
  font-weight: var(--sv-font-light);
}

.font-normal {
  font-weight: var(--sv-font-normal);
}

.font-medium {
  font-weight: var(--sv-font-medium);
}

.font-semibold {
  font-weight: var(--sv-font-semibold);
}

.font-bold {
  font-weight: var(--sv-font-bold);
}

.font-extrabold {
  font-weight: var(--sv-font-extrabold);
}

.leading-none {
  line-height: var(--sv-leading-none);
}

.leading-tight {
  line-height: var(--sv-leading-tight);
}

.leading-snug {
  line-height: var(--sv-leading-snug);
}

.leading-normal {
  line-height: var(--sv-leading-normal);
}

.leading-relaxed {
  line-height: var(--sv-leading-relaxed);
}

.leading-loose {
  line-height: var(--sv-leading-loose);
}

.tracking-tighter {
  letter-spacing: var(--sv-tracking-tighter);
}

.tracking-tight {
  letter-spacing: var(--sv-tracking-tight);
}

.tracking-normal {
  letter-spacing: var(--sv-tracking-normal);
}

.tracking-wide {
  letter-spacing: var(--sv-tracking-wide);
}

.tracking-wider {
  letter-spacing: var(--sv-tracking-wider);
}

.tracking-widest {
  letter-spacing: var(--sv-tracking-widest);
}

.text-primary {
  color: var(--sv-primary);
}

.text-primary-light {
  color: var(--sv-primary-light);
}

.text-primary-dark {
  color: var(--sv-primary-dark);
}

.text-secondary {
  color: var(--sv-secondary);
}

.text-secondary-light {
  color: var(--sv-secondary-light);
}

.text-secondary-dark {
  color: var(--sv-secondary-dark);
}

.text-tertiary {
  color: var(--sv-tertiary);
}

.text-tertiary-light {
  color: var(--sv-tertiary-light);
}

.text-tertiary-dark {
  color: var(--sv-tertiary-dark);
}

.text-success {
  color: var(--sv-success);
}

.text-info {
  color: var(--sv-info);
}

.text-warning {
  color: var(--sv-warning);
}

.text-error {
  color: var(--sv-error);
}

.text-on-dark {
  color: var(--sv-text-on-dark);
}

.text-on-light {
  color: var(--sv-text-on-light);
}

.text-accent {
  color: var(--sv-text-accent);
}

.text-secondary-text {
  color: var(--sv-text-secondary);
}

.text-tertiary-text {
  color: var(--sv-text-tertiary);
}

.bg-primary {
  background-color: var(--sv-primary);
}

.bg-primary-light {
  background-color: var(--sv-primary-light);
}

.bg-primary-dark {
  background-color: var(--sv-primary-dark);
}

.bg-secondary {
  background-color: var(--sv-secondary);
}

.bg-secondary-light {
  background-color: var(--sv-secondary-light);
}

.bg-secondary-dark {
  background-color: var(--sv-secondary-dark);
}

.bg-tertiary {
  background-color: var(--sv-tertiary);
}

.bg-tertiary-light {
  background-color: var(--sv-tertiary-light);
}

.bg-tertiary-dark {
  background-color: var(--sv-tertiary-dark);
}

.bg-success {
  background-color: var(--sv-success);
}

.bg-info {
  background-color: var(--sv-info);
}

.bg-warning {
  background-color: var(--sv-warning);
}

.bg-error {
  background-color: var(--sv-error);
}

.bg-primary-surface {
  background-color: var(--sv-bg-primary);
}

.bg-secondary-surface {
  background-color: var(--sv-bg-secondary);
}

.bg-surface {
  background-color: var(--sv-bg-surface);
}

.bg-element {
  background-color: var(--sv-bg-element);
}

.bg-element-hover {
  background-color: var(--sv-bg-element-hover);
}

.bg-element-active {
  background-color: var(--sv-bg-element-active);
}

.border-primary {
  border-color: var(--sv-primary);
}

.border-primary-light {
  border-color: var(--sv-primary-light);
}

.border-primary-dark {
  border-color: var(--sv-primary-dark);
}

.border-secondary {
  border-color: var(--sv-secondary);
}

.border-secondary-light {
  border-color: var(--sv-secondary-light);
}

.border-secondary-dark {
  border-color: var(--sv-secondary-dark);
}

.border-tertiary {
  border-color: var(--sv-tertiary);
}

.border-tertiary-light {
  border-color: var(--sv-tertiary-light);
}

.border-tertiary-dark {
  border-color: var(--sv-tertiary-dark);
}

.border-success {
  border-color: var(--sv-success);
}

.border-info {
  border-color: var(--sv-info);
}

.border-warning {
  border-color: var(--sv-warning);
}

.border-error {
  border-color: var(--sv-error);
}

.border-light {
  border-color: var(--sv-border-light);
}

.border-medium {
  border-color: var(--sv-border-medium);
}

.border-dark {
  border-color: var(--sv-border-dark);
}

.border-default {
  border-color: var(--sv-border-default);
}

.bg-success-color {
  background-color: var(--sv-success);
}

.bg-info-color {
  background-color: var(--sv-info);
}

.bg-warning-color {
  background-color: var(--sv-warning);
}

.bg-error-color {
  background-color: var(--sv-error);
}

.text-success-color {
  color: var(--sv-success);
}

.text-info-color {
  color: var(--sv-info);
}

.text-warning-color {
  color: var(--sv-warning);
}

.text-error-color {
  color: var(--sv-error);
}

.container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: var(--sv-space-4);
  padding-left: var(--sv-space-4);
}
@media (min-width: var(--sv-breakpoint-sm)) {
  .container {
    max-width: var(--sv-container-sm);
  }
}
@media (min-width: var(--sv-breakpoint-md)) {
  .container {
    max-width: var(--sv-container-md);
  }
}
@media (min-width: var(--sv-breakpoint-lg)) {
  .container {
    max-width: var(--sv-container-lg);
  }
}
@media (min-width: var(--sv-breakpoint-xl)) {
  .container {
    max-width: var(--sv-container-xl);
  }
}
@media (min-width: var(--sv-breakpoint-xxl)) {
  .container {
    max-width: var(--sv-container-xxl);
  }
}

.full-width {
  width: 100%;
}

.full-height {
  height: 100%;
}

.full-screen {
  width: 100vw;
  height: 100vh;
}

.centered {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flex {
  display: flex;
}

.flex-column {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.items-center {
  align-items: center;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-scroll {
  overflow: scroll;
}

.overflow-x-auto {
  overflow-x: auto;
}

.overflow-y-auto {
  overflow-y: auto;
}

.icon-size-xs {
  width: var(--sv-icon-size-xs);
  height: var(--sv-icon-size-xs);
}

.icon-size-sm {
  width: var(--sv-icon-size-sm);
  height: var(--sv-icon-size-sm);
}

.icon-size-md {
  width: var(--sv-icon-size-md);
  height: var(--sv-icon-size-md);
}

.icon-size-lg {
  width: var(--sv-icon-size-lg);
  height: var(--sv-icon-size-lg);
}

.icon-size-xl {
  width: var(--sv-icon-size-xl);
  height: var(--sv-icon-size-xl);
}

.icon-size-2xl {
  width: var(--sv-icon-size-2xl);
  height: var(--sv-icon-size-2xl);
}

.btn-size-sm {
  width: var(--sv-btn-size-sm);
  height: var(--sv-btn-size-sm);
}

.btn-size-md {
  width: var(--sv-btn-size-md);
  height: var(--sv-btn-size-md);
}

.btn-size-lg {
  width: var(--sv-btn-size-lg);
  height: var(--sv-btn-size-lg);
}

.shadow-none {
  box-shadow: var(--sv-shadow-none);
}

.shadow-xs {
  box-shadow: var(--sv-shadow-xs);
}

.shadow-sm {
  box-shadow: var(--sv-shadow-sm);
}

.shadow-md {
  box-shadow: var(--sv-shadow-md);
}

.shadow-lg {
  box-shadow: var(--sv-shadow-lg);
}

.shadow-xl {
  box-shadow: var(--sv-shadow-xl);
}

.shadow-2xl {
  box-shadow: var(--sv-shadow-2xl);
}

.shadow-inner {
  box-shadow: var(--sv-shadow-inner);
}

.shadow-outline {
  box-shadow: var(--sv-shadow-outline);
}

.shadow-top {
  box-shadow: var(--sv-shadow-top);
}

.shadow-right {
  box-shadow: var(--sv-shadow-right);
}

.shadow-bottom {
  box-shadow: var(--sv-shadow-bottom);
}

.shadow-left {
  box-shadow: var(--sv-shadow-left);
}

.shadow-focus {
  box-shadow: var(--sv-shadow-focus);
}

.shadow-focus-error {
  box-shadow: var(--sv-shadow-focus-error);
}

.shadow-focus-success {
  box-shadow: var(--sv-shadow-focus-success);
}

.radius-none {
  border-radius: var(--sv-radius-none);
}

.radius-xs {
  border-radius: var(--sv-radius-xs);
}

.radius-sm {
  border-radius: var(--sv-radius-sm);
}

.radius-md {
  border-radius: var(--sv-radius-md);
}

.radius-lg {
  border-radius: var(--sv-radius-lg);
}

.radius-xl {
  border-radius: var(--sv-radius-xl);
}

.radius-2xl {
  border-radius: var(--sv-radius-2xl);
}

.radius-3xl {
  border-radius: var(--sv-radius-3xl);
}

.radius-full {
  border-radius: var(--sv-radius-full);
}

.p-0 {
  padding: var(--sv-padding-0);
}

.p-1 {
  padding: var(--sv-padding-1);
}

.p-2 {
  padding: var(--sv-padding-2);
}

.p-3 {
  padding: var(--sv-padding-3);
}

.p-4 {
  padding: var(--sv-padding-4);
}

.p-5 {
  padding: var(--sv-padding-5);
}

.p-6 {
  padding: var(--sv-padding-6);
}

.p-7 {
  padding: var(--sv-padding-7);
}

.p-8 {
  padding: var(--sv-padding-8);
}

.p-10 {
  padding: var(--sv-padding-10);
}

.p-12 {
  padding: var(--sv-padding-12);
}

.p-16 {
  padding: var(--sv-padding-16);
}

.p-20 {
  padding: var(--sv-padding-20);
}

.p-24 {
  padding: var(--sv-padding-24);
}

.p-32 {
  padding: var(--sv-padding-32);
}

.p-xs {
  padding: var(--sv-padding-xs);
}

.p-sm {
  padding: var(--sv-padding-sm);
}

.p-md {
  padding: var(--sv-padding-md);
}

.p-lg {
  padding: var(--sv-padding-lg);
}

.p-xl {
  padding: var(--sv-padding-xl);
}

.p-2xl {
  padding: var(--sv-padding-2xl);
}

.p-3xl {
  padding: var(--sv-padding-3xl);
}

.m-space-0 {
  margin: var(--sv-space-0);
}

.m-space-1 {
  margin: var(--sv-space-1);
}

.m-space-2 {
  margin: var(--sv-space-2);
}

.m-space-3 {
  margin: var(--sv-space-3);
}

.m-space-4 {
  margin: var(--sv-space-4);
}

.m-space-5 {
  margin: var(--sv-space-5);
}

.m-space-6 {
  margin: var(--sv-space-6);
}

.m-space-7 {
  margin: var(--sv-space-7);
}

.m-space-8 {
  margin: var(--sv-space-8);
}

.m-space-10 {
  margin: var(--sv-space-10);
}

.m-space-12 {
  margin: var(--sv-space-12);
}

.m-space-16 {
  margin: var(--sv-space-16);
}

.m-space-20 {
  margin: var(--sv-space-20);
}

.m-space-24 {
  margin: var(--sv-space-24);
}

.m-space-32 {
  margin: var(--sv-space-32);
}

.m-space-xs {
  margin: var(--sv-space-xs);
}

.m-space-sm {
  margin: var(--sv-space-sm);
}

.m-space-md {
  margin: var(--sv-space-md);
}

.m-space-lg {
  margin: var(--sv-space-lg);
}

.m-space-xl {
  margin: var(--sv-space-xl);
}

.m-space-2xl {
  margin: var(--sv-space-2xl);
}

.m-space-3xl {
  margin: var(--sv-space-3xl);
}

.my-space-xs {
  margin-top: var(--sv-space-xs);
  margin-bottom: var(--sv-space-xs);
}

.my-space-sm {
  margin-top: var(--sv-space-sm);
  margin-bottom: var(--sv-space-sm);
}

.my-space-md {
  margin-top: var(--sv-space-md);
  margin-bottom: var(--sv-space-md);
}

.my-space-lg {
  margin-top: var(--sv-space-lg);
  margin-bottom: var(--sv-space-lg);
}

.my-space-xl {
  margin-top: var(--sv-space-xl);
  margin-bottom: var(--sv-space-xl);
}

.my-space-2xl {
  margin-top: var(--sv-space-2xl);
  margin-bottom: var(--sv-space-2xl);
}

.my-space-3xl {
  margin-top: var(--sv-space-3xl);
  margin-bottom: var(--sv-space-3xl);
}

.mx-space-xs {
  margin-left: var(--sv-space-xs);
  margin-right: var(--sv-space-xs);
}

.mx-space-sm {
  margin-left: var(--sv-space-sm);
  margin-right: var(--sv-space-sm);
}

.mx-space-md {
  margin-left: var(--sv-space-md);
  margin-right: var(--sv-space-md);
}

.mx-space-lg {
  margin-left: var(--sv-space-lg);
  margin-right: var(--sv-space-lg);
}

.mx-space-xl {
  margin-left: var(--sv-space-xl);
  margin-right: var(--sv-space-xl);
}

.mx-space-2xl {
  margin-left: var(--sv-space-2xl);
  margin-right: var(--sv-space-2xl);
}

.mx-space-3xl {
  margin-left: var(--sv-space-3xl);
  margin-right: var(--sv-space-3xl);
}

.p-space-0 {
  padding: var(--sv-space-0);
}

.p-space-1 {
  padding: var(--sv-space-1);
}

.p-space-2 {
  padding: var(--sv-space-2);
}

.p-space-3 {
  padding: var(--sv-space-3);
}

.p-space-4 {
  padding: var(--sv-space-4);
}

.p-space-5 {
  padding: var(--sv-space-5);
}

.p-space-6 {
  padding: var(--sv-space-6);
}

.p-space-7 {
  padding: var(--sv-space-7);
}

.p-space-8 {
  padding: var(--sv-space-8);
}

.p-space-10 {
  padding: var(--sv-space-10);
}

.p-space-12 {
  padding: var(--sv-space-12);
}

.p-space-16 {
  padding: var(--sv-space-16);
}

.p-space-20 {
  padding: var(--sv-space-20);
}

.p-space-24 {
  padding: var(--sv-space-24);
}

.p-space-32 {
  padding: var(--sv-space-32);
}

.p-space-xs {
  padding: var(--sv-space-xs);
}

.p-space-sm {
  padding: var(--sv-space-sm);
}

.p-space-md {
  padding: var(--sv-space-md);
}

.p-space-lg {
  padding: var(--sv-space-lg);
}

.p-space-xl {
  padding: var(--sv-space-xl);
}

.p-space-2xl {
  padding: var(--sv-space-2xl);
}

.p-space-3xl {
  padding: var(--sv-space-3xl);
}

.py-space-xs {
  padding-top: var(--sv-space-xs);
  padding-bottom: var(--sv-space-xs);
}

.py-space-sm {
  padding-top: var(--sv-space-sm);
  padding-bottom: var(--sv-space-sm);
}

.py-space-md {
  padding-top: var(--sv-space-md);
  padding-bottom: var(--sv-space-md);
}

.py-space-lg {
  padding-top: var(--sv-space-lg);
  padding-bottom: var(--sv-space-lg);
}

.py-space-xl {
  padding-top: var(--sv-space-xl);
  padding-bottom: var(--sv-space-xl);
}

.py-space-2xl {
  padding-top: var(--sv-space-2xl);
  padding-bottom: var(--sv-space-2xl);
}

.py-space-3xl {
  padding-top: var(--sv-space-3xl);
  padding-bottom: var(--sv-space-3xl);
}

.px-space-xs {
  padding-left: var(--sv-space-xs);
  padding-right: var(--sv-space-xs);
}

.px-space-sm {
  padding-left: var(--sv-space-sm);
  padding-right: var(--sv-space-sm);
}

.px-space-md {
  padding-left: var(--sv-space-md);
  padding-right: var(--sv-space-md);
}

.px-space-lg {
  padding-left: var(--sv-space-lg);
  padding-right: var(--sv-space-lg);
}

.px-space-xl {
  padding-left: var(--sv-space-xl);
  padding-right: var(--sv-space-xl);
}

.px-space-2xl {
  padding-left: var(--sv-space-2xl);
  padding-right: var(--sv-space-2xl);
}

.px-space-3xl {
  padding-left: var(--sv-space-3xl);
  padding-right: var(--sv-space-3xl);
}

.gap-space-xs {
  gap: var(--sv-space-xs);
}

.gap-space-sm {
  gap: var(--sv-space-sm);
}

.gap-space-md {
  gap: var(--sv-space-md);
}

.gap-space-lg {
  gap: var(--sv-space-lg);
}

.gap-space-xl {
  gap: var(--sv-space-xl);
}

.gap-space-2xl {
  gap: var(--sv-space-2xl);
}

.gap-space-3xl {
  gap: var(--sv-space-3xl);
}

.size-0 {
  width: var(--sv-size-0);
  height: var(--sv-size-0);
}

.size-1 {
  width: var(--sv-size-1);
  height: var(--sv-size-1);
}

.size-2 {
  width: var(--sv-size-2);
  height: var(--sv-size-2);
}

.size-3 {
  width: var(--sv-size-3);
  height: var(--sv-size-3);
}

.size-4 {
  width: var(--sv-size-4);
  height: var(--sv-size-4);
}

.size-5 {
  width: var(--sv-size-5);
  height: var(--sv-size-5);
}

.size-6 {
  width: var(--sv-size-6);
  height: var(--sv-size-6);
}

.size-7 {
  width: var(--sv-size-7);
  height: var(--sv-size-7);
}

.size-8 {
  width: var(--sv-size-8);
  height: var(--sv-size-8);
}

.size-10 {
  width: var(--sv-size-10);
  height: var(--sv-size-10);
}

.size-12 {
  width: var(--sv-size-12);
  height: var(--sv-size-12);
}

.size-16 {
  width: var(--sv-size-16);
  height: var(--sv-size-16);
}

.size-20 {
  width: var(--sv-size-20);
  height: var(--sv-size-20);
}

.size-24 {
  width: var(--sv-size-24);
  height: var(--sv-size-24);
}

.size-32 {
  width: var(--sv-size-32);
  height: var(--sv-size-32);
}

.size-40 {
  width: var(--sv-size-40);
  height: var(--sv-size-40);
}

.size-48 {
  width: var(--sv-size-48);
  height: var(--sv-size-48);
}

.size-64 {
  width: var(--sv-size-64);
  height: var(--sv-size-64);
}

.size-xs {
  width: var(--sv-size-xs);
  height: var(--sv-size-xs);
}

.size-sm {
  width: var(--sv-size-sm);
  height: var(--sv-size-sm);
}

.size-md {
  width: var(--sv-size-md);
  height: var(--sv-size-md);
}

.size-lg {
  width: var(--sv-size-lg);
  height: var(--sv-size-lg);
}

.size-xl {
  width: var(--sv-size-xl);
  height: var(--sv-size-xl);
}

.size-2xl {
  width: var(--sv-size-2xl);
  height: var(--sv-size-2xl);
}

.size-3xl {
  width: var(--sv-size-3xl);
  height: var(--sv-size-3xl);
}

:focus,
:focus-visible {
  outline: var(--sv-focus-ring-width, 2px) solid var(--sv-focus-ring-color, rgba(37, 99, 235, 0.8));
  outline-offset: var(--sv-focus-ring-offset, 2px);
}

:focus:not(:focus-visible) {
  outline: none;
}

button:focus-visible,
[role=button]:focus-visible,
input:focus-visible,
select:focus-visible,
textarea:focus-visible,
a:focus-visible {
  outline: var(--sv-focus-ring-width, 2px) solid var(--sv-focus-ring-color, rgba(37, 99, 235, 0.8));
  outline-offset: var(--sv-focus-ring-offset, 2px);
}

button {
  cursor: pointer;
}

[disabled],
.disabled {
  cursor: not-allowed;
  opacity: 0.6;
}

input,
select,
textarea,
button {
  min-height: var(--sv-input-height-md, 2.5rem);
}

label {
  display: block;
  margin-bottom: var(--sv-space-2, 0.5rem);
}

.skip-to-content {
  position: absolute;
  top: var(--sv-skip-link-position-top, 0.5rem);
  left: var(--sv-skip-link-position-left, 0.5rem);
  background-color: var(--sv-skip-link-bg, #ffffff);
  color: var(--sv-skip-link-color, #111111);
  padding: var(--sv-skip-link-padding, 0.5rem 1rem);
  z-index: var(--sv-z-index-skip-link, 9999);
  transform: translateY(-200%);
  transition: transform 0.3s ease;
}
.skip-to-content:focus {
  transform: translateY(0);
}

@media (prefers-reduced-motion: reduce) {
  .reduced-motion *,
  .reduced-motion *::before,
  .reduced-motion *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

.touch-target {
  min-width: var(--sv-min-touch-target, 2.75rem);
  min-height: var(--sv-min-touch-target, 2.75rem);
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.z-default {
  z-index: var(--sv-z-index-default, 1);
}

.z-dropdown {
  z-index: var(--sv-z-index-dropdown, 1010);
}

.z-header {
  z-index: var(--sv-z-index-header, 1020);
}

.z-tooltip {
  z-index: var(--sv-z-index-tooltip, 1030);
}

.z-popover {
  z-index: var(--sv-z-index-popover, 1040);
}

.z-modal {
  z-index: var(--sv-z-index-modal, 1050);
}

.z-overlay {
  z-index: var(--sv-z-index-overlay, 1000);
}

.z-skip-link {
  z-index: var(--sv-z-index-skip-link, 9999);
}

.z-negative {
  z-index: var(--sv-z-index-negative, -1);
}

.motion-duration-short {
  transition-duration: var(--sv-motion-duration-short) !important;
}

.motion-duration-medium {
  transition-duration: var(--sv-motion-duration-medium) !important;
}

.motion-duration-long {
  transition-duration: var(--sv-motion-duration-long) !important;
}

.motion-ease-standard {
  transition-timing-function: var(--sv-motion-ease-standard) !important;
}

.motion-ease-decelerate {
  transition-timing-function: var(--sv-motion-ease-decelerate) !important;
}

.motion-ease-accelerate {
  transition-timing-function: var(--sv-motion-ease-accelerate) !important;
}

.motion-fade {
  animation-name: var(--sv-motion-keyfade);
  animation-duration: var(--sv-motion-duration-medium);
  animation-timing-function: var(--sv-motion-ease-standard);
}

.motion-bounce {
  animation-name: var(--sv-motion-keybounce);
  animation-duration: var(--sv-motion-duration-medium);
  animation-timing-function: var(--sv-motion-ease-decelerate);
}

.motion-spring {
  animation-name: var(--sv-motion-keyspring);
  animation-duration: var(--sv-motion-duration-medium);
  animation-timing-function: var(--sv-motion-ease-accelerate);
}

.motion-spinner {
  animation-name: spin;
  animation-duration: var(--sv-spinner-duration);
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

/**
 * UI Control Base - Core Styles
 * Version: 2.0.0
 * Last Updated: April 29, 2025
 * 
 * This file establishes the foundational styles for all interactive UI components
 * in the SkillVo design system. It serves as the first level in our 
 * three-tier styling architecture:
 * 1. sv-ui-control-base (this file) - Base styles for all interactive controls
 * 2. Category-specific base classes (e.g., sv-button-base, sv-input-base)
 * 3. Component-specific classes (e.g., sv-button, sv-input)
 */
/* ==========================================================================
   TABLE OF CONTENTS:

   1. VARIABLES & CONFIGURATION
   2. MIXINS
      2.1 State Mixins
      2.2 Layout Mixins
      2.3 Visual Style Mixins
      2.4 Typography Mixins
      2.5 Spacing Mixins
      2.6 Animation Mixins
      2.7 Accessibility Mixins
   3. BASE CLASS DEFINITION
   4. SIZE VARIATIONS
   5. ANIMATION KEYFRAMES
   6. ANIMATION UTILITIES
   7. ACCESSIBILITY UTILITIES
   8. PRINT STYLES
   9. RTL SUPPORT
   10. HIGH CONTRAST MODE
   ========================================================================== */
/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */
/* ==========================================================================
   2. MIXINS
   ========================================================================== */
/* 2.1 State Mixins
   ========================================================================== */
/* 2.2 Layout Mixins
   ========================================================================== */
/* 2.3 Visual Style Mixins
   ========================================================================== */
/* 2.4 Typography Mixins
   ========================================================================== */
/* 2.5 Spacing Mixins
   ========================================================================== */
/* 2.6 Animation Mixins
   ========================================================================== */
/* 2.7 Accessibility Mixins
   ========================================================================== */
/* ==========================================================================
   3. BASE CLASS DEFINITION
   ========================================================================== */
.sv-ui-control-base, .sv-selection-control-base, .sv-nav-control-base, .sv-input-base, .sv-info-display-base, .sv-feedback-base, .sv-data-display-base, .sv-container-base, .sv-action-control-base {
  box-sizing: border-box;
  margin: 0;
  font-family: var(--sv-font-family-main);
  font-size: var(--sv-text-base);
  font-weight: var(--sv-font-normal);
  line-height: var(--sv-leading-normal);
  color: var(--sv-text-primary);
  background-color: var(--sv-bg-surface);
  border: 1px solid var(--sv-border-medium);
  border-radius: var(--sv-radius-md);
  transition-property: all;
  transition-duration: var(--sv-motion-duration-medium);
  transition-timing-function: var(--sv-motion-ease-standard);
}
@media (prefers-reduced-motion: reduce) {
  .sv-ui-control-base, .sv-selection-control-base, .sv-nav-control-base, .sv-input-base, .sv-info-display-base, .sv-feedback-base, .sv-data-display-base, .sv-container-base, .sv-action-control-base {
    transition: none;
  }
}
.sv-ui-control-base:focus, .sv-selection-control-base:focus, .sv-nav-control-base:focus, .sv-input-base:focus, .sv-info-display-base:focus, .sv-feedback-base:focus, .sv-data-display-base:focus, .sv-container-base:focus, .sv-action-control-base:focus {
  outline: none;
  box-shadow: var(--sv-shadow-focus);
}
.sv-ui-control-base:focus-visible, .sv-selection-control-base:focus-visible, .sv-nav-control-base:focus-visible, .sv-input-base:focus-visible, .sv-info-display-base:focus-visible, .sv-feedback-base:focus-visible, .sv-data-display-base:focus-visible, .sv-container-base:focus-visible, .sv-action-control-base:focus-visible {
  outline: var(--sv-focus-ring-width) solid var(--sv-focus-ring-color);
  outline-offset: var(--sv-focus-ring-offset);
}
.sv-ui-control-base:hover:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly), .sv-selection-control-base:hover:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly), .sv-nav-control-base:hover:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly), .sv-input-base:hover:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly), .sv-info-display-base:hover:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly), .sv-feedback-base:hover:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly), .sv-data-display-base:hover:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly), .sv-container-base:hover:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly), .sv-action-control-base:hover:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly) {
  background-color: var(--sv-bg-element-hover);
  border-color: var(--sv-border-medium);
}
.sv-ui-control-base:active:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly), .sv-selection-control-base:active:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly), .sv-nav-control-base:active:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly), .sv-input-base:active:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly), .sv-info-display-base:active:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly), .sv-feedback-base:active:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly), .sv-data-display-base:active:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly), .sv-container-base:active:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly), .sv-action-control-base:active:not(:disabled):not(.disabled):not([readonly]):not(.readonly):not(:disabled):not(.disabled):not([readonly]):not(.readonly) {
  background-color: var(--sv-bg-element-active);
  border-color: var(--sv-border-dark);
}
.sv-ui-control-base.error, .error.sv-selection-control-base, .error.sv-nav-control-base, .error.sv-input-base, .error.sv-info-display-base, .error.sv-feedback-base, .error.sv-data-display-base, .error.sv-container-base, .error.sv-action-control-base, .sv-ui-control-base.has-error, .has-error.sv-selection-control-base, .has-error.sv-nav-control-base, .has-error.sv-input-base, .has-error.sv-info-display-base, .has-error.sv-feedback-base, .has-error.sv-data-display-base, .has-error.sv-container-base, .has-error.sv-action-control-base, .sv-ui-control-base[aria-invalid=true], [aria-invalid=true].sv-selection-control-base, [aria-invalid=true].sv-nav-control-base, [aria-invalid=true].sv-input-base, [aria-invalid=true].sv-info-display-base, [aria-invalid=true].sv-feedback-base, [aria-invalid=true].sv-data-display-base, [aria-invalid=true].sv-container-base, [aria-invalid=true].sv-action-control-base {
  border-color: var(--sv-error);
  color: var(--sv-error);
}
.sv-ui-control-base.error:focus, .error.sv-selection-control-base:focus, .error.sv-nav-control-base:focus, .error.sv-input-base:focus, .error.sv-info-display-base:focus, .error.sv-feedback-base:focus, .error.sv-data-display-base:focus, .error.sv-container-base:focus, .error.sv-action-control-base:focus, .sv-ui-control-base.has-error:focus, .has-error.sv-selection-control-base:focus, .has-error.sv-nav-control-base:focus, .has-error.sv-input-base:focus, .has-error.sv-info-display-base:focus, .has-error.sv-feedback-base:focus, .has-error.sv-data-display-base:focus, .has-error.sv-container-base:focus, .has-error.sv-action-control-base:focus, .sv-ui-control-base[aria-invalid=true]:focus, [aria-invalid=true].sv-selection-control-base:focus, [aria-invalid=true].sv-nav-control-base:focus, [aria-invalid=true].sv-input-base:focus, [aria-invalid=true].sv-info-display-base:focus, [aria-invalid=true].sv-feedback-base:focus, [aria-invalid=true].sv-data-display-base:focus, [aria-invalid=true].sv-container-base:focus, [aria-invalid=true].sv-action-control-base:focus {
  box-shadow: var(--sv-shadow-focus-error);
}
.sv-ui-control-base.success, .success.sv-selection-control-base, .success.sv-nav-control-base, .success.sv-input-base, .success.sv-info-display-base, .success.sv-feedback-base, .success.sv-data-display-base, .success.sv-container-base, .success.sv-action-control-base, .sv-ui-control-base.has-success, .has-success.sv-selection-control-base, .has-success.sv-nav-control-base, .has-success.sv-input-base, .has-success.sv-info-display-base, .has-success.sv-feedback-base, .has-success.sv-data-display-base, .has-success.sv-container-base, .has-success.sv-action-control-base, .sv-ui-control-base[aria-invalid=false], [aria-invalid=false].sv-selection-control-base, [aria-invalid=false].sv-nav-control-base, [aria-invalid=false].sv-input-base, [aria-invalid=false].sv-info-display-base, [aria-invalid=false].sv-feedback-base, [aria-invalid=false].sv-data-display-base, [aria-invalid=false].sv-container-base, [aria-invalid=false].sv-action-control-base {
  border-color: var(--sv-success);
  color: var(--sv-success);
}
.sv-ui-control-base.success:focus, .success.sv-selection-control-base:focus, .success.sv-nav-control-base:focus, .success.sv-input-base:focus, .success.sv-info-display-base:focus, .success.sv-feedback-base:focus, .success.sv-data-display-base:focus, .success.sv-container-base:focus, .success.sv-action-control-base:focus, .sv-ui-control-base.has-success:focus, .has-success.sv-selection-control-base:focus, .has-success.sv-nav-control-base:focus, .has-success.sv-input-base:focus, .has-success.sv-info-display-base:focus, .has-success.sv-feedback-base:focus, .has-success.sv-data-display-base:focus, .has-success.sv-container-base:focus, .has-success.sv-action-control-base:focus, .sv-ui-control-base[aria-invalid=false]:focus, [aria-invalid=false].sv-selection-control-base:focus, [aria-invalid=false].sv-nav-control-base:focus, [aria-invalid=false].sv-input-base:focus, [aria-invalid=false].sv-info-display-base:focus, [aria-invalid=false].sv-feedback-base:focus, [aria-invalid=false].sv-data-display-base:focus, [aria-invalid=false].sv-container-base:focus, [aria-invalid=false].sv-action-control-base:focus {
  box-shadow: var(--sv-shadow-focus-success);
}
.sv-ui-control-base:disabled, .sv-selection-control-base:disabled, .sv-nav-control-base:disabled, .sv-input-base:disabled, .sv-info-display-base:disabled, .sv-feedback-base:disabled, .sv-data-display-base:disabled, .sv-container-base:disabled, .sv-action-control-base:disabled, .sv-ui-control-base.disabled, .disabled.sv-selection-control-base, .disabled.sv-nav-control-base, .disabled.sv-input-base, .disabled.sv-info-display-base, .disabled.sv-feedback-base, .disabled.sv-data-display-base, .disabled.sv-container-base, .disabled.sv-action-control-base {
  opacity: 0.65;
  cursor: not-allowed;
  background-color: var(--sv-bg-element);
  border-color: var(--sv-border-light);
  color: var(--sv-text-tertiary);
  pointer-events: none;
}
.sv-ui-control-base[readonly], [readonly].sv-selection-control-base, [readonly].sv-nav-control-base, [readonly].sv-input-base, [readonly].sv-info-display-base, [readonly].sv-feedback-base, [readonly].sv-data-display-base, [readonly].sv-container-base, [readonly].sv-action-control-base, .sv-ui-control-base.readonly, .readonly.sv-selection-control-base, .readonly.sv-nav-control-base, .readonly.sv-input-base, .readonly.sv-info-display-base, .readonly.sv-feedback-base, .readonly.sv-data-display-base, .readonly.sv-container-base, .readonly.sv-action-control-base {
  background-color: var(--sv-bg-element);
  border-color: var(--sv-border-light);
  cursor: default;
}
.sv-ui-control-base[readonly]:focus, [readonly].sv-selection-control-base:focus, [readonly].sv-nav-control-base:focus, [readonly].sv-input-base:focus, [readonly].sv-info-display-base:focus, [readonly].sv-feedback-base:focus, [readonly].sv-data-display-base:focus, [readonly].sv-container-base:focus, [readonly].sv-action-control-base:focus, .sv-ui-control-base.readonly:focus, .readonly.sv-selection-control-base:focus, .readonly.sv-nav-control-base:focus, .readonly.sv-input-base:focus, .readonly.sv-info-display-base:focus, .readonly.sv-feedback-base:focus, .readonly.sv-data-display-base:focus, .readonly.sv-container-base:focus, .readonly.sv-action-control-base:focus {
  box-shadow: none;
}
.sv-ui-control-base.loading, .loading.sv-selection-control-base, .loading.sv-nav-control-base, .loading.sv-input-base, .loading.sv-info-display-base, .loading.sv-feedback-base, .loading.sv-data-display-base, .loading.sv-container-base, .loading.sv-action-control-base, .sv-ui-control-base.is-loading, .is-loading.sv-selection-control-base, .is-loading.sv-nav-control-base, .is-loading.sv-input-base, .is-loading.sv-info-display-base, .is-loading.sv-feedback-base, .is-loading.sv-data-display-base, .is-loading.sv-container-base, .is-loading.sv-action-control-base, .sv-ui-control-base[aria-busy=true], [aria-busy=true].sv-selection-control-base, [aria-busy=true].sv-nav-control-base, [aria-busy=true].sv-input-base, [aria-busy=true].sv-info-display-base, [aria-busy=true].sv-feedback-base, [aria-busy=true].sv-data-display-base, [aria-busy=true].sv-container-base, [aria-busy=true].sv-action-control-base {
  position: relative;
  color: transparent;
  pointer-events: none;
}
.sv-ui-control-base.loading::after, .loading.sv-selection-control-base::after, .loading.sv-nav-control-base::after, .loading.sv-input-base::after, .loading.sv-info-display-base::after, .loading.sv-feedback-base::after, .loading.sv-data-display-base::after, .loading.sv-container-base::after, .loading.sv-action-control-base::after, .sv-ui-control-base.is-loading::after, .is-loading.sv-selection-control-base::after, .is-loading.sv-nav-control-base::after, .is-loading.sv-input-base::after, .is-loading.sv-info-display-base::after, .is-loading.sv-feedback-base::after, .is-loading.sv-data-display-base::after, .is-loading.sv-container-base::after, .is-loading.sv-action-control-base::after, .sv-ui-control-base[aria-busy=true]::after, [aria-busy=true].sv-selection-control-base::after, [aria-busy=true].sv-nav-control-base::after, [aria-busy=true].sv-input-base::after, [aria-busy=true].sv-info-display-base::after, [aria-busy=true].sv-feedback-base::after, [aria-busy=true].sv-data-display-base::after, [aria-busy=true].sv-container-base::after, [aria-busy=true].sv-action-control-base::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 16px;
  height: 16px;
  margin: -8px 0 0 -8px;
  border-radius: 50%;
  border: 2px solid rgba(var(--sv-primary-500-rgb), 0.3);
  border-top-color: var(--sv-primary);
  animation: spin var(--sv-spinner-duration) linear infinite;
}
.sv-ui-control-base.selected, .selected.sv-selection-control-base, .selected.sv-nav-control-base, .selected.sv-input-base, .selected.sv-info-display-base, .selected.sv-feedback-base, .selected.sv-data-display-base, .selected.sv-container-base, .selected.sv-action-control-base, .sv-ui-control-base.checked, .checked.sv-selection-control-base, .checked.sv-nav-control-base, .checked.sv-input-base, .checked.sv-info-display-base, .checked.sv-feedback-base, .checked.sv-data-display-base, .checked.sv-container-base, .checked.sv-action-control-base, .sv-ui-control-base[aria-selected=true], [aria-selected=true].sv-selection-control-base, [aria-selected=true].sv-nav-control-base, [aria-selected=true].sv-input-base, [aria-selected=true].sv-info-display-base, [aria-selected=true].sv-feedback-base, [aria-selected=true].sv-data-display-base, [aria-selected=true].sv-container-base, [aria-selected=true].sv-action-control-base, .sv-ui-control-base[aria-checked=true], [aria-checked=true].sv-selection-control-base, [aria-checked=true].sv-nav-control-base, [aria-checked=true].sv-input-base, [aria-checked=true].sv-info-display-base, [aria-checked=true].sv-feedback-base, [aria-checked=true].sv-data-display-base, [aria-checked=true].sv-container-base, [aria-checked=true].sv-action-control-base {
  background-color: var(--sv-bg-element-active);
  border-color: var(--sv-primary);
  color: var(--sv-text-primary);
}
.sv-ui-control-base.indeterminate, .indeterminate.sv-selection-control-base, .indeterminate.sv-nav-control-base, .indeterminate.sv-input-base, .indeterminate.sv-info-display-base, .indeterminate.sv-feedback-base, .indeterminate.sv-data-display-base, .indeterminate.sv-container-base, .indeterminate.sv-action-control-base, .sv-ui-control-base[aria-checked=mixed], [aria-checked=mixed].sv-selection-control-base, [aria-checked=mixed].sv-nav-control-base, [aria-checked=mixed].sv-input-base, [aria-checked=mixed].sv-info-display-base, [aria-checked=mixed].sv-feedback-base, [aria-checked=mixed].sv-data-display-base, [aria-checked=mixed].sv-container-base, [aria-checked=mixed].sv-action-control-base {
  background-color: var(--sv-bg-element-hover);
  border-color: var(--sv-primary);
}
.sv-ui-control-base.indeterminate::after, .indeterminate.sv-selection-control-base::after, .indeterminate.sv-nav-control-base::after, .indeterminate.sv-input-base::after, .indeterminate.sv-info-display-base::after, .indeterminate.sv-feedback-base::after, .indeterminate.sv-data-display-base::after, .indeterminate.sv-container-base::after, .indeterminate.sv-action-control-base::after, .sv-ui-control-base[aria-checked=mixed]::after, [aria-checked=mixed].sv-selection-control-base::after, [aria-checked=mixed].sv-nav-control-base::after, [aria-checked=mixed].sv-input-base::after, [aria-checked=mixed].sv-info-display-base::after, [aria-checked=mixed].sv-feedback-base::after, [aria-checked=mixed].sv-data-display-base::after, [aria-checked=mixed].sv-container-base::after, [aria-checked=mixed].sv-action-control-base::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 8px;
  height: 2px;
  margin: -1px 0 0 -4px;
  background-color: var(--sv-primary);
}
.sv-ui-control-base[aria-expanded=true], [aria-expanded=true].sv-selection-control-base, [aria-expanded=true].sv-nav-control-base, [aria-expanded=true].sv-input-base, [aria-expanded=true].sv-info-display-base, [aria-expanded=true].sv-feedback-base, [aria-expanded=true].sv-data-display-base, [aria-expanded=true].sv-container-base, [aria-expanded=true].sv-action-control-base {
  background-color: var(--sv-bg-element-active);
  border-color: var(--sv-border-dark);
}
@media (forced-colors: active) {
  .sv-ui-control-base, .sv-selection-control-base, .sv-nav-control-base, .sv-input-base, .sv-info-display-base, .sv-feedback-base, .sv-data-display-base, .sv-container-base, .sv-action-control-base {
    border: 1px solid transparent;
  }
  .sv-ui-control-base:focus, .sv-selection-control-base:focus, .sv-nav-control-base:focus, .sv-input-base:focus, .sv-info-display-base:focus, .sv-feedback-base:focus, .sv-data-display-base:focus, .sv-container-base:focus, .sv-action-control-base:focus {
    outline: 2px solid transparent;
    outline-offset: 4px;
  }
}
.sv-ui-control-base::placeholder, .sv-selection-control-base::placeholder, .sv-nav-control-base::placeholder, .sv-input-base::placeholder, .sv-info-display-base::placeholder, .sv-feedback-base::placeholder, .sv-data-display-base::placeholder, .sv-container-base::placeholder, .sv-action-control-base::placeholder {
  color: var(--sv-text-tertiary);
  opacity: 1;
}

/* ==========================================================================
   4. SIZE VARIATIONS
   ========================================================================== */
.sv-ui-size-xs {
  padding-top: var(--sv-padding-1);
  padding-bottom: var(--sv-padding-1);
  padding-left: var(--sv-padding-2);
  padding-right: var(--sv-padding-2);
  font-size: var(--sv-text-xs);
  font-weight: var(--sv-font-normal);
  line-height: var(--sv-leading-normal);
  border-radius: var(--sv-radius-xs);
  height: calc(var(--sv-min-touch-target) * 0.6);
}

.sv-ui-size-sm {
  padding-top: var(--sv-padding-1);
  padding-bottom: var(--sv-padding-1);
  padding-left: var(--sv-padding-2);
  padding-right: var(--sv-padding-2);
  font-size: var(--sv-text-sm);
  font-weight: var(--sv-font-normal);
  line-height: var(--sv-leading-normal);
  border-radius: var(--sv-radius-sm);
  height: calc(var(--sv-min-touch-target) * 0.75);
}

.sv-ui-size-md {
  padding-top: var(--sv-padding-2);
  padding-bottom: var(--sv-padding-2);
  padding-left: var(--sv-padding-3);
  padding-right: var(--sv-padding-3);
  font-size: var(--sv-text-base);
  font-weight: var(--sv-font-normal);
  line-height: var(--sv-leading-normal);
  border-radius: var(--sv-radius-md);
  height: var(--sv-min-touch-target);
}

.sv-ui-size-lg {
  padding-top: var(--sv-padding-3);
  padding-bottom: var(--sv-padding-3);
  padding-left: var(--sv-padding-4);
  padding-right: var(--sv-padding-4);
  font-size: var(--sv-text-lg);
  font-weight: var(--sv-font-normal);
  line-height: var(--sv-leading-normal);
  border-radius: var(--sv-radius-lg);
  height: calc(var(--sv-min-touch-target) * 1.25);
}

.sv-ui-size-xl {
  padding-top: var(--sv-padding-4);
  padding-bottom: var(--sv-padding-4);
  padding-left: var(--sv-padding-5);
  padding-right: var(--sv-padding-5);
  font-size: var(--sv-text-xl);
  font-weight: var(--sv-font-normal);
  line-height: var(--sv-leading-normal);
  border-radius: var(--sv-radius-xl);
  height: calc(var(--sv-min-touch-target) * 1.5);
}

/* ==========================================================================
   5. ANIMATION KEYFRAMES
   ========================================================================== */
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fade-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
@keyframes slide-in-up {
  0% {
    transform: translateY(10px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}
@keyframes slide-in-down {
  0% {
    transform: translateY(-10px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}
@keyframes slide-in-left {
  0% {
    transform: translateX(-10px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}
@keyframes slide-in-right {
  0% {
    transform: translateX(10px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}
@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-5px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(5px);
  }
}
@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}
@keyframes scale-in {
  0% {
    transform: scale(0.9);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}
@keyframes scale-out {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    transform: scale(0.9);
    opacity: 0;
  }
}
/* ==========================================================================
   6. ANIMATION UTILITIES
   ========================================================================== */
.sv-animate-fade-in {
  animation-name: fade-in;
  animation-duration: var(--sv-motion-duration-medium);
  animation-delay: 0s;
  animation-timing-function: var(--sv-motion-ease-standard);
  animation-iteration-count: 1;
  animation-fill-mode: both;
}
@media (prefers-reduced-motion: reduce) {
  .sv-animate-fade-in {
    animation: none;
  }
}

.sv-animate-fade-out {
  animation-name: fade-out;
  animation-duration: var(--sv-motion-duration-medium);
  animation-delay: 0s;
  animation-timing-function: var(--sv-motion-ease-standard);
  animation-iteration-count: 1;
  animation-fill-mode: both;
}
@media (prefers-reduced-motion: reduce) {
  .sv-animate-fade-out {
    animation: none;
  }
}

.sv-animate-slide-in-up {
  animation-name: slide-in-up;
  animation-duration: var(--sv-motion-duration-medium);
  animation-delay: 0s;
  animation-timing-function: var(--sv-motion-ease-standard);
  animation-iteration-count: 1;
  animation-fill-mode: both;
}
@media (prefers-reduced-motion: reduce) {
  .sv-animate-slide-in-up {
    animation: none;
  }
}

.sv-animate-slide-in-down {
  animation-name: slide-in-down;
  animation-duration: var(--sv-motion-duration-medium);
  animation-delay: 0s;
  animation-timing-function: var(--sv-motion-ease-standard);
  animation-iteration-count: 1;
  animation-fill-mode: both;
}
@media (prefers-reduced-motion: reduce) {
  .sv-animate-slide-in-down {
    animation: none;
  }
}

.sv-animate-slide-in-left {
  animation-name: slide-in-left;
  animation-duration: var(--sv-motion-duration-medium);
  animation-delay: 0s;
  animation-timing-function: var(--sv-motion-ease-standard);
  animation-iteration-count: 1;
  animation-fill-mode: both;
}
@media (prefers-reduced-motion: reduce) {
  .sv-animate-slide-in-left {
    animation: none;
  }
}

.sv-animate-slide-in-right {
  animation-name: slide-in-right;
  animation-duration: var(--sv-motion-duration-medium);
  animation-delay: 0s;
  animation-timing-function: var(--sv-motion-ease-standard);
  animation-iteration-count: 1;
  animation-fill-mode: both;
}
@media (prefers-reduced-motion: reduce) {
  .sv-animate-slide-in-right {
    animation: none;
  }
}

.sv-animate-spin {
  animation-name: spin;
  animation-duration: var(--sv-motion-duration-medium);
  animation-delay: 0s;
  animation-timing-function: var(--sv-motion-ease-linear);
  animation-iteration-count: infinite;
  animation-fill-mode: both;
}
@media (prefers-reduced-motion: reduce) {
  .sv-animate-spin {
    animation: none;
  }
}

.sv-animate-pulse {
  animation-name: pulse;
  animation-duration: var(--sv-motion-duration-medium);
  animation-delay: 0s;
  animation-timing-function: var(--sv-motion-ease-ease);
  animation-iteration-count: infinite;
  animation-fill-mode: both;
}
@media (prefers-reduced-motion: reduce) {
  .sv-animate-pulse {
    animation: none;
  }
}

.sv-animate-shake {
  animation-name: shake;
  animation-duration: var(--sv-motion-duration-medium);
  animation-delay: 0s;
  animation-timing-function: var(--sv-motion-ease-standard);
  animation-iteration-count: 1;
  animation-fill-mode: both;
}
@media (prefers-reduced-motion: reduce) {
  .sv-animate-shake {
    animation: none;
  }
}

.sv-animate-bounce {
  animation-name: bounce;
  animation-duration: var(--sv-motion-duration-medium);
  animation-delay: 0s;
  animation-timing-function: var(--sv-motion-ease-standard);
  animation-iteration-count: 1;
  animation-fill-mode: both;
}
@media (prefers-reduced-motion: reduce) {
  .sv-animate-bounce {
    animation: none;
  }
}

.sv-animate-scale-in {
  animation-name: scale-in;
  animation-duration: var(--sv-motion-duration-medium);
  animation-delay: 0s;
  animation-timing-function: var(--sv-motion-ease-standard);
  animation-iteration-count: 1;
  animation-fill-mode: both;
}
@media (prefers-reduced-motion: reduce) {
  .sv-animate-scale-in {
    animation: none;
  }
}

.sv-animate-scale-out {
  animation-name: scale-out;
  animation-duration: var(--sv-motion-duration-medium);
  animation-delay: 0s;
  animation-timing-function: var(--sv-motion-ease-standard);
  animation-iteration-count: 1;
  animation-fill-mode: both;
}
@media (prefers-reduced-motion: reduce) {
  .sv-animate-scale-out {
    animation: none;
  }
}

/* ==========================================================================
   7. ACCESSIBILITY UTILITIES
   ========================================================================== */
.sv-ui-visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.sv-ui-touch-target {
  min-width: var(--sv-min-touch-target);
  min-height: var(--sv-min-touch-target);
}

/* ==========================================================================
   8. PRINT STYLES
   ========================================================================== */
@media print {
  .sv-ui-control-base, .sv-selection-control-base, .sv-nav-control-base, .sv-input-base, .sv-info-display-base, .sv-feedback-base, .sv-data-display-base, .sv-container-base, .sv-action-control-base {
    border-color: #000 !important;
    color: #000 !important;
    background-color: #fff !important;
    box-shadow: none !important;
  }
  .sv-ui-control-base:not(.sv-ui-no-print-adjust), .sv-selection-control-base:not(.sv-ui-no-print-adjust), .sv-nav-control-base:not(.sv-ui-no-print-adjust), .sv-input-base:not(.sv-ui-no-print-adjust), .sv-info-display-base:not(.sv-ui-no-print-adjust), .sv-feedback-base:not(.sv-ui-no-print-adjust), .sv-data-display-base:not(.sv-ui-no-print-adjust), .sv-container-base:not(.sv-ui-no-print-adjust), .sv-action-control-base:not(.sv-ui-no-print-adjust) {
    border-width: 0.5pt !important;
  }
  .sv-ui-no-print {
    display: none !important;
  }
  * {
    transition: none !important;
    animation: none !important;
  }
}
/* ==========================================================================
   9. RTL SUPPORT
   ========================================================================== */
[dir=rtl] .sv-ui-control-base.has-directional-padding, [dir=rtl] .has-directional-padding.sv-selection-control-base, [dir=rtl] .has-directional-padding.sv-nav-control-base, [dir=rtl] .has-directional-padding.sv-input-base, [dir=rtl] .has-directional-padding.sv-info-display-base, [dir=rtl] .has-directional-padding.sv-feedback-base, [dir=rtl] .has-directional-padding.sv-data-display-base, [dir=rtl] .has-directional-padding.sv-container-base, [dir=rtl] .has-directional-padding.sv-action-control-base {
  padding-right: var(--sv-padding-start, var(--sv-padding-3));
  padding-left: var(--sv-padding-end, var(--sv-padding-3));
}

/* ==========================================================================
   10. HIGH CONTRAST MODE
   ========================================================================== */
@media (forced-colors: active) {
  .sv-ui-control-base, .sv-selection-control-base, .sv-nav-control-base, .sv-input-base, .sv-info-display-base, .sv-feedback-base, .sv-data-display-base, .sv-container-base, .sv-action-control-base {
    border-color: CanvasText;
    color: CanvasText;
    background-color: Canvas;
    forced-color-adjust: none;
  }
  .sv-ui-control-base:focus, .sv-selection-control-base:focus, .sv-nav-control-base:focus, .sv-input-base:focus, .sv-info-display-base:focus, .sv-feedback-base:focus, .sv-data-display-base:focus, .sv-container-base:focus, .sv-action-control-base:focus, .sv-ui-control-base:focus-visible, .sv-selection-control-base:focus-visible, .sv-nav-control-base:focus-visible, .sv-input-base:focus-visible, .sv-info-display-base:focus-visible, .sv-feedback-base:focus-visible, .sv-data-display-base:focus-visible, .sv-container-base:focus-visible, .sv-action-control-base:focus-visible {
    outline: 2px solid Highlight;
    outline-offset: 2px;
  }
  .sv-ui-control-base:disabled, .sv-selection-control-base:disabled, .sv-nav-control-base:disabled, .sv-input-base:disabled, .sv-info-display-base:disabled, .sv-feedback-base:disabled, .sv-data-display-base:disabled, .sv-container-base:disabled, .sv-action-control-base:disabled, .sv-ui-control-base.disabled, .disabled.sv-selection-control-base, .disabled.sv-nav-control-base, .disabled.sv-input-base, .disabled.sv-info-display-base, .disabled.sv-feedback-base, .disabled.sv-data-display-base, .disabled.sv-container-base, .disabled.sv-action-control-base {
    opacity: 1;
    color: GrayText;
    border-color: GrayText;
    background-color: Canvas;
  }
  .sv-ui-control-base.error, .error.sv-selection-control-base, .error.sv-nav-control-base, .error.sv-input-base, .error.sv-info-display-base, .error.sv-feedback-base, .error.sv-data-display-base, .error.sv-container-base, .error.sv-action-control-base, .sv-ui-control-base.has-error, .has-error.sv-selection-control-base, .has-error.sv-nav-control-base, .has-error.sv-input-base, .has-error.sv-info-display-base, .has-error.sv-feedback-base, .has-error.sv-data-display-base, .has-error.sv-container-base, .has-error.sv-action-control-base, .sv-ui-control-base[aria-invalid=true], [aria-invalid=true].sv-selection-control-base, [aria-invalid=true].sv-nav-control-base, [aria-invalid=true].sv-input-base, [aria-invalid=true].sv-info-display-base, [aria-invalid=true].sv-feedback-base, [aria-invalid=true].sv-data-display-base, [aria-invalid=true].sv-container-base, [aria-invalid=true].sv-action-control-base {
    border-color: Mark;
    color: Mark;
  }
}
/**
 * Action Controls Base - Core Styles
 * Version: 1.0.0
 * Last Updated: April 29, 2025
 * 
 * This file establishes the foundational styles for all action-based UI components
 * in the SkillVo design system. This serves as the second level in our 
 * three-tier styling architecture:
 * 1. sv-ui-control-base - Base styles for all interactive controls
 * 2. sv-action-control-base (this file) - Base styles for action controls
 * 3. Component-specific classes (e.g., sv-button, sv-link, sv-icon-button)
 */
/* ==========================================================================
   TABLE OF CONTENTS:

   1. VARIABLES & CONFIGURATION
   2. MIXINS
      2.1 Action-Specific State Mixins
      2.2 Action Layout Mixins 
   3. BASE CLASS DEFINITION
   4. VARIANTS
      4.1 Emphasis Variants
      4.2 Connectivity Variants
   5. ICONOGRAPHY SUPPORT
   6. SIZE ADJUSTMENTS
   7. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */
/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */
/* ==========================================================================
   2. MIXINS
   ========================================================================== */
/* 2.1 Action-Specific State Mixins
   ========================================================================== */
/* 2.2 Action Layout Mixins
   ========================================================================== */
/* ==========================================================================
   3. BASE CLASS DEFINITION
   ========================================================================== */
.sv-action-control-base {
  min-width: calc(var(--sv-min-touch-target) * 2);
  text-align: center;
  line-height: 1.2;
  padding-left: calc(var(--sv-padding-3) * 1.5);
  padding-right: calc(var(--sv-padding-3) * 1.5);
  cursor: pointer;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--sv-space-2);
  white-space: nowrap;
  text-align: center;
}
.sv-action-control-base:focus {
  box-shadow: 0 0 0 var(--sv-focus-ring-width) rgba(var(--sv-primary-500-rgb), 0.25);
}
.sv-action-control-base:hover:not(:disabled):not(.disabled) {
  filter: brightness(0.95);
}
.sv-action-control-base:active:not(:disabled):not(.disabled) {
  transform: translateY(1px);
  filter: brightness(0.9);
}
.sv-action-control-base.loading, .sv-action-control-base.is-loading, .sv-action-control-base[aria-busy=true] {
  position: relative;
  color: transparent;
  pointer-events: none;
}
.sv-action-control-base.loading::after, .sv-action-control-base.is-loading::after, .sv-action-control-base[aria-busy=true]::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 1em;
  height: 1em;
  margin: -0.5em 0 0 -0.5em;
  border-radius: 50%;
  border: 0.125em solid transparent;
  border-top-color: currentColor;
  animation: spin var(--sv-spinner-duration) linear infinite;
}

/* ==========================================================================
   4. VARIANTS
   ========================================================================== */
/* 4.1 Emphasis Variants
   ========================================================================== */
.sv-action-control-base.sv-action-primary {
  background-color: var(--sv-primary);
  border-color: var(--sv-primary);
  color: var(--sv-text-on-dark);
}
.sv-action-control-base.sv-action-primary:hover:not(:disabled):not(.disabled) {
  background-color: var(--sv-primary-dark);
  border-color: var(--sv-primary-dark);
}
.sv-action-control-base.sv-action-primary:active:not(:disabled):not(.disabled) {
  background-color: var(--sv-primary-dark);
  border-color: var(--sv-primary-dark);
  transform: translateY(1px);
}
.sv-action-control-base.sv-action-primary:focus {
  box-shadow: 0 0 0 var(--sv-focus-ring-width) rgba(var(--sv-primary-500-rgb), 0.4);
}
.sv-action-control-base.sv-action-secondary {
  background-color: var(--sv-bg-element);
  border-color: var(--sv-border-medium);
  color: var(--sv-text-primary);
}
.sv-action-control-base.sv-action-secondary:hover:not(:disabled):not(.disabled) {
  background-color: var(--sv-bg-element-hover);
  border-color: var(--sv-border-dark);
}
.sv-action-control-base.sv-action-secondary:active:not(:disabled):not(.disabled) {
  background-color: var(--sv-bg-element-active);
  border-color: var(--sv-border-dark);
  transform: translateY(1px);
}
.sv-action-control-base.sv-action-tertiary {
  background-color: transparent;
  border-color: transparent;
  color: var(--sv-text-primary);
}
.sv-action-control-base.sv-action-tertiary:hover:not(:disabled):not(.disabled) {
  background-color: var(--sv-bg-element-hover);
  color: var(--sv-text-accent);
}
.sv-action-control-base.sv-action-tertiary:active:not(:disabled):not(.disabled) {
  background-color: var(--sv-bg-element-active);
  transform: translateY(1px);
}
.sv-action-control-base.sv-action-destructive {
  background-color: var(--sv-error);
  border-color: var(--sv-error);
  color: var(--sv-text-on-dark);
}
.sv-action-control-base.sv-action-destructive:hover:not(:disabled):not(.disabled) {
  background-color: var(--sv-error-dark, var(--sv-error));
  border-color: var(--sv-error-dark, var(--sv-error));
}
.sv-action-control-base.sv-action-destructive:active:not(:disabled):not(.disabled) {
  background-color: var(--sv-error-darker, var(--sv-error-dark, var(--sv-error)));
  border-color: var(--sv-error-darker, var(--sv-error-dark, var(--sv-error)));
  transform: translateY(1px);
}
.sv-action-control-base.sv-action-destructive:focus {
  box-shadow: 0 0 0 var(--sv-focus-ring-width) rgba(var(--sv-error-500-rgb), 0.4);
}

/* 4.2 Connectivity Variants
   ========================================================================== */
.sv-action-group {
  display: inline-flex;
}
.sv-action-group > * {
  border-radius: 0;
  margin-right: -1px;
}
.sv-action-group > *:first-child {
  border-top-left-radius: var(--sv-radius-md);
  border-bottom-left-radius: var(--sv-radius-md);
}
.sv-action-group > *:last-child {
  border-top-right-radius: var(--sv-radius-md);
  border-bottom-right-radius: var(--sv-radius-md);
  margin-right: 0;
}
.sv-action-group > *:focus {
  z-index: 1;
}

.sv-action-control-base.sv-action-with-dropdown {
  position: relative;
  padding-right: calc(var(--sv-padding-6) * 1.5);
}
.sv-action-control-base.sv-action-with-dropdown::after {
  content: "";
  position: absolute;
  right: var(--sv-padding-3);
  top: 50%;
  width: 0.5em;
  height: 0.5em;
  border: 1px solid currentColor;
  border-width: 0 1px 1px 0;
  transform: translateY(-75%) rotate(45deg);
  pointer-events: none;
}

/* ==========================================================================
   5. ICONOGRAPHY SUPPORT
   ========================================================================== */
.sv-action-control-base.sv-action-icon-only {
  padding: var(--sv-padding-2);
  min-width: auto;
  aspect-ratio: 1;
  justify-content: center;
}
.sv-action-control-base.sv-action-icon-only .sv-icon {
  margin: 0;
}
.sv-action-control-base .sv-icon {
  flex-shrink: 0;
  width: var(--sv-icon-size-sm);
  height: var(--sv-icon-size-sm);
  vertical-align: -0.125em;
  position: relative;
}
.sv-action-control-base .sv-icon-leading {
  margin-right: var(--sv-space-2);
  margin-left: calc(-1 * var(--sv-space-2));
}
.sv-action-control-base .sv-icon-trailing {
  margin-left: var(--sv-space-2);
  margin-right: calc(-1 * var(--sv-space-2));
}

/* ==========================================================================
   6. SIZE ADJUSTMENTS
   ========================================================================== */
.sv-ui-size-xs.sv-action-control-base {
  font-size: var(--sv-text-xs);
  font-weight: var(--sv-font-medium);
  line-height: var(--sv-leading-normal);
  padding-left: calc(var(--sv-padding-2) * 1.5);
  padding-right: calc(var(--sv-padding-2) * 1.5);
  min-width: calc(var(--sv-min-touch-target) * 2 * 0.75);
}
.sv-ui-size-xs.sv-action-control-base .sv-icon {
  width: var(--sv-icon-size-xs);
  height: var(--sv-icon-size-xs);
}

.sv-ui-size-sm.sv-action-control-base {
  font-size: var(--sv-text-sm);
  font-weight: var(--sv-font-medium);
  line-height: var(--sv-leading-normal);
  padding-left: calc(var(--sv-padding-2) * 1.5);
  padding-right: calc(var(--sv-padding-2) * 1.5);
  min-width: calc(var(--sv-min-touch-target) * 2 * 0.85);
}

.sv-ui-size-md.sv-action-control-base {
  font-size: var(--sv-text-base);
  font-weight: var(--sv-font-medium);
  line-height: var(--sv-leading-normal);
}

.sv-ui-size-lg.sv-action-control-base {
  font-size: var(--sv-text-lg);
  font-weight: var(--sv-font-medium);
  line-height: var(--sv-leading-normal);
  padding-left: calc(var(--sv-padding-4) * 1.5);
  padding-right: calc(var(--sv-padding-4) * 1.5);
  min-width: calc(var(--sv-min-touch-target) * 2 * 1.15);
}
.sv-ui-size-lg.sv-action-control-base .sv-icon {
  width: var(--sv-icon-size-md);
  height: var(--sv-icon-size-md);
}

.sv-ui-size-xl.sv-action-control-base {
  font-size: var(--sv-text-xl);
  font-weight: var(--sv-font-medium);
  line-height: var(--sv-leading-normal);
  padding-left: calc(var(--sv-padding-5) * 1.5);
  padding-right: calc(var(--sv-padding-5) * 1.5);
  min-width: calc(var(--sv-min-touch-target) * 2 * 1.3);
}
.sv-ui-size-xl.sv-action-control-base .sv-icon {
  width: var(--sv-icon-size-lg);
  height: var(--sv-icon-size-lg);
}

/* ==========================================================================
   7. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */
.sv-action-control-base:focus-visible {
  outline-offset: calc(var(--sv-focus-ring-offset) + 1px);
}
.sv-action-control-base[href]:not([role]).sv-action-primary, .sv-action-control-base[href]:not([role]).sv-action-secondary, .sv-action-control-base[href]:not([role]).sv-action-tertiary, .sv-action-control-base[href]:not([role]).sv-action-destructive {
  role: "button";
}
@media (forced-colors: active) {
  .sv-action-control-base:focus {
    outline: 2px solid Highlight;
    outline-offset: 4px;
  }
  .sv-action-control-base.sv-action-primary {
    border: 1px solid ButtonText;
    background-color: ButtonFace;
    color: ButtonText;
  }
  .sv-action-control-base.sv-action-destructive {
    border: 1px solid ButtonText;
    background-color: Mark;
    color: ButtonText;
  }
  .sv-action-control-base:disabled {
    color: GrayText;
    border-color: GrayText;
  }
}

/**
 * Container Base - Category-level Styles
 * Version: 1.0.0
 * Last Updated: April 29, 2025
 * 
 * This file establishes the foundational styles for all container components
 * in the SkillVo design system. It serves as the second level in our 
 * three-tier styling architecture:
 * 1. sv-ui-control-base - Base styles for all interactive controls
 * 2. sv-container-base (this file) - Base styles for all container components
 * 3. Component-specific classes (e.g., sv-card, sv-panel, sv-accordion)
 */
/* ==========================================================================
   TABLE OF CONTENTS:

   1. VARIABLES & CONFIGURATION
   2. MIXINS
      2.1 Container-Specific Mixins
      2.2 Layout Mixins
      2.3 Visual Style Mixins
   3. BASE CLASS DEFINITION
   4. CONTAINER VARIATIONS
      4.1 Size Variations
      4.2 Padding Variations
      4.3 Border Variations
      4.4 Background Variations
   5. CONTAINER STATES
   6. CONTAINER ANIMATION UTILITIES
   7. ACCESSIBILITY UTILITIES
   8. RESPONSIVE BEHAVIORS
   9. RTL SUPPORT
   ========================================================================== */
/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */
/* ==========================================================================
   2. MIXINS
   ========================================================================== */
/* 2.1 Container-Specific Mixins
   ========================================================================== */
/* 2.2 Layout Mixins
   ========================================================================== */
/* 2.3 Visual Style Mixins
   ========================================================================== */
/* ==========================================================================
   3. BASE CLASS DEFINITION
   ========================================================================== */
.sv-container-base {
  display: block;
  width: 100%;
  box-sizing: border-box;
  position: relative;
  background-color: var(--sv-bg-surface);
  border: 1px solid var(--sv-border-light);
  border-radius: var(--sv-radius-md);
  padding: var(--sv-padding-md);
  overflow: visible;
}
.sv-container-base:focus {
  box-shadow: var(--sv-shadow-sm);
}
.sv-container-base:hover:not(:disabled):not(.disabled).is-interactive {
  background-color: var(--sv-bg-element-hover);
}
.sv-container-base:active:not(:disabled):not(.disabled).is-interactive {
  background-color: var(--sv-bg-element-active);
}
.sv-container-base:disabled, .sv-container-base.disabled {
  opacity: 0.75;
}

/* ==========================================================================
   4. CONTAINER VARIATIONS
   ========================================================================== */
/* 4.1 Size Variations
   ========================================================================== */
.sv-container-size-xs {
  min-height: var(--sv-size-8);
}

.sv-container-size-sm {
  min-height: var(--sv-size-12);
}

.sv-container-size-md {
  min-height: var(--sv-size-16);
}

.sv-container-size-lg {
  min-height: var(--sv-size-24);
}

.sv-container-size-xl {
  min-height: var(--sv-size-32);
}

.sv-container-full-height {
  height: 100%;
}

.sv-container-full-width {
  width: 100%;
}

.sv-container-auto {
  width: auto;
  height: auto;
}

/* 4.2 Padding Variations
   ========================================================================== */
.sv-container-padding-none {
  padding: 0;
}

.sv-container-padding-xs {
  padding: var(--sv-padding-xs);
}

.sv-container-padding-sm {
  padding: var(--sv-padding-sm);
}

.sv-container-padding-md {
  padding: var(--sv-padding-md);
}

.sv-container-padding-lg {
  padding: var(--sv-padding-lg);
}

.sv-container-padding-xl {
  padding: var(--sv-padding-xl);
}

.sv-container-padding-x-only {
  padding-top: 0;
  padding-bottom: 0;
}

.sv-container-padding-y-only {
  padding-left: 0;
  padding-right: 0;
}

/* 4.3 Border Variations
   ========================================================================== */
.sv-container-border-none {
  border: none;
}

.sv-container-border-thin {
  border-width: 1px;
}

.sv-container-border-medium {
  border-width: 2px;
}

.sv-container-border-thick {
  border-width: 3px;
}

.sv-container-border-top {
  border: none;
  border-top: 1px solid var(--sv-border-medium);
}

.sv-container-border-right {
  border: none;
  border-right: 1px solid var(--sv-border-medium);
}

.sv-container-border-bottom {
  border: none;
  border-bottom: 1px solid var(--sv-border-medium);
}

.sv-container-border-left {
  border: none;
  border-left: 1px solid var(--sv-border-medium);
}

.sv-container-radius-none {
  border-radius: 0;
}

.sv-container-radius-sm {
  border-radius: var(--sv-radius-sm);
}

.sv-container-radius-md {
  border-radius: var(--sv-radius-md);
}

.sv-container-radius-lg {
  border-radius: var(--sv-radius-lg);
}

.sv-container-radius-xl {
  border-radius: var(--sv-radius-xl);
}

.sv-container-radius-top {
  border-top-left-radius: var(--sv-radius-md);
  border-top-right-radius: var(--sv-radius-md);
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

.sv-container-radius-right {
  border-top-right-radius: var(--sv-radius-md);
  border-bottom-right-radius: var(--sv-radius-md);
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.sv-container-radius-bottom {
  border-bottom-left-radius: var(--sv-radius-md);
  border-bottom-right-radius: var(--sv-radius-md);
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.sv-container-radius-left {
  border-top-left-radius: var(--sv-radius-md);
  border-bottom-left-radius: var(--sv-radius-md);
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

/* 4.4 Background Variations
   ========================================================================== */
.sv-container-bg-primary {
  background-color: var(--sv-bg-primary);
}

.sv-container-bg-secondary {
  background-color: var(--sv-bg-secondary);
}

.sv-container-bg-surface {
  background-color: var(--sv-bg-surface);
}

.sv-container-bg-element {
  background-color: var(--sv-bg-element);
}

.sv-container-bg-transparent {
  background-color: transparent;
}

/* ==========================================================================
   5. CONTAINER STATES
   ========================================================================== */
.sv-container-elevated-sm {
  box-shadow: var(--sv-shadow-sm);
}

.sv-container-elevated-md {
  box-shadow: var(--sv-shadow-md);
}

.sv-container-elevated-lg {
  box-shadow: var(--sv-shadow-lg);
}

.sv-container-interactive {
  cursor: pointer;
}
.sv-container-interactive:hover {
  background-color: var(--sv-bg-element-hover);
}
.sv-container-interactive:active {
  background-color: var(--sv-bg-element-active);
}

.sv-container-overflow-hidden {
  overflow: hidden;
}

.sv-container-overflow-auto {
  overflow: auto;
}

.sv-container-overflow-scroll {
  overflow: scroll;
}

.sv-container-overflow-visible {
  overflow: visible;
}

.sv-container-selected {
  border-color: var(--sv-primary);
  background-color: var(--sv-bg-element-hover);
}

.sv-container-highlighted {
  border-color: var(--sv-primary);
  background-color: rgba(var(--sv-primary-500-rgb), 0.05);
}

/* ==========================================================================
   6. CONTAINER ANIMATION UTILITIES
   ========================================================================== */
.sv-container-fade {
  transition: opacity var(--sv-motion-duration-medium) var(--sv-motion-ease-standard);
}

.sv-container-scale {
  transition: transform var(--sv-motion-duration-medium) var(--sv-motion-ease-standard);
}

.sv-container-slide {
  transition: transform var(--sv-motion-duration-medium) var(--sv-motion-ease-standard);
}

/* ==========================================================================
   7. ACCESSIBILITY UTILITIES
   ========================================================================== */
.sv-container-focusable:focus {
  outline: none;
  box-shadow: var(--sv-shadow-focus);
}
.sv-container-focusable:focus-visible {
  outline: var(--sv-focus-ring-width) solid var(--sv-focus-ring-color);
  outline-offset: var(--sv-focus-ring-offset);
}

.sv-container-region[role=region]:focus {
  outline: none;
}

/* ==========================================================================
   8. RESPONSIVE BEHAVIORS
   ========================================================================== */
.sv-container-responsive-sm {
  width: 100%;
  max-width: var(--sv-container-sm);
  margin-left: auto;
  margin-right: auto;
}

.sv-container-responsive-md {
  width: 100%;
  max-width: var(--sv-container-md);
  margin-left: auto;
  margin-right: auto;
}

.sv-container-responsive-lg {
  width: 100%;
  max-width: var(--sv-container-lg);
  margin-left: auto;
  margin-right: auto;
}

.sv-container-responsive-xl {
  width: 100%;
  max-width: var(--sv-container-xl);
  margin-left: auto;
  margin-right: auto;
}

.sv-container-responsive-xxl {
  width: 100%;
  max-width: var(--sv-container-xxl);
  margin-left: auto;
  margin-right: auto;
}

@media (max-width: var(--sv-breakpoint-sm)) {
  .sv-container-base {
    padding: var(--sv-padding-sm);
  }
}
/* ==========================================================================
   9. RTL SUPPORT
   ========================================================================== */
[dir=rtl] .sv-container-base.has-directional-padding {
  padding-right: var(--sv-padding-start, var(--sv-padding-md));
  padding-left: var(--sv-padding-end, var(--sv-padding-md));
}
[dir=rtl] .sv-container-base.sv-container-border-left {
  border: none;
  border-right: 1px solid var(--sv-border-medium);
}
[dir=rtl] .sv-container-base.sv-container-border-right {
  border: none;
  border-left: 1px solid var(--sv-border-medium);
}

/**
 * Data Display Base - Core Styles
 * Version: 1.0.0
 * Last Updated: April 29, 2025
 * 
 * This file establishes the common styles for all data display components
 * in the SkillVo design system. It serves as the second level in our 
 * three-tier styling architecture:
 * 1. sv-ui-control-base - Base styles for all interactive controls
 * 2. sv-data-display-base (this file) - Common styles for data display components
 * 3. Component-specific classes (e.g., sv-table, sv-list, sv-card, sv-chart)
 */
/* ==========================================================================
   TABLE OF CONTENTS:

   1. IMPORTS
   2. VARIABLES & CONFIGURATION
   3. BASE CLASS DEFINITION
   4. DATA CONTAINER STYLES
   5. DATA CONTENT STYLES
   6. TYPOGRAPHY & TEXT TREATMENT
   7. LAYOUT UTILITIES
   8. DENSITY VARIATIONS
   9. RESPONSIVE BEHAVIOR
   10. ACCESSIBILITY CONSIDERATIONS
   ========================================================================== */
/* ==========================================================================
   1. IMPORTS
   ========================================================================== */
/* ==========================================================================
   2. VARIABLES & CONFIGURATION
   ========================================================================== */
/* ==========================================================================
   3. BASE CLASS DEFINITION
   ========================================================================== */
.sv-data-display-base {
  padding: 0;
  overflow: auto;
  background-color: var(--sv-bg-surface);
  border: 1px solid var(--sv-border-medium);
  border-radius: var(--sv-radius-md);
  font-family: var(--sv-font-family-main);
  font-size: var(--sv-text-base);
  line-height: var(--sv-leading-normal);
  color: var(--sv-text-primary);
  transition: background-color var(--sv-motion-duration-medium) var(--sv-motion-ease-standard), border-color var(--sv-motion-duration-medium) var(--sv-motion-ease-standard), box-shadow var(--sv-motion-duration-medium) var(--sv-motion-ease-standard);
  user-select: none;
}
@media (prefers-reduced-motion: reduce) {
  .sv-data-display-base {
    transition: none;
  }
}
@media print {
  .sv-data-display-base {
    border-color: #000;
    color: #000;
    background-color: transparent;
  }
}

/* ==========================================================================
   4. DATA CONTAINER STYLES
   ========================================================================== */
.sv-data-container {
  position: relative;
  height: 100%;
  width: 100%;
}
.sv-data-container.sv-data-scrollable {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}
.sv-data-container.sv-data-scrollable::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}
.sv-data-container.sv-data-scrollable::-webkit-scrollbar-track {
  background-color: var(--sv-bg-element);
  border-radius: 4px;
}
.sv-data-container.sv-data-scrollable::-webkit-scrollbar-thumb {
  background-color: var(--sv-border-dark);
  border-radius: 4px;
}
.sv-data-container.sv-data-scrollable::-webkit-scrollbar-thumb:hover {
  background-color: var(--sv-border-dark);
}
.sv-data-container.sv-data-fixed-height {
  max-height: 100%;
  overflow-y: auto;
}
.sv-data-container.sv-data-scrollable-x {
  overflow-x: auto;
  overflow-y: hidden;
}

/* ==========================================================================
   5. DATA CONTENT STYLES
   ========================================================================== */
.sv-data-content {
  position: relative;
}
.sv-data-content.sv-data-empty {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--sv-padding-lg);
  color: var(--sv-text-secondary);
  font-style: italic;
}
.sv-data-content.sv-data-loading {
  opacity: 0.7;
  pointer-events: none;
}
.sv-data-content.sv-data-error {
  border-color: var(--sv-error);
  color: var(--sv-error);
}

/* ==========================================================================
   6. TYPOGRAPHY & TEXT TREATMENT
   ========================================================================== */
.sv-data-title {
  font-size: var(--sv-text-lg);
  font-weight: var(--sv-font-semibold);
  color: var(--sv-text-primary);
  margin-bottom: var(--sv-space-2);
}

.sv-data-subtitle {
  font-size: var(--sv-text-base);
  font-weight: var(--sv-font-medium);
  color: var(--sv-text-secondary);
  margin-bottom: var(--sv-space-2);
}

.sv-data-caption {
  font-size: var(--sv-text-sm);
  color: var(--sv-text-tertiary);
  margin-top: var(--sv-space-2);
}

.sv-data-label {
  font-size: var(--sv-text-sm);
  font-weight: var(--sv-font-medium);
  color: var(--sv-text-secondary);
}

.sv-data-value {
  font-size: var(--sv-text-base);
  color: var(--sv-text-primary);
}
.sv-data-value.sv-data-value-emphasized {
  font-weight: var(--sv-font-semibold);
}
.sv-data-value.sv-data-value-muted {
  color: var(--sv-text-secondary);
}

.sv-data-selectable-text {
  user-select: text;
}

.sv-data-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* ==========================================================================
   7. LAYOUT UTILITIES
   ========================================================================== */
.sv-data-layout-flex {
  display: flex;
}
.sv-data-layout-flex.sv-data-layout-column {
  flex-direction: column;
}
.sv-data-layout-flex.sv-data-layout-row {
  flex-direction: row;
}
.sv-data-layout-flex.sv-data-layout-wrap {
  flex-wrap: wrap;
}
.sv-data-layout-flex.sv-data-layout-center {
  align-items: center;
  justify-content: center;
}
.sv-data-layout-flex.sv-data-layout-space-between {
  justify-content: space-between;
}

.sv-data-layout-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  gap: var(--sv-space-4);
}
.sv-data-layout-grid.sv-data-layout-grid-compact {
  gap: var(--sv-space-2);
}
.sv-data-layout-grid.sv-data-layout-grid-tight {
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
}
.sv-data-layout-grid.sv-data-layout-grid-wide {
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
}

/* ==========================================================================
   8. DENSITY VARIATIONS
   ========================================================================== */
.sv-data-density-compact .sv-data-cell,
.sv-data-density-compact .sv-data-item {
  padding: var(--sv-padding-1) var(--sv-padding-2);
}

.sv-data-density-regular .sv-data-cell,
.sv-data-density-regular .sv-data-item {
  padding: var(--sv-padding-2) var(--sv-padding-3);
}

.sv-data-density-comfortable .sv-data-cell,
.sv-data-density-comfortable .sv-data-item {
  padding: var(--sv-padding-3) var(--sv-padding-4);
}

/* ==========================================================================
   9. RESPONSIVE BEHAVIOR
   ========================================================================== */
@media (max-width: var(--sv-breakpoint-md)) {
  .sv-data-display-base.sv-data-responsive {
    font-size: 0.9em;
  }
  .sv-data-display-base.sv-data-responsive .sv-data-cell,
  .sv-data-display-base.sv-data-responsive .sv-data-item {
    padding: var(--sv-padding-1) var(--sv-padding-2);
  }
}
/* ==========================================================================
   10. ACCESSIBILITY CONSIDERATIONS
   ========================================================================== */
.sv-data-interactive {
  cursor: pointer;
}
.sv-data-interactive:focus {
  outline: none;
  box-shadow: var(--sv-shadow-focus);
}
.sv-data-interactive:focus-visible {
  outline: var(--sv-focus-ring-width) solid var(--sv-focus-ring-color);
  outline-offset: var(--sv-focus-ring-offset);
}
@media (forced-colors: active) {
  .sv-data-interactive:focus {
    outline: 2px solid Highlight;
    outline-offset: 2px;
  }
}

.sv-data-hoverable:hover:not(:disabled):not(.disabled) {
  background-color: var(--sv-bg-element-hover);
}

.sv-data-selectable.sv-data-selected, .sv-data-selectable[aria-selected=true] {
  background-color: var(--sv-bg-element-active);
  font-weight: var(--sv-font-medium);
}

[aria-sort=ascending],
[aria-sort=descending] {
  font-weight: var(--sv-font-semibold);
}

.sv-data-keyboard-navigation:focus {
  position: relative;
  z-index: 1;
}

/**
 * Feedback Components Base - Core Styles
 * Version: 1.0.0
 * Last Updated: April 29, 2025
 * 
 * This file establishes the foundational styles for all feedback UI components
 * in the SkillVo design system. It serves as the second level in our 
 * three-tier styling architecture:
 * 1. sv-ui-control-base - Base styles for all interactive controls
 * 2. sv-feedback-base (this file) - Common styles for all feedback components
 * 3. Component-specific classes (e.g., sv-toast, sv-alert, sv-notification)
 */
/* ==========================================================================
   TABLE OF CONTENTS:

   1. VARIABLES & CONFIGURATION
   2. MIXINS
      2.1 Feedback-Specific Mixins
      2.2 Positioning Mixins
      2.3 Animation Mixins
   3. BASE CLASS DEFINITION
   4. FEEDBACK TYPES/SEVERITY
   5. FEEDBACK POSITIONING
   6. ACCESSIBILITY FEATURES
   7. RTL SUPPORT
   8. MOTION SENSITIVITY
   ========================================================================== */
/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */
/* ==========================================================================
   2. MIXINS
   ========================================================================== */
/* 2.1 Feedback-Specific Mixins
   ========================================================================== */
/* 2.2 Positioning Mixins
   ========================================================================== */
/* 2.3 Animation Mixins
   ========================================================================== */
/* ==========================================================================
   3. BASE CLASS DEFINITION
   ========================================================================== */
.sv-feedback-base {
  position: relative;
  box-sizing: border-box;
  max-width: 100%;
  width: auto;
  font-size: var(--sv-text-base);
  font-weight: var(--sv-font-normal);
  line-height: var(--sv-leading-normal);
  padding: var(--sv-padding-4);
  border-radius: var(--sv-radius-md);
  box-shadow: var(--sv-shadow-md);
  border-width: 1px;
  border-style: solid;
  background-color: var(--sv-bg-surface);
  border-color: var(--sv-border-medium);
  z-index: var(--sv-z-index-tooltip);
  transition-property: all;
  transition-duration: var(--sv-motion-duration-medium);
  transition-timing-function: var(--sv-motion-ease-standard);
}
@media (prefers-reduced-motion: reduce) {
  .sv-feedback-base {
    transition: none;
  }
}
.sv-feedback-base .sv-feedback-content {
  flex: 1;
  min-width: 0;
}
.sv-feedback-base .sv-feedback-title {
  font-size: var(--sv-text-lg);
  font-weight: var(--sv-font-semibold);
  line-height: var(--sv-leading-normal);
  margin: 0 0 var(--sv-space-2) 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.sv-feedback-base .sv-feedback-message {
  font-size: var(--sv-text-base);
  font-weight: var(--sv-font-normal);
  line-height: var(--sv-leading-normal);
  margin: 0;
}
.sv-feedback-base .sv-feedback-icon {
  flex-shrink: 0;
  width: var(--sv-icon-size-md);
  height: var(--sv-icon-size-md);
  display: inline-flex;
  align-items: center;
  justify-content: center;
}
.sv-feedback-base .sv-feedback-close {
  position: absolute;
  top: var(--sv-space-2);
  right: var(--sv-space-2);
  width: var(--sv-btn-size-sm);
  height: var(--sv-btn-size-sm);
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--sv-radius-full);
  background-color: transparent;
  border: none;
  cursor: pointer;
  color: var(--sv-text-secondary);
  transition: background-color var(--sv-motion-duration-medium) var(--sv-motion-ease-standard);
}
.sv-feedback-base .sv-feedback-close:hover {
  background-color: var(--sv-bg-element-hover);
}
.sv-feedback-base .sv-feedback-close:focus {
  outline: none;
  box-shadow: var(--sv-shadow-focus);
}
.sv-feedback-base .sv-feedback-close:focus-visible {
  outline: var(--sv-focus-ring-width) solid var(--sv-focus-ring-color);
  outline-offset: var(--sv-focus-ring-offset);
}
.sv-feedback-base:not(.sv-feedback-full-width) {
  max-width: 32rem;
}
.sv-feedback-base .sv-feedback-actions {
  display: flex;
  margin-top: var(--sv-space-3);
  gap: var(--sv-space-2);
}
.sv-feedback-base .sv-feedback-actions.sv-feedback-actions-end {
  justify-content: flex-end;
}
.sv-feedback-base .sv-feedback-actions.sv-feedback-actions-center {
  justify-content: center;
}
.sv-feedback-base .sv-feedback-actions.sv-feedback-actions-between {
  justify-content: space-between;
}

/* ==========================================================================
   4. FEEDBACK TYPES/SEVERITY
   ========================================================================== */
.sv-feedback-info {
  border-color: var(--sv-info);
  background-color: rgba(41, 182, 246, 0.1);
  color: var(--sv-text-primary);
}
.sv-feedback-info .sv-feedback-icon {
  color: var(--sv-info);
}

.sv-feedback-success {
  border-color: var(--sv-success);
  background-color: rgba(76, 175, 80, 0.1);
  color: var(--sv-text-primary);
}
.sv-feedback-success .sv-feedback-icon {
  color: var(--sv-success);
}

.sv-feedback-warning {
  border-color: var(--sv-warning);
  background-color: rgba(255, 167, 38, 0.1);
  color: var(--sv-text-primary);
}
.sv-feedback-warning .sv-feedback-icon {
  color: var(--sv-warning);
}

.sv-feedback-error {
  border-color: var(--sv-error);
  background-color: rgba(244, 67, 54, 0.1);
  color: var(--sv-text-primary);
}
.sv-feedback-error .sv-feedback-icon {
  color: var(--sv-error);
}

/* ==========================================================================
   5. FEEDBACK POSITIONING
   ========================================================================== */
.sv-feedback-fixed {
  position: fixed;
}

.sv-feedback-absolute {
  position: absolute;
}

.sv-feedback-position-top {
  top: var(--sv-space-4);
  left: 50%;
  transform: translateX(-50%);
}

.sv-feedback-position-bottom {
  bottom: var(--sv-space-4);
  left: 50%;
  transform: translateX(-50%);
}

.sv-feedback-position-top-right {
  top: var(--sv-space-4);
  right: var(--sv-space-4);
}

.sv-feedback-position-top-left {
  top: var(--sv-space-4);
  left: var(--sv-space-4);
}

.sv-feedback-position-bottom-right {
  bottom: var(--sv-space-4);
  right: var(--sv-space-4);
}

.sv-feedback-position-bottom-left {
  bottom: var(--sv-space-4);
  left: var(--sv-space-4);
}

.sv-feedback-full-width {
  width: calc(100% - 2 * var(--sv-space-4));
  max-width: none;
}

/* ==========================================================================
   6. ACCESSIBILITY FEATURES
   ========================================================================== */
.sv-feedback-interactive:not([role=status]):focus {
  outline: none;
  box-shadow: var(--sv-shadow-focus);
}
.sv-feedback-interactive:not([role=status]):focus-visible {
  outline: var(--sv-focus-ring-width) solid var(--sv-focus-ring-color);
  outline-offset: var(--sv-focus-ring-offset);
}

/* ==========================================================================
   7. RTL SUPPORT
   ========================================================================== */
[dir=rtl] .sv-feedback-base .sv-feedback-icon {
  margin-right: 0;
  margin-left: var(--sv-space-3);
}
[dir=rtl] .sv-feedback-base .sv-feedback-close {
  right: auto;
  left: var(--sv-space-2);
}
[dir=rtl] .sv-feedback-base.sv-feedback-position-top-right {
  right: auto;
  left: var(--sv-space-4);
}
[dir=rtl] .sv-feedback-base.sv-feedback-position-top-left {
  left: auto;
  right: var(--sv-space-4);
}
[dir=rtl] .sv-feedback-base.sv-feedback-position-bottom-right {
  right: auto;
  left: var(--sv-space-4);
}
[dir=rtl] .sv-feedback-base.sv-feedback-position-bottom-left {
  left: auto;
  right: var(--sv-space-4);
}

/* ==========================================================================
   8. MOTION SENSITIVITY
   ========================================================================== */
@media (prefers-reduced-motion: reduce) {
  .sv-feedback-base {
    transition: opacity var(--sv-motion-duration-medium) linear !important;
    animation: fade-in var(--sv-motion-duration-medium) linear !important;
  }
  .sv-feedback-base.sv-feedback-exiting {
    animation: fade-out var(--sv-motion-duration-medium) linear !important;
  }
}
@keyframes slide-out-up {
  0% {
    transform: translateY(0);
    opacity: 1;
  }
  100% {
    transform: translateY(-10px);
    opacity: 0;
  }
}
@keyframes slide-out-down {
  0% {
    transform: translateY(0);
    opacity: 1;
  }
  100% {
    transform: translateY(10px);
    opacity: 0;
  }
}
/**
 * Information Display Controls Base - Category-Level Styles
 * Version: 1.0.0
 * Last Updated: April 29, 2025
 * 
 * This file establishes the category-level styles for all information display components
 * in the SkillVo design system. It serves as the middle layer in our 
 * three-tier styling architecture:
 * 1. sv-ui-control-base - Base styles for all interactive controls
 * 2. sv-info-display-base (this file) - Base styles for information display components
 * 3. Component-specific classes (e.g., sv-label, sv-badge, sv-tooltip, sv-tag)
 */
/* ==========================================================================
   TABLE OF CONTENTS:

   1. VARIABLES & CONFIGURATION
   2. MIXINS
      2.1 Layout Mixins
      2.2 Content Formatting Mixins
      2.3 Visual Style Mixins
   3. BASE CLASS DEFINITION
   4. PRIORITY VARIATIONS
   5. DENSITY VARIATIONS
   6. ALIGNMENT VARIATIONS
   7. TRUNCATION VARIATIONS
   8. ANIMATION EXTENSIONS
   9. PRINT REFINEMENTS
   10. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */
/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */
/* ==========================================================================
   2. MIXINS
   ========================================================================== */
/* 2.1 Layout Mixins
   ========================================================================== */
/* 2.2 Content Formatting Mixins
   ========================================================================== */
/* 2.3 Visual Style Mixins
   ========================================================================== */
/* ==========================================================================
   3. BASE CLASS DEFINITION
   ========================================================================== */
.sv-info-display-base {
  display: inline-flex;
  align-items: center;
  padding: var(--sv-padding-1) var(--sv-padding-2);
  line-height: var(--sv-leading-normal);
  text-align: left;
  justify-content: flex-start;
  border: none;
  background-color: transparent;
  font-size: var(--sv-text-base);
  font-weight: var(--sv-font-normal);
  line-height: var(--sv-leading-normal);
  white-space: normal;
  word-wrap: break-word;
  overflow-wrap: break-word;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  transition-property: color, background-color, border-color, box-shadow, opacity;
  transition-duration: var(--sv-motion-duration-short);
}
.sv-info-display-base.has-icon {
  gap: var(--sv-space-2);
}
.sv-info-display-base.has-icon .sv-icon {
  color: currentColor;
  flex-shrink: 0;
}
.sv-info-display-base.is-interactive {
  cursor: pointer;
}
.sv-info-display-base.is-interactive:hover {
  color: var(--sv-primary);
}
.sv-info-display-base.is-interactive:focus-visible {
  outline: var(--sv-focus-ring-width) solid var(--sv-focus-ring-color);
  outline-offset: var(--sv-focus-ring-offset);
}
.sv-info-display-base.is-conditional {
  opacity: 0;
}
.sv-info-display-base.is-conditional.is-visible {
  opacity: 1;
}

/* ==========================================================================
   4. PRIORITY VARIATIONS
   ========================================================================== */
.sv-info-priority-high {
  font-weight: var(--sv-font-semibold);
  color: var(--sv-text-primary);
}

.sv-info-priority-normal {
  font-weight: var(--sv-font-normal);
  color: var(--sv-text-primary);
}

.sv-info-priority-low {
  font-weight: var(--sv-font-normal);
  color: var(--sv-text-secondary);
}

.sv-info-priority-subtle {
  font-weight: var(--sv-font-normal);
  color: var(--sv-text-tertiary);
}

/* ==========================================================================
   5. DENSITY VARIATIONS
   ========================================================================== */
.sv-info-density-compact {
  padding: var(--sv-padding-1) var(--sv-padding-2);
  line-height: var(--sv-leading-tight);
}

.sv-info-density-normal {
  padding: var(--sv-padding-1) var(--sv-padding-2);
  line-height: var(--sv-leading-normal);
}

.sv-info-density-comfortable {
  padding: var(--sv-padding-2) var(--sv-padding-3);
  line-height: var(--sv-leading-relaxed);
}

/* ==========================================================================
   6. ALIGNMENT VARIATIONS
   ========================================================================== */
.sv-info-align-left {
  text-align: left;
  justify-content: flex-start;
}

.sv-info-align-center {
  text-align: center;
  justify-content: center;
}

.sv-info-align-right {
  text-align: right;
  justify-content: flex-end;
}

/* ==========================================================================
   7. TRUNCATION VARIATIONS
   ========================================================================== */
.sv-info-truncate-single {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.sv-info-truncate-multi {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.sv-info-no-truncate {
  text-overflow: initial;
  white-space: normal;
  overflow: visible;
}

/* ==========================================================================
   8. ANIMATION EXTENSIONS
   ========================================================================== */
.sv-info-animate-highlight {
  animation: info-highlight 2s ease-out;
}

@keyframes info-highlight {
  0% {
    background-color: var(--sv-primary-light);
  }
  100% {
    background-color: transparent;
  }
}
.sv-info-animate-update {
  animation: info-update 1s ease-out;
}

@keyframes info-update {
  0%, 50% {
    color: var(--sv-primary);
  }
  100% {
    color: inherit;
  }
}
/* ==========================================================================
   9. PRINT REFINEMENTS
   ========================================================================== */
@media print {
  .sv-info-display-base {
    color: #000 !important;
  }
  .sv-info-display-base.sv-info-truncate-single, .sv-info-display-base.sv-info-truncate-multi {
    text-overflow: initial;
    white-space: normal;
    overflow: visible;
    -webkit-line-clamp: initial;
    -webkit-box-orient: initial;
    display: block;
  }
  .sv-info-display-base.is-conditional:not(.is-visible) {
    display: none !important;
  }
}
/* ==========================================================================
   10. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */
@media (prefers-contrast: more) {
  .sv-info-display-base.sv-info-priority-low, .sv-info-display-base.sv-info-priority-subtle {
    color: var(--sv-text-primary);
  }
}
@media (forced-colors: active) {
  .sv-info-display-base {
    color: CanvasText;
  }
  .sv-info-display-base.is-interactive:hover {
    color: Highlight;
  }
  .sv-info-display-base.sv-info-priority-high {
    font-weight: bold;
  }
}
/**
 * Input Base - Common Styles for Input Controls
 * Version: 2.0.0
 * Last Updated: April 29, 2025
 * 
 * This file establishes the intermediate layer in the three-tier styling architecture
 * specifically for input-type controls, serving as a bridge between:
 * 1. sv-ui-control-base - Base styles for all interactive controls
 * 2. sv-input-base (this file) - Common styles for all input controls
 * 3. Component-specific classes (e.g., sv-input-text, sv-textarea, sv-select)
 */
/* ==========================================================================
   TABLE OF CONTENTS:

   1. VARIABLES & CONFIGURATION
   2. INPUT-SPECIFIC MIXINS
   3. BASE INPUT CLASS DEFINITION
   4. INPUT FIELD STYLING
   5. LABEL STYLING
   6. HELPER TEXT & VALIDATION STYLING
   7. INPUT GROUPS & LAYOUT
   8. UTILITY CLASSES
   9. RTL INPUT SUPPORT
   10. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */
/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */
/* ==========================================================================
   2. INPUT-SPECIFIC MIXINS
   ========================================================================== */
/* ==========================================================================
   3. BASE INPUT CLASS DEFINITION
   ========================================================================== */
.sv-input-base {
  position: relative;
  display: block;
  min-width: var(--sv-size-40);
  height: var(--sv-size-10);
  padding: var(--sv-padding-2) var(--sv-padding-3);
  transition-property: border-color color background-color box-shadow;
  transition-duration: var(--sv-motion-duration-short);
  transition-timing-function: var(--sv-motion-ease-standard);
}
@media (prefers-reduced-motion: reduce) {
  .sv-input-base {
    transition: none;
  }
}
.sv-input-base {
  cursor: text;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.sv-input-base.required .sv-input-label::after, .sv-input-base[required] .sv-input-label::after, .sv-input-base[aria-required=true] .sv-input-label::after {
  content: "*";
  color: var(--sv-error);
  margin-left: var(--sv-space-1);
}

/* ==========================================================================
   4. INPUT FIELD STYLING
   ========================================================================== */
.sv-input-field {
  width: 100%;
  appearance: none;
  background-color: var(--sv-bg-surface);
}
.sv-input-field:focus {
  border-color: var(--sv-primary);
}
.sv-input-field::placeholder {
  color: var(--sv-text-tertiary);
  opacity: 1;
}
.sv-input-field[type=password] {
  font-family: var(--sv-font-family-mono);
  letter-spacing: 0.125em;
}
.sv-input-field[type=number] {
  -moz-appearance: textfield;
}
.sv-input-field[type=number]::-webkit-outer-spin-button, .sv-input-field[type=number]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.sv-input-field[type=search]::-webkit-search-decoration, .sv-input-field[type=search]::-webkit-search-cancel-button, .sv-input-field[type=search]::-webkit-search-results-button, .sv-input-field[type=search]::-webkit-search-results-decoration {
  -webkit-appearance: none;
}
.sv-input-field[type=date]::-webkit-calendar-picker-indicator, .sv-input-field[type=time]::-webkit-calendar-picker-indicator, .sv-input-field[type=datetime-local]::-webkit-calendar-picker-indicator {
  opacity: 0.6;
  cursor: pointer;
}
.sv-input-field[type=date]::-webkit-calendar-picker-indicator:hover, .sv-input-field[type=time]::-webkit-calendar-picker-indicator:hover, .sv-input-field[type=datetime-local]::-webkit-calendar-picker-indicator:hover {
  opacity: 1;
}

/* ==========================================================================
   5. LABEL STYLING
   ========================================================================== */
.sv-input-label {
  display: block;
  margin-bottom: var(--sv-space-2);
  font-size: var(--sv-text-sm);
  font-weight: var(--sv-font-medium);
  color: var(--sv-text-secondary);
}

/* ==========================================================================
   6. HELPER TEXT & VALIDATION STYLING
   ========================================================================== */
.sv-input-helper {
  font-size: var(--sv-text-xs);
  margin-top: var(--sv-space-1);
  color: var(--sv-text-secondary);
}
.sv-input-helper.error {
  color: var(--sv-error);
}
.sv-input-helper.success {
  color: var(--sv-success);
}

.sv-input-validation-error {
  font-size: var(--sv-text-xs);
  margin-top: var(--sv-space-1);
  color: var(--sv-text-secondary);
  color: var(--sv-error);
}
.sv-input-validation-error.error {
  color: var(--sv-error);
}
.sv-input-validation-error.success {
  color: var(--sv-success);
}
.sv-input-validation-success {
  font-size: var(--sv-text-xs);
  margin-top: var(--sv-space-1);
  color: var(--sv-text-secondary);
  color: var(--sv-success);
}
.sv-input-validation-success.error {
  color: var(--sv-error);
}
.sv-input-validation-success.success {
  color: var(--sv-success);
}

.sv-input-counter {
  font-size: var(--sv-text-xs);
  margin-top: var(--sv-space-1);
  color: var(--sv-text-secondary);
  text-align: right;
}
.sv-input-counter.error {
  color: var(--sv-error);
}
.sv-input-counter.success {
  color: var(--sv-success);
}

/* ==========================================================================
   7. INPUT GROUPS & LAYOUT
   ========================================================================== */
.sv-input-container {
  position: relative;
  display: flex;
  flex-direction: column;
  margin-bottom: var(--sv-space-4);
}
.sv-input-container .sv-input-field:focus ~ .sv-input-icon,
.sv-input-container .sv-input-field:focus ~ .sv-input-addon {
  border-color: var(--sv-primary);
  color: var(--sv-text-primary);
}

.sv-input-group {
  display: flex;
  flex-direction: row;
  align-items: stretch;
}
.sv-input-group .sv-input-base {
  flex: 1;
}
.sv-input-group .sv-input-base:not(:first-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.sv-input-group .sv-input-base:not(:last-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right-width: 0;
}
.sv-input-group-prepend, .sv-input-group-append {
  display: flex;
  align-items: center;
  padding: 0 var(--sv-padding-2);
  background-color: var(--sv-bg-element);
  border: 1px solid var(--sv-border-medium);
  color: var(--sv-text-secondary);
  font-size: var(--sv-text-sm);
}
.sv-input-group-prepend {
  border-right-width: 0;
  border-top-left-radius: var(--sv-radius-md);
  border-bottom-left-radius: var(--sv-radius-md);
}
.sv-input-group-append {
  border-left-width: 0;
  border-top-right-radius: var(--sv-radius-md);
  border-bottom-right-radius: var(--sv-radius-md);
}

.sv-input-icon {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--sv-text-secondary);
}
.sv-input-icon-left {
  left: var(--sv-padding-3);
}
.sv-input-icon-left + .sv-input-field {
  padding-left: calc(var(--sv-padding-6) + var(--sv-icon-size-sm));
}
.sv-input-icon-right {
  right: var(--sv-padding-3);
}
.sv-input-field ~ .sv-input-icon-right {
  padding-right: calc(var(--sv-padding-6) + var(--sv-icon-size-sm));
}

/* ==========================================================================
   8. UTILITY CLASSES
   ========================================================================== */
.sv-input-fullwidth {
  width: 100%;
  min-width: 100%;
  max-width: 100%;
}

.sv-input-autowidth {
  width: auto;
  min-width: var(--sv-size-40);
}

.sv-input-compact {
  padding: var(--sv-padding-1) var(--sv-padding-2);
  height: auto;
  min-height: var(--sv-size-8);
}

.sv-input-inline {
  display: inline-flex;
  vertical-align: middle;
  margin-bottom: 0;
}

/* ==========================================================================
   9. RTL INPUT SUPPORT
   ========================================================================== */
[dir=rtl] .sv-input-icon-left {
  left: auto;
  right: var(--sv-padding-3);
}
[dir=rtl] .sv-input-icon-left + .sv-input-field {
  padding-left: var(--sv-padding-3);
  padding-right: calc(var(--sv-padding-6) + var(--sv-icon-size-sm));
}
[dir=rtl] .sv-input-icon-right {
  right: auto;
  left: var(--sv-padding-3);
}
.sv-input-field ~ [dir=rtl] .sv-input-icon-right {
  padding-right: var(--sv-padding-3);
  padding-left: calc(var(--sv-padding-6) + var(--sv-icon-size-sm));
}
[dir=rtl] .sv-input-counter {
  text-align: left;
}
[dir=rtl] .sv-input-group .sv-input-base:not(:first-child) {
  border-radius: 0;
  border-top-right-radius: var(--sv-radius-md);
  border-bottom-right-radius: var(--sv-radius-md);
}
[dir=rtl] .sv-input-group .sv-input-base:not(:last-child) {
  border-radius: 0;
  border-top-left-radius: var(--sv-radius-md);
  border-bottom-left-radius: var(--sv-radius-md);
  border-right-width: 1px;
  border-left-width: 0;
}
[dir=rtl] .sv-input-group-prepend {
  border-radius: 0;
  border-top-right-radius: var(--sv-radius-md);
  border-bottom-right-radius: var(--sv-radius-md);
  border-right-width: 1px;
  border-left-width: 0;
}
[dir=rtl] .sv-input-group-append {
  border-radius: 0;
  border-top-left-radius: var(--sv-radius-md);
  border-bottom-left-radius: var(--sv-radius-md);
  border-left-width: 1px;
  border-right-width: 0;
}

/* ==========================================================================
   10. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */
.sv-input-base:focus[data-focused-by=keyboard] {
  outline: var(--sv-focus-ring-width) solid var(--sv-focus-ring-color);
  outline-offset: var(--sv-focus-ring-offset);
}

.sv-input-label-sr {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@media (forced-colors: active) {
  .sv-input-base {
    border: 1px solid ButtonBorder;
  }
  .sv-input-base:focus {
    outline: 2px solid Highlight;
    outline-offset: 2px;
  }
  .sv-input-icon,
  .sv-input-group-prepend,
  .sv-input-group-append {
    border-color: ButtonBorder;
    color: ButtonText;
  }
}
/**
 * Navigation Control Base - Core Styles
 * Version: 1.0.0
 * Last Updated: April 29, 2025
 * 
 * This file establishes the foundational styles for all navigation components
 * in the SkillVo design system. It serves as the second level in our 
 * three-tier styling architecture:
 * 1. sv-ui-control-base - Base styles for all interactive controls
 * 2. sv-nav-control-base (this file) - Base styles for all navigation controls
 * 3. Component-specific classes (e.g., sv-nav-menu, sv-nav-tabs, sv-breadcrumbs)
 */
/* ==========================================================================
   TABLE OF CONTENTS:

   1. VARIABLES & CONFIGURATION
   2. NAVIGATION-SPECIFIC MIXINS
   3. NAVIGATION BASE CLASS DEFINITION
   4. NAVIGATION STATES
   5. NAVIGATION ACCESSIBILITY
   6. RESPONSIVE NAVIGATION BEHAVIORS
   7. PRINT STYLES FOR NAVIGATION
   8. RTL SUPPORT FOR NAVIGATION
   ========================================================================== */
/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */
/* ==========================================================================
   2. NAVIGATION-SPECIFIC MIXINS
   ========================================================================== */
.sv-nav-control-base {
  display: flex;
  flex-wrap: wrap;
  margin: 0;
  padding: 0;
  list-style: none;
  font-size: var(--sv-text-base);
  font-weight: var(--sv-font-medium);
  line-height: var(--sv-leading-normal);
  text-decoration: none;
  white-space: nowrap;
  cursor: pointer;
  user-select: none;
  color: var(--sv-text-primary);
  transition-property: color, background-color, border-color;
  transition-duration: var(--sv-motion-duration-short);
  transition-timing-function: var(--sv-motion-ease-standard);
}
.sv-nav-control-base:hover:not(:disabled):not(.disabled):not([readonly]):not(.readonly) {
  background-color: var(--sv-bg-element-hover);
  border-color: var(--sv-border-medium);
}
.sv-nav-control-base:active:not(:disabled):not(.disabled):not([readonly]):not(.readonly) {
  background-color: var(--sv-bg-element-active);
  border-color: var(--sv-border-dark);
}
@media (prefers-reduced-motion: reduce) {
  .sv-nav-control-base {
    transition: none;
  }
}
.sv-nav-control-base {
  min-width: var(--sv-min-touch-target);
  min-height: var(--sv-min-touch-target);
}
.sv-nav-control-base.sv-nav-vertical {
  flex-direction: column;
}
.sv-nav-control-base.sv-nav-vertical .sv-nav-item {
  padding: var(--sv-padding-2) var(--sv-padding-3);
}

/* ==========================================================================
   3. NAVIGATION-SPECIFIC MIXINS
   ========================================================================== */
/* ==========================================================================
   4. NAVIGATION STATES
   ========================================================================== */
.sv-nav-control-base:hover:not(:disabled):not(.disabled) {
  color: var(--sv-primary);
  text-decoration: none;
}
.sv-nav-control-base.active, .sv-nav-control-base[aria-current=page], .sv-nav-control-base[aria-selected=true] {
  color: var(--sv-primary);
  font-weight: var(--sv-font-semibold);
}
.sv-nav-control-base[aria-expanded=true] {
  color: var(--sv-primary);
  background-color: var(--sv-bg-element-active);
}

/* ==========================================================================
   5. NAVIGATION ACCESSIBILITY
   ========================================================================== */
.sv-nav-control-base:focus-visible {
  outline: var(--sv-focus-ring-width) solid var(--sv-focus-ring-color);
  outline-offset: var(--sv-focus-ring-offset);
  text-decoration: none;
}
.sv-nav-control-base.sv-nav-skip-link {
  position: absolute;
  top: -9999px;
  left: -9999px;
  z-index: var(--sv-z-index-skip-link);
  background-color: var(--sv-bg-primary);
  padding: var(--sv-padding-2) var(--sv-padding-4);
}
.sv-nav-control-base.sv-nav-skip-link:focus {
  top: var(--sv-skip-link-position-top);
  left: var(--sv-skip-link-position-left);
}
.sv-nav-control-base[aria-disabled=true] {
  opacity: 0.65;
  cursor: not-allowed;
  background-color: var(--sv-bg-element);
  border-color: var(--sv-border-light);
  color: var(--sv-text-tertiary);
  pointer-events: none;
}

/* ==========================================================================
   6. RESPONSIVE NAVIGATION BEHAVIORS
   ========================================================================== */
@media (max-width: var(--sv-breakpoint-md)) {
  .sv-nav-control-base.sv-nav-responsive {
    flex-direction: column;
    align-items: flex-start;
  }
  .sv-nav-control-base.sv-nav-responsive {
    min-width: var(--sv-min-touch-target);
    min-height: var(--sv-min-touch-target);
  }
  .sv-nav-control-base.sv-nav-responsive {
    padding: var(--sv-padding-2) var(--sv-padding-3);
  }
}
/* ==========================================================================
   7. PRINT STYLES FOR NAVIGATION
   ========================================================================== */
@media print {
  .sv-nav-control-base a[href]::after {
    content: " (" attr(href) ")";
    font-size: 90%;
    font-style: italic;
  }
  .sv-nav-control-base.sv-nav-no-print, .sv-nav-control-base[data-print=hide] {
    display: none !important;
  }
}
/* ==========================================================================
   8. RTL SUPPORT FOR NAVIGATION
   ========================================================================== */
[dir=rtl] .sv-nav-control-base.sv-nav-horizontal {
  flex-direction: row-reverse;
}
[dir=rtl] .sv-nav-control-base.sv-nav-with-dividers > * + *::before {
  left: auto;
  right: calc(-1 * var(--sv-space-2));
}
[dir=rtl] .sv-nav-control-base .sv-nav-chevron {
  transform: scaleX(-1);
}

/**
 * Selection Controls Base - Core Styles
 * Version: 1.0.0
 * Last Updated: April 29, 2025
 * 
 * This file establishes the foundational styles for all selection control components
 * in the SkillVo design system. It serves as the second level in our 
 * three-tier styling architecture:
 * 1. sv-ui-control-base - Base styles for all interactive controls
 * 2. sv-selection-control-base (this file) - Base styles for all selection controls
 * 3. Component-specific classes (e.g., sv-checkbox, sv-radio, sv-switch)
 *
 * Selection controls include checkboxes, radio buttons, switches, and other
 * components that allow users to select options from a set of choices.
 */
/* ==========================================================================
   TABLE OF CONTENTS:

   1. VARIABLES & CONFIGURATION
   2. MIXINS
      2.1 Selection Control Specific Mixins
   3. BASE CLASS DEFINITION
   4. SIZE VARIATIONS
   5. SELECTION STATES
   6. ACCESSIBILITY ENHANCEMENTS
   7. PRINT STYLES
   ========================================================================== */
/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */
/* ==========================================================================
   2. MIXINS
   ========================================================================== */
/* 2.1 Selection Control Specific Mixins
   ========================================================================== */
/* ==========================================================================
   3. BASE CLASS DEFINITION
   ========================================================================== */
.sv-selection-control-base {
  position: relative;
  display: inline-flex;
  align-items: center;
  cursor: pointer;
  background-color: transparent;
  padding: 0;
}
.sv-selection-control-base + .sv-selection-control-base {
  margin-top: var(--sv-space-3);
}
.sv-selection-control-base.sv-selection-control-inline + .sv-selection-control-base.sv-selection-control-inline {
  margin-top: 0;
  margin-left: var(--sv-space-4);
}
.sv-selection-control-base__input {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
  margin: 0;
}
.sv-selection-control-base__input:focus-visible + .sv-selection-control-base__control {
  outline: var(--sv-focus-ring-width) solid var(--sv-focus-ring-color);
  outline-offset: var(--sv-focus-ring-offset);
}
.sv-selection-control-base__input:checked + .sv-selection-control-base__control {
  background-color: var(--sv-primary);
  border-color: var(--sv-primary);
}
.sv-selection-control-base__input:checked + .sv-selection-control-base__control::after {
  transform: translate(-50%, -50%) scale(1);
}
.sv-selection-control-base__input:indeterminate + .sv-selection-control-base__control {
  background-color: var(--sv-primary-light);
  border-color: var(--sv-primary);
}
.sv-selection-control-base__input:indeterminate + .sv-selection-control-base__control::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 50%;
  height: 2px;
  background-color: var(--sv-text-on-dark);
  transform: translate(-50%, -50%) scale(1);
}
.sv-selection-control-base__input:disabled + .sv-selection-control-base__control {
  opacity: 0.65;
  cursor: not-allowed;
  background-color: var(--sv-bg-element);
  border-color: var(--sv-border-light);
  color: var(--sv-text-tertiary);
  pointer-events: none;
}
.sv-selection-control-base__input:disabled + .sv-selection-control-base__control ~ .sv-selection-control-base__label {
  color: var(--sv-text-tertiary);
  cursor: not-allowed;
}
.sv-selection-control-base__control {
  position: relative;
  display: inline-block;
  width: var(--sv-size-4);
  height: var(--sv-size-4);
  min-width: var(--sv-size-4);
  min-height: var(--sv-size-4);
  background-color: var(--sv-bg-surface);
  border: 2px solid var(--sv-border-medium);
  transition: all var(--sv-motion-duration-short) var(--sv-motion-ease-standard);
}
.sv-selection-control-base__control::after {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0);
  transition: transform var(--sv-motion-duration-short) var(--sv-motion-ease-standard);
}
.sv-selection-control-base:hover .sv-selection-control-base__control:not(.disabled) {
  border-color: var(--sv-border-dark);
  background-color: var(--sv-bg-element-hover);
}
.sv-selection-control-base__label {
  margin-left: var(--sv-space-3);
  font-size: var(--sv-text-base);
  color: var(--sv-text-primary);
  user-select: none;
}
.sv-selection-control-base__description {
  display: block;
  margin-top: var(--sv-space-1);
  margin-left: calc(var(--sv-size-4) + var(--sv-space-3));
  font-size: var(--sv-text-sm);
  color: var(--sv-text-secondary);
}
.sv-selection-control-base.has-error .sv-selection-control-base__control, .sv-selection-control-base.error .sv-selection-control-base__control, .sv-selection-control-base[aria-invalid=true] .sv-selection-control-base__control {
  border-color: var(--sv-error);
}
.sv-selection-control-base.has-error .sv-selection-control-base__description, .sv-selection-control-base.error .sv-selection-control-base__description, .sv-selection-control-base[aria-invalid=true] .sv-selection-control-base__description {
  color: var(--sv-error);
}
.sv-selection-control-base.has-success .sv-selection-control-base__control, .sv-selection-control-base.success .sv-selection-control-base__control, .sv-selection-control-base[aria-invalid=false] .sv-selection-control-base__control {
  border-color: var(--sv-success);
}
.sv-selection-control-base.has-success .sv-selection-control-base__description, .sv-selection-control-base.success .sv-selection-control-base__description, .sv-selection-control-base[aria-invalid=false] .sv-selection-control-base__description {
  color: var(--sv-success);
}
.sv-selection-control-base.required .sv-selection-control-base__label::after {
  content: "*";
  color: var(--sv-error);
  margin-left: var(--sv-space-1);
}

/* ==========================================================================
   4. SIZE VARIATIONS
   ========================================================================== */
.sv-selection-control-base.sv-ui-size-sm .sv-selection-control-base__control {
  width: calc(var(--sv-size-4) * 0.75);
  height: calc(var(--sv-size-4) * 0.75);
  min-width: calc(var(--sv-size-4) * 0.75);
  min-height: calc(var(--sv-size-4) * 0.75);
}
.sv-selection-control-base.sv-ui-size-sm .sv-selection-control-base__label {
  font-size: var(--sv-text-sm);
}
.sv-selection-control-base.sv-ui-size-sm .sv-selection-control-base__description {
  font-size: var(--sv-text-xs);
  margin-left: calc(var(--sv-size-4) * 0.75 + var(--sv-space-3));
}

.sv-selection-control-base.sv-ui-size-lg .sv-selection-control-base__control {
  width: calc(var(--sv-size-4) * 1.25);
  height: calc(var(--sv-size-4) * 1.25);
  min-width: calc(var(--sv-size-4) * 1.25);
  min-height: calc(var(--sv-size-4) * 1.25);
}
.sv-selection-control-base.sv-ui-size-lg .sv-selection-control-base__label {
  font-size: var(--sv-text-lg);
}
.sv-selection-control-base.sv-ui-size-lg .sv-selection-control-base__description {
  font-size: var(--sv-text-base);
  margin-left: calc(var(--sv-size-4) * 1.25 + var(--sv-space-3));
}

/* ==========================================================================
   5. SELECTION STATES
   ========================================================================== */
.sv-selection-control-inline {
  display: inline-flex;
  margin-right: var(--sv-space-4);
}

.sv-selection-control-group {
  display: flex;
  flex-direction: column;
}
.sv-selection-control-group.sv-selection-control-group-horizontal {
  flex-direction: row;
  flex-wrap: wrap;
  gap: var(--sv-space-4);
}

/* ==========================================================================
   6. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */
@media (forced-colors: active) {
  .sv-selection-control-base__control {
    border: 2px solid CanvasText;
  }
  .sv-selection-control-base__control::after {
    background-color: CanvasText;
  }
  .sv-selection-control-base__input:checked + .sv-selection-control-base__control {
    background-color: Highlight;
    border-color: Highlight;
  }
  .sv-selection-control-base__input:checked + .sv-selection-control-base__control::after {
    background-color: Canvas;
  }
  .sv-selection-control-base__input:focus-visible + .sv-selection-control-base__control {
    outline: 2px solid Highlight;
    outline-offset: 2px;
  }
}
/* ==========================================================================
   7. PRINT STYLES
   ========================================================================== */
@media print {
  .sv-selection-control-base__control {
    border: 1px solid #000 !important;
    box-shadow: none !important;
  }
  .sv-selection-control-base__control::after {
    transform: translate(-50%, -50%) scale(1) !important;
    border-color: #000 !important;
    background-color: #000 !important;
  }
  .sv-selection-control-base__input:checked + .sv-selection-control-base__control::after {
    transform: translate(-50%, -50%) scale(1) !important;
  }
  .sv-selection-control-base__label, .sv-selection-control-base__description {
    color: #000 !important;
  }
}

/*# sourceMappingURL=test.css.map */
