.demo-shell-container {
  display: flex;
  flex-direction: column;
  padding: 24px;
  height: 100%;
  
  .demo-header {
    margin-bottom: 24px;
    
    h1 {
      margin: 0 0 8px;
      font-size: 28px;
      font-weight: 500;
      color: var(--sv-text-primary);
    }
    
    p {
      margin: 0;
      color: var(--sv-text-secondary);
      font-size: 16px;
    }
  }
  
  // Main tab group styles
  ::ng-deep .mat-mdc-tab-group {
    height: 100%;
    
    .mat-mdc-tab-body-wrapper {
      flex-grow: 1;
    }
  }
}

// Tab content styles
.tab-content {
  padding: 24px 0;
  display: flex;
  flex-direction: column;
  height: calc(100vh - 200px); // Adjust based on header and tabs height
}

// Overview tab
.component-variants-section,
.documentation-section,
.code-examples-section {
  margin-bottom: 48px;
  
  h2 {
    margin: 0 0 16px;
    font-size: 24px;
    font-weight: 500;
    color: var(--sv-text-primary);
    padding-bottom: 8px;
    border-bottom: 1px solid var(--sv-border-light);
  }
  
  p {
    margin: 0 0 24px;
    color: var(--sv-text-secondary);
  }
}

// Component variants grid
.variants-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 24px;
  
  .variant-item {
    display: flex;
    flex-direction: column;
    border: 1px solid var(--sv-border-light);
    border-radius: 8px;
    overflow: hidden;
    transition: box-shadow 0.2s ease;
    
    &:hover {
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }
    
    .variant-preview {
      padding: 24px;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: var(--sv-bg-element);
      min-height: 80px;
    }
    
    .variant-info {
      padding: 16px;
      background-color: var(--sv-bg-surface);
      
      h3 {
        margin: 0 0 8px;
        font-size: 16px;
        font-weight: 500;
        color: var(--sv-text-primary);
      }
      
      p {
        margin: 0 0 12px;
        font-size: 14px;
        color: var(--sv-text-secondary);
      }
      
      .variant-properties {
        background-color: var(--sv-bg-element);
        border-radius: 4px;
        padding: 8px;
        
        pre {
          margin: 0;
          font-family: 'Roboto Mono', monospace;
          font-size: 12px;
          color: var(--sv-text-primary);
          white-space: pre-wrap;
        }
      }
    }
  }
}

// Properties and events tables
.properties-table-container,
.events-table-container {
  margin-bottom: 32px;
  
  h3 {
    margin: 0 0 16px;
    font-size: 18px;
    font-weight: 500;
    color: var(--sv-text-primary);
  }
  
  table {
    width: 100%;
    border-collapse: collapse;
    
    th, td {
      padding: 12px 16px;
      text-align: left;
      border-bottom: 1px solid var(--sv-border-light);
    }
    
    th {
      background-color: var(--sv-bg-element);
      font-weight: 500;
      color: var(--sv-text-primary);
    }
    
    .prop-name, .event-name {
      font-family: 'Roboto Mono', monospace;
      color: var(--sv-primary);
      width: 20%;
    }
    
    .prop-type {
      font-family: 'Roboto Mono', monospace;
      color: var(--sv-text-secondary);
      width: 15%;
    }
    
    .prop-default {
      font-family: 'Roboto Mono', monospace;
      color: var(--sv-text-tertiary);
      width: 15%;
    }
    
    .prop-description, .event-description {
      color: var(--sv-text-secondary);
    }
  }
}

// Code snippets
.code-snippets-container {
  display: flex;
  flex-direction: column;
  gap: 24px;
  
  .code-snippet {
    h3 {
      margin: 0 0 8px;
      font-size: 18px;
      font-weight: 500;
      color: var(--sv-text-primary);
    }
    
    p {
      margin: 0 0 16px;
      color: var(--sv-text-secondary);
    }
    
    pre {
      margin: 0;
      padding: 16px;
      border-radius: 4px;
      background-color: var(--sv-bg-element);
      overflow-x: auto;
      
      code {
        font-family: 'Roboto Mono', monospace;
        font-size: 14px;
        color: var(--sv-text-primary);
      }
    }
  }
}

// Playground tab
.playground-container {
  height: 100%;
  display: flex;
  flex-direction: column;
  
  .playground-horizontal-layout {
    display: flex;
    flex-direction: row;
    height: 100%;
    gap: 24px;
    min-height: calc(100vh - 250px); // Ensure it takes up most of the viewport height
    
    .component-preview-wrapper {
      flex: 3;
      display: flex;
      flex-direction: column;
      
      .component-container {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 24px;
        border: 1px solid var(--sv-border-light);
        border-radius: 4px;
        background-color: var(--sv-bg-surface);
        min-height: 600px;
        position: relative; /* Add positioning context */
        flex-direction: column; /* Stack elements vertically */
        
        /* Component mount point styling */
        .component-mount-point {
          position: relative;
          min-height: 50px;
          display: flex;
          align-items: center;
          justify-content: center;
          margin-bottom: 20px;
        }
        
        /* Fallback button styling */
        .fallback-button-container {
          margin-top: 20px;
          
          .sv-button {
            display: inline-block;
            padding: 12px 24px;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            background-color: var(--sv-primary, #2196f3);
            color: white;
            
            &:hover {
              background-color: var(--sv-primary-dark, #1976d2);
            }
          }
        }
        
        /* Debug placeholder styling */
        .component-debug-placeholder {
          position: absolute;
          top: 16px;
          left: 16px;
          padding: 4px 8px;
          background-color: rgba(0,0,0,0.05);
          border-radius: 4px;
          font-size: 12px;
          color: var(--sv-text-tertiary);
          pointer-events: none; /* Prevent blocking component interaction */
        }
        
        /* Add visual indicator if component is not visible */
        &:empty::before {
          content: 'Component preview area';
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          color: var(--sv-text-tertiary);
          font-style: italic;
        }
        
        /* Ensure components are centered and visible */
        ::ng-deep {
          sv-button {
            margin: 0 auto;
            display: inline-block !important; /* Force display */
            
            /* Make button content more visible */
            .sv-button {
              font-size: 16px;
              padding: 12px 24px;
              min-width: 200px; /* Ensure button has minimum width */
              
              .sv-button-content {
                display: inline-block;
              }
            }
          }
          
          /* Target all possible component selectors */
          [class*="sv-"] {
            display: block;
            visibility: visible !important;
            opacity: 1 !important;
          }
        }
      }
    }
    
    .playground-tabs-container {
      flex: 1;
      min-width: 300px;
      max-width: 350px;
      border: 1px solid var(--sv-border-light);
      border-radius: 4px;
      overflow: hidden;
      height: 100%;
      
      ::ng-deep .mat-mdc-tab-body-wrapper {
        height: 100%;
      }
      
      .playground-tab-content {
        padding: 16px;
        height: 100%;
        overflow-y: auto;
      }
      
      .css-classes-list {
        list-style: none;
        padding: 0;
        margin: 0;
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        
        li {
          font-family: 'Roboto Mono', monospace;
          font-size: 14px;
          padding: 4px 8px;
          background-color: var(--sv-bg-element);
          border-radius: 4px;
          color: var(--sv-text-secondary);
        }
      }
    }
  }
}

// Responsive tab
.responsive-container {
  display: flex;
  flex-direction: column;
  height: 100%;
  
  .responsive-controls {
    margin-bottom: 24px;
    
    h3 {
      margin: 0 0 16px;
      font-size: 18px;
      font-weight: 500;
      color: var(--sv-text-primary);
    }
    
    .viewport-controls {
      display: flex;
      flex-direction: column;
      gap: 16px;
      
      .viewport-presets {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        
        .viewport-preset-button {
          padding: 8px 16px;
          background-color: var(--sv-bg-element);
          border: 1px solid var(--sv-border-light);
          border-radius: 4px;
          color: var(--sv-text-secondary);
          font-size: 14px;
          cursor: pointer;
          transition: all 0.2s ease;
          
          &:hover {
            background-color: var(--sv-bg-element-hover);
          }
          
          &.active {
            background-color: var(--sv-primary-light);
            color: var(--sv-primary);
            border-color: var(--sv-primary);
          }
        }
      }
      
      .viewport-custom {
        display: flex;
        align-items: center;
        margin-top: 8px;
        
        .viewport-size-inputs {
          display: flex;
          gap: 16px;
          align-items: center;
          
          label {
            display: flex;
            align-items: center;
            gap: 8px;
            color: var(--sv-text-secondary);
            font-size: 14px;
            
            input {
              width: 70px;
              padding: 4px 8px;
              border: 1px solid var(--sv-border-light);
              border-radius: 4px;
              background-color: var(--sv-bg-surface);
              color: var(--sv-text-primary);
              font-size: 14px;
              text-align: right;
              
              &:focus {
                outline: none;
                border-color: var(--sv-primary);
              }
            }
          }
        }
      }
    }
  }
  
  .viewport-simulator {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 16px;
    overflow: auto;
    padding-bottom: 24px;
    
    .viewport-info {
      display: flex;
      gap: 12px;
      align-items: center;
      
      .viewport-dimensions {
        font-family: 'Roboto Mono', monospace;
        font-size: 14px;
        padding: 4px 8px;
        background-color: var(--sv-bg-element);
        border-radius: 4px;
        color: var(--sv-text-secondary);
      }
      
      .viewport-name {
        font-size: 14px;
        color: var(--sv-text-tertiary);
      }
    }
    
    .viewport-frame {
      border: 4px solid var(--sv-border-medium);
      border-radius: 8px;
      overflow: hidden;
      background-color: white;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
      resize: both;
      max-width: 100%;
      
      .viewport-content {
        height: 100%;
        width: 100%;
        overflow: auto;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        padding: 16px;
        
        // Add viewport size indicator as a watermark
        &::before {
          content: attr(data-size);
          position: absolute;
          bottom: 8px;
          right: 8px;
          font-size: 12px;
          color: rgba(0, 0, 0, 0.2);
          pointer-events: none;
        }
        
        // Style the fallback button
        .responsive-fallback-button {
          .sv-button {
            display: inline-block;
            padding: 12px 24px;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            background-color: var(--sv-primary, #2196f3);
            color: white;
          }
        }
      }
    }
  }
}

// No demo message
.no-demo-message {
  margin: 48px auto;
  max-width: 400px;
  text-align: center;
  
  p {
    color: var(--sv-text-secondary);
    font-size: 16px;
    margin: 0;
  }
} 