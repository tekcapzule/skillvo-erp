// ========================================
// Accessibility Mixins
// ========================================
// Specialized mixins for implementing accessibility features
// These help ensure our application meets WCAG guidelines

// Visually hide elements while keeping them accessible to screen readers
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Focus ring styles for keyboard navigation
@mixin focus-ring($color: var(--skillvo-focus-ring-color), $width: var(--skillvo-focus-ring-width), $offset: var(--skillvo-focus-ring-offset)) {
  outline: $width solid $color;
  outline-offset: $offset;
}

// Skip link styles
@mixin skip-link {
  position: absolute;
  top: -100px;
  left: 8px;
  background: var(--bg-surface, white);
  color: var(--text-primary, black);
  padding: 8px 16px;
  z-index: 9999;
  
  &:focus {
    top: 8px;
  }
}

// ========================================
// Touch Target Accessibility Mixins
// ========================================
// The WCAG Target Size (2.5.5) criterion requires interactive elements to be at least 44x44px

// Basic accessible touch target
@mixin accessible-touch-target($size: var(--skillvo-min-touch-target)) {
  min-width: $size;
  min-height: $size;
  
  // Ensure proper touch area for inline elements
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

// Base touch target that ensures minimum tap area size
@mixin touch-target-base {
  min-width: var(--skillvo-min-touch-target, 44px);
  min-height: var(--skillvo-min-touch-target, 44px);
  // Display as inline-flex to ensure proper sizing when used on inline elements
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

// Standard touch target for clickable elements
@mixin touch-target {
  @include touch-target-base;
  
  // For elements where we can't directly size, create an accessible hit area
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 100%;
    min-width: var(--skillvo-min-touch-target, 44px);
    min-height: var(--skillvo-min-touch-target, 44px);
    z-index: -1;
  }
}

// Applies touch target size only on touch devices
@mixin touch-target-responsive {
  @media (pointer: coarse) {
    @include touch-target;
  }
}

// Touch target for icon buttons (common UI pattern)
@mixin touch-target-icon {
  @include touch-target-base;
  // Center the icon while maintaining the touch area
  padding: 10px; // Creates space around icon while maintaining minimum 44px hit area
  
  // Ensure icon itself is properly sized within the touch area
  > svg,
  > img,
  > .icon {
    width: 24px;
    height: 24px;
  }
}

// Touch target for form controls (inputs, selects, etc.)
@mixin touch-target-form-control {
  @include touch-target-base;
  padding: 10px 16px;
}

// ========================================
// Screen Reader Utilities
// ========================================

// Content only visible to screen readers
@mixin sr-only {
  @include visually-hidden;
}

// Content that is visually hidden but can be revealed on focus
// Useful for skip links and other accessibility features
@mixin sr-only-focusable {
  @include visually-hidden;
  
  &:focus,
  &:active {
    position: static;
    width: auto;
    height: auto;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }
}

// ========================================
// Reduced Motion
// ========================================

// Apply styles only for users who prefer reduced motion
@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

// Safely apply animations with reduced motion alternatives
@mixin safe-animation($properties...) {
  @each $prop in $properties {
    transition: $prop var(--skillvo-motion-duration-medium) var(--skillvo-motion-easing-standard);
  }
  
  @include reduced-motion {
    @each $prop in $properties {
      transition: $prop var(--skillvo-motion-duration-short) linear;
    }
  }
}

// ========================================
// Contrast & Readability
// ========================================

// High contrast mode detection for Windows users
@mixin high-contrast-mode {
  @media (forced-colors: active) {
    @content;
  }
}

// Ensure text has sufficient contrast with its background
@mixin readable-text($bg-color, $dark-text: var(--skillvo-text-primary), $light-text: var(--skillvo-text-on-dark)) {
  $brightness: (red($bg-color) * 299 + green($bg-color) * 587 + blue($bg-color) * 114) / 1000;
  @if $brightness > 155 {
    color: $dark-text;
  } @else {
    color: $light-text;
  }
} 