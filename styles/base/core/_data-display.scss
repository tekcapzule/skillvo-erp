/**
 * Data Display Controls Base - Core Styles
 * Version: 2.0.0
 * Last Updated: June 29, 2024
 * 
 * This file establishes the foundational styles for all data display components
 * in the SkillVo design system. It serves as the second level in our 
 * three-tier styling architecture:
 * 1. sv-ui-control-base - Base styles for all interactive controls
 * 2. sv-data-display-base (this file) - Base styles for all data display components
 * 3. Component-specific classes (e.g., sv-table, sv-list, sv-card, sv-chart)
 * 
 * For extension points and layer boundaries documentation, see:
 * styles/docs/base-control-extensions.md
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. IMPORTS
   2. VARIABLES & CONFIGURATION
   3. BASE CLASS DEFINITION
   4. DATA STRUCTURE COMPONENTS
   5. STATE VARIATIONS
   6. DENSITY VARIATIONS
   7. SIZE VARIATIONS
   8. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

/* ==========================================================================
   1. IMPORTS
   ========================================================================== */
@use 'sass:map';
@use './../../abstracts' as *;
@use './../core/_base-control' as *;
@use './../utils/mixins/state' as state;
@use './../utils/mixins/layout' as layout;
@use './../utils/mixins/typography' as typography;
@use './../utils/mixins/accessibility' as a11y;

/* ==========================================================================
   2. VARIABLES & CONFIGURATION
   ========================================================================== */

// Data container properties
$data-padding-x: var(--sv-space-4);
$data-padding-y: var(--sv-space-3);
$data-border-width: 1px;

// Data structure spacing
$data-row-spacing: var(--sv-space-1);
$data-cell-spacing: var(--sv-space-2);

// Data typography
$data-font-weight-header: var(--sv-font-weight-semibold);
$data-font-size-header: var(--sv-font-size-sm);

/* ==========================================================================
   3. BASE CLASS DEFINITION
   ========================================================================== */

/**
 * The sv-data-display-base class provides foundational styling for all
 * data display components such as tables, lists, and data grids.
 * 
 * This class extends sv-ui-control-base and adds data display specific styling.
 */
.sv-data-display-control-base {
  // Inherit all base UI control styles
  @extend .sv-ui-control-base;
  
  // Box model adjustments for data displays
  display: block;
  width: 100%;
  padding: 0;
  margin: 0;
  
  // Data display specific styling
  background-color: var(--sv-bg-surface);
  border: $data-border-width solid var(--sv-border-medium);
  border-radius: var(--sv-radius-md);
  overflow: auto;
  
  // Typography defaults
  font-size: var(--sv-font-size-base);
  line-height: var(--sv-line-height-normal);
  color: var(--sv-text-primary);
  
  // Structure elements
  &__container {
    position: relative;
    width: 100%;
  }
  
  &__header {
    position: relative;
    padding: $data-padding-y $data-padding-x;
    border-bottom: $data-border-width solid var(--sv-border-light);
    background-color: var(--sv-bg-element);
  }
  
  &__body {
    position: relative;
    padding: $data-padding-y $data-padding-x;
  }
  
  &__footer {
    position: relative;
    padding: $data-padding-y $data-padding-x;
    border-top: $data-border-width solid var(--sv-border-light);
    background-color: var(--sv-bg-element);
  }
  
  // Empty state styling
  &.is-empty &__body {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: calc($data-padding-y * 3);
    font-style: italic;
    color: var(--sv-text-tertiary);
  }
  
  // Loading state
  &.is-loading {
    opacity: 0.7;
    pointer-events: none;
  }
}

/* ==========================================================================
   4. DATA STRUCTURE COMPONENTS
   ========================================================================== */

.sv-data-display-base {
  // Row-based data display (tables, lists)
  &__row {
    display: flex;
    align-items: center;
    width: 100%;
    padding: $data-row-spacing 0;
    
    &:not(:last-child) {
      border-bottom: $data-border-width solid var(--sv-border-light);
    }
    
    // Zebra striping for rows
    &:nth-child(even).sv-data-zebra {
      background-color: var(--sv-bg-element);
    }
    
    // Hoverable rows
    &.sv-data-hoverable:hover {
      background-color: var(--sv-bg-element-hover);
    }
    
    // Selected rows
    &.is-selected {
      background-color: var(--sv-bg-element-active);
    }
  }
  
  // Cell-based data components
  &__cell {
    flex: 1;
    min-width: 0;
    padding: $data-row-spacing $data-cell-spacing;
    overflow: hidden;
    text-overflow: ellipsis;
    
    // Cell alignment variations
    &.sv-cell-right {
      text-align: right;
    }
    
    &.sv-cell-center {
      text-align: center;
    }
    
    // Cell width variations
    &.sv-cell-fixed {
      flex: 0 0 auto;
    }
    
    &.sv-cell-fill {
      flex: 1 0 auto;
    }
    
    // Cell with numeric data
    &.sv-cell-numeric {
      text-align: right;
      font-variant-numeric: tabular-nums;
    }
  }
  
  // Header cells
  &__header-cell {
    font-weight: $data-font-weight-header;
    font-size: $data-font-size-header;
    color: var(--sv-text-secondary);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    white-space: nowrap;
    
    // Sortable header cells
    &.is-sortable {
      cursor: pointer;
      user-select: none;
      
      &:hover {
        color: var(--sv-primary);
      }
      
      &.is-sorted {
        color: var(--sv-primary);
      }
    }
  }
}

/* ==========================================================================
   5. STATE VARIATIONS
   ========================================================================== */

.sv-data-display-base {
  // Error state
  &.has-error {
    border-color: var(--sv-error);
    
    .sv-data-display-base__header {
      border-bottom-color: var(--sv-error-light);
    }
  }
  
  // Warning state
  &.has-warning {
    border-color: var(--sv-warning);
    
    .sv-data-display-base__header {
      border-bottom-color: var(--sv-warning-light);
    }
  }
  
  // Success state
  &.has-success {
    border-color: var(--sv-success);
    
    .sv-data-display-base__header {
      border-bottom-color: var(--sv-success-light);
    }
  }
  
  // Selectable data displays
  &.is-selectable {
    .sv-data-display-base__row {
      cursor: pointer;
      user-select: none;
      
      &:hover {
        background-color: var(--sv-bg-element-hover);
      }
      
      &.is-selected {
        background-color: var(--sv-bg-element-active);
      }
    }
  }
  
  // Sortable data displays
  &.is-sortable {
    .sv-data-display-base__header-cell {
      cursor: pointer;
      user-select: none;
      
      &:hover {
        color: var(--sv-primary);
      }
    }
  }
  
  // Scrollable data displays
  &.is-scrollable {
    max-height: var(--sv-size-96);
    overflow-y: auto;
    
    .sv-data-display-base__header {
      position: sticky;
      top: 0;
      z-index: 1;
    }
  }
}

/* ==========================================================================
   6. DENSITY VARIATIONS
   ========================================================================== */

.sv-data-display-base {
  // Compact density
  &.sv-density-compact {
    .sv-data-display-base__header,
    .sv-data-display-base__body,
    .sv-data-display-base__footer {
      padding: var(--sv-space-2) var(--sv-space-3);
    }
    
    .sv-data-display-base__row {
      padding: 0;
    }
    
    .sv-data-display-base__cell {
      padding: var(--sv-space-1) var(--sv-space-1);
    }
  }
  
  // Normal density (default)
  &.sv-density-normal {
    // Default values already applied
  }
  
  // Comfortable density
  &.sv-density-comfortable {
    .sv-data-display-base__header,
    .sv-data-display-base__body,
    .sv-data-display-base__footer {
      padding: var(--sv-space-4) var(--sv-space-5);
    }
    
    .sv-data-display-base__row {
      padding: var(--sv-space-2) 0;
    }
    
    .sv-data-display-base__cell {
      padding: var(--sv-space-2) var(--sv-space-3);
    }
  }
}

/* ==========================================================================
   7. SIZE VARIATIONS
   ========================================================================== */

.sv-data-display-base {
  // Small size
  &.sv-size-sm {
    font-size: var(--sv-font-size-sm);
    
    .sv-data-display-base__header-cell {
      font-size: var(--sv-font-size-xs);
    }
  }
  
  // Default (medium) size inherits from base class
  
  // Large size
  &.sv-size-lg {
    font-size: var(--sv-font-size-lg);
    
    .sv-data-display-base__header-cell {
      font-size: var(--sv-font-size-base);
    }
  }
}

/* ==========================================================================
   8. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

.sv-data-display-base {
  // High contrast mode support
  @include a11y.high-contrast-mode {
    border: 1px solid ButtonText;
    
    .sv-data-display-base__header,
    .sv-data-display-base__footer {
      border-color: ButtonText;
    }
    
    .sv-data-display-base__row {
      &:not(:last-child) {
        border-bottom-color: ButtonText;
      }
      
      &.is-selected {
        background-color: Highlight;
        color: HighlightText;
      }
    }
  }
  
  // Support for reduced motion
  @include a11y.reduced-motion {
    transition: none;
  }
  
  // Support for focusing on rows
  .sv-data-display-base__row {
    &:focus-visible {
      @include a11y.focus-visible-enhanced;
      position: relative;
      z-index: 1;
    }
  }
}