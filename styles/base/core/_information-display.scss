/**
 * Information Display Controls Base - Category-Level Styles
 * Version: 1.0.0
 * Last Updated: April 29, 2025
 * 
 * This file establishes the category-level styles for all information display components
 * in the SkillVo design system. It serves as the middle layer in our 
 * three-tier styling architecture:
 * 1. sv-ui-control-base - Base styles for all interactive controls
 * 2. sv-info-display-base (this file) - Base styles for information display components
 * 3. Component-specific classes (e.g., sv-label, sv-badge, sv-tooltip, sv-tag)
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. VARIABLES & CONFIGURATION
   2. MIXINS
      2.1 Layout Mixins
      2.2 Content Formatting Mixins
      2.3 Visual Style Mixins
   3. BASE CLASS DEFINITION
   4. PRIORITY VARIATIONS
   5. DENSITY VARIATIONS
   6. ALIGNMENT VARIATIONS
   7. TRUNCATION VARIATIONS
   8. ANIMATION EXTENSIONS
   9. PRINT REFINEMENTS
   10. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */
   @use './base-control' as *;

// Information content spacing
$info-display-spacing-x: var(--sv-padding-2);
$info-display-spacing-y: var(--sv-padding-1);

// Information display states
$info-display-transition-properties: color, background-color, border-color, box-shadow, opacity;
$info-display-transition-duration: var(--sv-motion-duration-short);

// Content display variables
$info-display-max-lines: 3;
$info-display-line-clamp: 2;

/* ==========================================================================
   2. MIXINS
   ========================================================================== */

/* 2.1 Layout Mixins
   ========================================================================== */

// Information content alignment options
@mixin info-display-align($alignment: 'left') {
  @if $alignment == 'left' {
    text-align: left;
    justify-content: flex-start;
  } @else if $alignment == 'center' {
    text-align: center;
    justify-content: center;
  } @else if $alignment == 'right' {
    text-align: right;
    justify-content: flex-end;
  }
}

// Flexible display container (inline, block, flex)
@mixin info-display-container($display: 'inline-flex') {
  @if $display == 'inline' {
    display: inline;
  } @else if $display == 'inline-block' {
    display: inline-block;
  } @else if $display == 'inline-flex' {
    display: inline-flex;
    align-items: center;
  } @else if $display == 'block' {
    display: block;
  } @else if $display == 'flex' {
    display: flex;
    align-items: center;
  }
}

/* 2.2 Content Formatting Mixins
   ========================================================================== */

// Content truncation options
@mixin info-display-truncate($type: 'single') {
  @if $type == 'single' {
    @include text-truncate;
  } @else if $type == 'multi' {
    @include text-truncate-multiline($info-display-line-clamp);
  }
}

// Word wrapping control
@mixin info-display-wrap($wrap: true) {
  @if $wrap {
    white-space: normal;
    word-wrap: break-word;
    overflow-wrap: break-word;
  } @else {
    white-space: nowrap;
    word-wrap: normal;
    overflow-wrap: normal;
  }
}

/* 2.3 Visual Style Mixins
   ========================================================================== */

// Information priority styling
@mixin info-display-priority($priority: 'normal') {
  @if $priority == 'high' {
    font-weight: var(--sv-font-semibold);
    color: var(--sv-text-primary);
  } @else if $priority == 'normal' {
    font-weight: var(--sv-font-normal);
    color: var(--sv-text-primary);
  } @else if $priority == 'low' {
    font-weight: var(--sv-font-normal);
    color: var(--sv-text-secondary);
  } @else if $priority == 'subtle' {
    font-weight: var(--sv-font-normal);
    color: var(--sv-text-tertiary);
  }
}

// Information density styling
@mixin info-display-density($density: 'normal') {
  @if $density == 'compact' {
    padding: var(--sv-padding-1) var(--sv-padding-2);
    line-height: var(--sv-leading-tight);
  } @else if $density == 'normal' {
    padding: $info-display-spacing-y $info-display-spacing-x;
    line-height: var(--sv-leading-normal);
  } @else if $density == 'comfortable' {
    padding: var(--sv-padding-2) var(--sv-padding-3);
    line-height: var(--sv-leading-relaxed);
  }
}

/* ==========================================================================
   3. BASE CLASS DEFINITION
   ========================================================================== */

.sv-info-display-base {
  // Extend the UI control base class
  @extend .sv-ui-control-base;
  
  // Modify base properties for information display
  @include info-display-container('inline-flex');
  @include info-display-density('normal');
  @include info-display-align('left');
  
  // Reset some control properties that don't apply to info displays
  border: none;
  background-color: transparent;
  
  // Typography defaults for information display
  @include typography('base', 'normal', 'normal');
  @include info-display-wrap(true);
  @include text-truncate;
  
  // Transition adjustments for info displays
  transition-property: $info-display-transition-properties;
  transition-duration: $info-display-transition-duration;
  
  // Support for icons in information displays
  &.has-icon {
    gap: var(--sv-space-2);
    
    .sv-icon {
      color: currentColor;
      flex-shrink: 0;
    }
  }
  
  // Support for interactive information displays (when needed)
  &.is-interactive {
    cursor: pointer;
    
    &:hover {
      color: var(--sv-primary);
    }
    
    &:focus-visible {
      outline: $focus-ring-width solid $focus-ring-color;
      outline-offset: $focus-ring-offset;
    }
  }
  
  // Support for conditional visibility
  &.is-conditional {
    opacity: 0;
    
    &.is-visible {
      opacity: 1;
    }
  }
}

/* ==========================================================================
   4. PRIORITY VARIATIONS
   ========================================================================== */

// Information priority variations
.sv-info-priority-high {
  @include info-display-priority('high');
}

.sv-info-priority-normal {
  @include info-display-priority('normal');
}

.sv-info-priority-low {
  @include info-display-priority('low');
}

.sv-info-priority-subtle {
  @include info-display-priority('subtle');
}

/* ==========================================================================
   5. DENSITY VARIATIONS
   ========================================================================== */

// Information density variations
.sv-info-density-compact {
  @include info-display-density('compact');
}

.sv-info-density-normal {
  @include info-display-density('normal');
}

.sv-info-density-comfortable {
  @include info-display-density('comfortable');
}

/* ==========================================================================
   6. ALIGNMENT VARIATIONS
   ========================================================================== */

// Information alignment variations
.sv-info-align-left {
  @include info-display-align('left');
}

.sv-info-align-center {
  @include info-display-align('center');
}

.sv-info-align-right {
  @include info-display-align('right');
}

/* ==========================================================================
   7. TRUNCATION VARIATIONS
   ========================================================================== */

// Information truncation variations
.sv-info-truncate-single {
  @include info-display-truncate('single');
}

.sv-info-truncate-multi {
  @include info-display-truncate('multi');
}

.sv-info-no-truncate {
  text-overflow: initial;
  white-space: normal;
  overflow: visible;
}

/* ==========================================================================
   8. ANIMATION EXTENSIONS
   ========================================================================== */

// Information-specific animations
.sv-info-animate-highlight {
  animation: info-highlight 2s ease-out;
}

@keyframes info-highlight {
  0% {
    background-color: var(--sv-primary-light);
  }
  100% {
    background-color: transparent;
  }
}

.sv-info-animate-update {
  animation: info-update 1s ease-out;
}

@keyframes info-update {
  0%, 50% {
    color: var(--sv-primary);
  }
  100% {
    color: inherit;
  }
}

/* ==========================================================================
   9. PRINT REFINEMENTS
   ========================================================================== */

@media print {
  .sv-info-display-base {
    color: #000 !important;
    
    // Ensure all text is visible in print
    &.sv-info-truncate-single,
    &.sv-info-truncate-multi {
      text-overflow: initial;
      white-space: normal;
      overflow: visible;
      -webkit-line-clamp: initial;
      -webkit-box-orient: initial;
      display: block;
    }
    
    // Hide conditional elements that are not visible
    &.is-conditional:not(.is-visible) {
      display: none !important;
    }
  }
}

/* ==========================================================================
   10. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

// Enhanced contrast modes
@media (prefers-contrast: more) {
  .sv-info-display-base {
    // Improve contrast for all information displays
    &.sv-info-priority-low,
    &.sv-info-priority-subtle {
      color: var(--sv-text-primary);
    }
  }
}

// High contrast mode support
@media (forced-colors: active) {
  .sv-info-display-base {
    color: CanvasText;
    
    &.is-interactive:hover {
      color: Highlight;
    }
    
    &.sv-info-priority-high {
      font-weight: bold;
    }
  }
}