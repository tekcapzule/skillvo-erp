/**
 * Feedback Controls Base - Core Styles
 * Version: 2.0.0
 * Last Updated: June 29, 2024
 * 
 * This file establishes the foundational styles for all feedback UI components
 * in the SkillVo design system. It serves as the second level in our 
 * three-tier styling architecture:
 * 1. sv-ui-control-base - Base styles for all interactive controls
 * 2. sv-feedback-control-base (this file) - Base styles for all feedback components
 * 3. Component-specific classes (e.g., sv-toast, sv-alert, sv-notification)
 * 
 * For extension points and layer boundaries documentation, see:
 * styles/docs/base-control-extensions.md
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. IMPORTS
   2. VARIABLES & CONFIGURATION
   3. BASE CLASS DEFINITION
   4. FEEDBACK TYPES/SEVERITY
   5. POSITIONING VARIATIONS
   6. ANIMATION VARIATIONS
   7. SIZE VARIATIONS
   8. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

/* ==========================================================================
   1. IMPORTS
   ========================================================================== */
@use 'sass:map';
@use './../../abstracts' as *;
@use './../core/_base-control' as *;
@use './../utils/mixins/state' as state;
@use './../utils/mixins/layout' as layout;
@use './../utils/mixins/typography' as typography;
@use './../utils/mixins/accessibility' as a11y;

/* ==========================================================================
   2. VARIABLES & CONFIGURATION
   ========================================================================== */

// Feedback component z-index
$feedback-z-index: var(--sv-z-index-tooltip);

// Animation durations specific to feedback components
$feedback-animation-duration: var(--sv-motion-duration-medium);

// Border width for feedback components
$feedback-border-width: 1px;

// Icon sizes
$feedback-icon-size: var(--sv-icon-size-md);

// Close button size
$feedback-close-button-size: var(--sv-size-8);

/* ==========================================================================
   3. BASE CLASS DEFINITION
   ========================================================================== */

/**
 * The sv-feedback-control-base class provides foundational styling for all
 * feedback-related UI controls such as alerts, toasts, and notifications.
 * 
 * This class extends sv-ui-control-base and adds feedback-specific styling.
 */
.sv-feedback-control-base {
  // Inherit all base UI control styles
  @extend .sv-ui-control-base;
  
  // Box model adjustments for feedback elements
  display: flex;
  align-items: center;
  width: 100%;
  max-width: var(--sv-size-96);
  padding: var(--sv-space-3) var(--sv-space-4);
  margin: 0;
  
  // Appearance adjustments
  position: relative;
  border-radius: var(--sv-radius-md);
  box-shadow: var(--sv-shadow-md);
  
  // Feedback content structure
  &__icon {
    flex-shrink: 0;
    width: $feedback-icon-size;
    height: $feedback-icon-size;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    margin-right: var(--sv-space-3);
  }
  
  &__content {
    flex: 1;
    min-width: 0;
  }
  
  &__title {
    margin: 0 0 var(--sv-space-1) 0;
    font-size: var(--sv-font-size-base);
    font-weight: var(--sv-font-weight-semibold);
    color: inherit;
  }
  
  &__message {
    margin: 0;
    font-size: var(--sv-font-size-sm);
    color: inherit;
  }
  
  &__close {
    position: absolute;
    top: var(--sv-space-2);
    right: var(--sv-space-2);
    width: $feedback-close-button-size;
    height: $feedback-close-button-size;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--sv-radius-full);
    background-color: transparent;
    border: none;
    cursor: pointer;
    color: var(--sv-text-secondary);
    
    &:hover {
      background-color: var(--sv-bg-element-hover);
    }
    
    &:focus {
      @include state.focus-state;
    }
  }
  
  // States
  &[aria-hidden="true"] {
    display: none;
  }
}

/* ==========================================================================
   4. FEEDBACK TYPES/SEVERITY
   ========================================================================== */

.sv-feedback-control-base {
  // Info variant
  &.sv-feedback-info {
    border-color: var(--sv-info);
    background-color: var(--sv-info-light);
    color: var(--sv-text-primary);
    
    .sv-feedback-control-base__icon {
      color: var(--sv-info);
    }
  }
  
  // Success variant
  &.sv-feedback-success {
    border-color: var(--sv-success);
    background-color: var(--sv-success-light);
    color: var(--sv-text-primary);
    
    .sv-feedback-control-base__icon {
      color: var(--sv-success);
    }
  }
  
  // Warning variant
  &.sv-feedback-warning {
    border-color: var(--sv-warning);
    background-color: var(--sv-warning-light);
    color: var(--sv-text-primary);
    
    .sv-feedback-control-base__icon {
      color: var(--sv-warning);
    }
  }
  
  // Error variant
  &.sv-feedback-error {
    border-color: var(--sv-error);
    background-color: var(--sv-error-light);
    color: var(--sv-text-primary);
    
    .sv-feedback-control-base__icon {
      color: var(--sv-error);
    }
  }
  
  // Filled variant (solid background)
  &.sv-feedback-filled {
    &.sv-feedback-info {
      background-color: var(--sv-info);
      color: var(--sv-text-on-dark);
      
      .sv-feedback-control-base__icon {
        color: var(--sv-text-on-dark);
      }
    }
    
    &.sv-feedback-success {
      background-color: var(--sv-success);
      color: var(--sv-text-on-dark);
      
      .sv-feedback-control-base__icon {
        color: var(--sv-text-on-dark);
      }
    }
    
    &.sv-feedback-warning {
      background-color: var(--sv-warning);
      color: var(--sv-text-on-dark);
      
      .sv-feedback-control-base__icon {
        color: var(--sv-text-on-dark);
      }
    }
    
    &.sv-feedback-error {
      background-color: var(--sv-error);
      color: var(--sv-text-on-dark);
      
      .sv-feedback-control-base__icon {
        color: var(--sv-text-on-dark);
      }
    }
  }
  
  // Outlined variant
  &.sv-feedback-outlined {
    background-color: transparent;
    
    &.sv-feedback-info {
      border: $feedback-border-width solid var(--sv-info);
      color: var(--sv-info-dark);
    }
    
    &.sv-feedback-success {
      border: $feedback-border-width solid var(--sv-success);
      color: var(--sv-success-dark);
    }
    
    &.sv-feedback-warning {
      border: $feedback-border-width solid var(--sv-warning);
      color: var(--sv-warning-dark);
    }
    
    &.sv-feedback-error {
      border: $feedback-border-width solid var(--sv-error);
      color: var(--sv-error-dark);
    }
  }
}

/* ==========================================================================
   5. POSITIONING VARIATIONS
   ========================================================================== */

.sv-feedback-control-base {
  // Fixed position feedback components (toasts, notifications)
  &.sv-feedback-fixed {
    position: fixed;
    z-index: $feedback-z-index;
  }
  
  // Position variants
  &.sv-feedback-top {
    top: var(--sv-space-4);
    left: 50%;
    transform: translateX(-50%);
  }
  
  &.sv-feedback-bottom {
    bottom: var(--sv-space-4);
    left: 50%;
    transform: translateX(-50%);
  }
  
  &.sv-feedback-top-right {
    top: var(--sv-space-4);
    right: var(--sv-space-4);
  }
  
  &.sv-feedback-top-left {
    top: var(--sv-space-4);
    left: var(--sv-space-4);
  }
  
  &.sv-feedback-bottom-right {
    bottom: var(--sv-space-4);
    right: var(--sv-space-4);
  }
  
  &.sv-feedback-bottom-left {
    bottom: var(--sv-space-4);
    left: var(--sv-space-4);
  }
  
  // Inline (non-fixed) feedback
  &.sv-feedback-inline {
    position: relative;
    width: 100%;
    margin: var(--sv-space-2) 0;
  }
}

/* ==========================================================================
   6. ANIMATION VARIATIONS
   ========================================================================== */

.sv-feedback-control-base {
  // Fade animation
  &.sv-feedback-fade {
    opacity: 0;
    transition: opacity $feedback-animation-duration var(--sv-motion-ease-standard);
    
    &.sv-feedback-visible {
      opacity: 1;
    }
  }
  
  // Slide animation based on position
  &.sv-feedback-slide {
    transition: transform $feedback-animation-duration var(--sv-motion-ease-standard),
                opacity $feedback-animation-duration var(--sv-motion-ease-standard);
    opacity: 0;
    
    &.sv-feedback-top,
    &.sv-feedback-top-left,
    &.sv-feedback-top-right {
      transform: translateY(-100%);
      
      &.sv-feedback-visible {
        transform: translateY(0);
        opacity: 1;
      }
    }
    
    &.sv-feedback-bottom,
    &.sv-feedback-bottom-left,
    &.sv-feedback-bottom-right {
      transform: translateY(100%);
      
      &.sv-feedback-visible {
        transform: translateY(0);
        opacity: 1;
      }
    }
  }
  
  // Auto-hide functionality with progress bar
  &.sv-feedback-auto-hide {
    &::before {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      height: 3px;
      background-color: rgba(255, 255, 255, 0.3);
      width: 100%;
      transform-origin: left;
      animation: feedback-progress linear forwards;
      animation-duration: var(--sv-feedback-duration, 5000ms);
    }
  }
}

@keyframes feedback-progress {
  0% { transform: scaleX(1); }
  100% { transform: scaleX(0); }
}

/* ==========================================================================
   7. SIZE VARIATIONS
   ========================================================================== */

.sv-feedback-control-base {
  // Small size
  &.sv-size-sm {
    padding: var(--sv-space-2) var(--sv-space-3);
    
    .sv-feedback-control-base__title {
      font-size: var(--sv-font-size-sm);
    }
    
    .sv-feedback-control-base__message {
      font-size: var(--sv-font-size-xs);
    }
    
    .sv-feedback-control-base__icon {
      width: var(--sv-icon-size-sm);
      height: var(--sv-icon-size-sm);
    }
  }
  
  // Default (medium) size inherits from base class
  
  // Large size
  &.sv-size-lg {
    padding: var(--sv-space-4) var(--sv-space-5);
    
    .sv-feedback-control-base__title {
      font-size: var(--sv-font-size-lg);
    }
    
    .sv-feedback-control-base__message {
      font-size: var(--sv-font-size-base);
    }
    
    .sv-feedback-control-base__icon {
      width: var(--sv-icon-size-lg);
      height: var(--sv-icon-size-lg);
    }
  }
}

/* ==========================================================================
   8. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

.sv-feedback-control-base {
  // Better support for screen readers
  &[role="alert"] {
    &:not([aria-live]) {
      aria-live: assertive;
    }
  }
  
  &[role="status"] {
    &:not([aria-live]) {
      aria-live: polite;
    }
  }
  
  // High contrast mode support
  @include a11y.high-contrast-mode {
    border: 1px solid ButtonText;
    
    &.sv-feedback-info,
    &.sv-feedback-success,
    &.sv-feedback-warning,
    &.sv-feedback-error {
      border: 1px solid ButtonText;
      
      .sv-feedback-control-base__icon {
        color: ButtonText;
      }
    }
    
    &.sv-feedback-filled {
      background-color: ButtonFace;
      color: ButtonText;
    }
  }
  
  // Support for reduced motion
  @include a11y.reduced-motion {
    transition: none;
    
    &.sv-feedback-auto-hide::before {
      animation: none;
    }
  }
}