/**
 * Action Controls Base - Core Styles
 * Version: 1.0.0
 * Last Updated: April 29, 2025
 * 
 * This file establishes the foundational styles for all action-based UI components
 * in the SkillVo design system. This serves as the second level in our 
 * three-tier styling architecture:
 * 1. sv-ui-control-base - Base styles for all interactive controls
 * 2. sv-action-control-base (this file) - Base styles for action controls
 * 3. Component-specific classes (e.g., sv-button, sv-link, sv-icon-button)
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. VARIABLES & CONFIGURATION
   2. MIXINS
      2.1 Action-Specific State Mixins
      2.2 Action Layout Mixins 
   3. BASE CLASS DEFINITION
   4. VARIANTS
      4.1 Emphasis Variants
      4.2 Connectivity Variants
   5. ICONOGRAPHY SUPPORT
   6. SIZE ADJUSTMENTS
   7. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */
   @use './base-control' as *;


// Icon spacing within action controls
$action-icon-spacing: var(--sv-space-2);

// Default action component sizing
$action-min-width: calc(var(--sv-min-touch-target) * 2);
$action-padding-x-factor: 1.5; // Multiple of the standard padding

/* ==========================================================================
   2. MIXINS
   ========================================================================== */

/* 2.1 Action-Specific State Mixins
   ========================================================================== */

// Primary action styling (for CTA buttons, etc.)
@mixin primary-action {
  background-color: var(--sv-primary);
  border-color: var(--sv-primary);
  color: var(--sv-text-on-dark);
  
  &:hover:not(:disabled):not(.disabled) {
    background-color: var(--sv-primary-dark);
    border-color: var(--sv-primary-dark);
  }
  
  &:active:not(:disabled):not(.disabled) {
    background-color: var(--sv-primary-dark);
    border-color: var(--sv-primary-dark);
    transform: translateY(1px);
  }
  
  &:focus {
    box-shadow: 0 0 0 var(--sv-focus-ring-width) rgba(var(--sv-primary-500-rgb), 0.4);
  }
}

// Secondary action styling
@mixin secondary-action {
  background-color: var(--sv-bg-element);
  border-color: var(--sv-border-medium);
  color: var(--sv-text-primary);
  
  &:hover:not(:disabled):not(.disabled) {
    background-color: var(--sv-bg-element-hover);
    border-color: var(--sv-border-dark);
  }
  
  &:active:not(:disabled):not(.disabled) {
    background-color: var(--sv-bg-element-active);
    border-color: var(--sv-border-dark);
    transform: translateY(1px);
  }
}

// Tertiary action styling (for less prominent actions)
@mixin tertiary-action {
  background-color: transparent;
  border-color: transparent;
  color: var(--sv-text-primary);
  
  &:hover:not(:disabled):not(.disabled) {
    background-color: var(--sv-bg-element-hover);
    color: var(--sv-text-accent);
  }
  
  &:active:not(:disabled):not(.disabled) {
    background-color: var(--sv-bg-element-active);
    transform: translateY(1px);
  }
}

// Destructive action styling (for delete, remove actions)
@mixin destructive-action {
  background-color: var(--sv-error);
  border-color: var(--sv-error);
  color: var(--sv-text-on-dark);
  
  &:hover:not(:disabled):not(.disabled) {
    background-color: var(--sv-error-dark, var(--sv-error));
    border-color: var(--sv-error-dark, var(--sv-error));
  }
  
  &:active:not(:disabled):not(.disabled) {
    background-color: var(--sv-error-darker, var(--sv-error-dark, var(--sv-error)));
    border-color: var(--sv-error-darker, var(--sv-error-dark, var(--sv-error)));
    transform: translateY(1px);
  }
  
  &:focus {
    box-shadow: 0 0 0 var(--sv-focus-ring-width) rgba(var(--sv-error-500-rgb), 0.4);
  }
}

/* 2.2 Action Layout Mixins
   ========================================================================== */

// Center content with proper icon spacing
@mixin action-content-layout {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $action-icon-spacing;
  white-space: nowrap;
  text-align: center;
}

// Group actions with proper spacing and borders
@mixin action-group-layout {
  display: inline-flex;
  
  > * {
    border-radius: 0;
    margin-right: -1px; // Collapse borders
    
    &:first-child {
      border-top-left-radius: var(--sv-radius-md);
      border-bottom-left-radius: var(--sv-radius-md);
    }
    
    &:last-child {
      border-top-right-radius: var(--sv-radius-md);
      border-bottom-right-radius: var(--sv-radius-md);
      margin-right: 0;
    }
    
    &:focus {
      z-index: 1; // Ensure focus state is visible
    }
  }
}

/* ==========================================================================
   3. BASE CLASS DEFINITION
   ========================================================================== */

.sv-action-control-base {
  // Inherit all base control properties
  @extend .sv-ui-control-base;
  
  // Box model adjustments specific to action controls
  min-width: $action-min-width;
  text-align: center;
  line-height: 1.2;
  padding-left: calc(var(--sv-padding-3) * $action-padding-x-factor);
  padding-right: calc(var(--sv-padding-3) * $action-padding-x-factor);
  
  // Action-specific interaction models
  cursor: pointer;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
  
  // Layout of content
  @include action-content-layout;
  
  // Action-specific focus handling
  &:focus {
    box-shadow: 0 0 0 var(--sv-focus-ring-width) rgba(var(--sv-primary-500-rgb), 0.25);
  }
  
  // Action-specific hover effect
  &:hover:not(:disabled):not(.disabled) {
    filter: brightness(0.95);
  }
  
  // Action-specific active effect
  &:active:not(:disabled):not(.disabled) {
    transform: translateY(1px);
    filter: brightness(0.9);
  }
  
  // Additional loading state with size appropriate to actions
  &.loading,
  &.is-loading,
  &[aria-busy="true"] {
    position: relative;
    color: transparent;
    pointer-events: none;
    
    &::after {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      width: 1em;
      height: 1em;
      margin: -0.5em 0 0 -0.5em;
      border-radius: 50%;
      border: 0.125em solid transparent;
      border-top-color: currentColor;
      animation: spin var(--sv-spinner-duration) linear infinite;
    }
  }
}

/* ==========================================================================
   4. VARIANTS
   ========================================================================== */

/* 4.1 Emphasis Variants
   ========================================================================== */

.sv-action-control-base {
  // Primary action variant
  &.sv-action-primary {
    @include primary-action;
  }
  
  // Secondary action variant
  &.sv-action-secondary {
    @include secondary-action;
  }
  
  // Tertiary action variant (ghost/text buttons)
  &.sv-action-tertiary {
    @include tertiary-action;
  }
  
  // Destructive action variant
  &.sv-action-destructive {
    @include destructive-action;
  }
}

/* 4.2 Connectivity Variants
   ========================================================================== */

// Action button groups
.sv-action-group {
  @include action-group-layout;
}

// Action with dropdown
.sv-action-control-base {
  &.sv-action-with-dropdown {
    position: relative;
    padding-right: calc(var(--sv-padding-6) * $action-padding-x-factor);
    
    &::after {
      content: "";
      position: absolute;
      right: var(--sv-padding-3);
      top: 50%;
      width: 0.5em;
      height: 0.5em;
      border: 1px solid currentColor;
      border-width: 0 1px 1px 0;
      transform: translateY(-75%) rotate(45deg);
      pointer-events: none;
    }
  }
}

/* ==========================================================================
   5. ICONOGRAPHY SUPPORT
   ========================================================================== */

.sv-action-control-base {
  // Icon-only action styling
  &.sv-action-icon-only {
    padding: var(--sv-padding-2);
    min-width: auto;
    aspect-ratio: 1;
    justify-content: center;
    
    .sv-icon {
      margin: 0;
    }
  }
  
  // Icon positioning
  .sv-icon {
    flex-shrink: 0;
    width: var(--sv-icon-size-sm);
    height: var(--sv-icon-size-sm);
    
    // Icon alignment adjustments to align with text
    vertical-align: -0.125em;
    position: relative;
  }
  
  // Handle leading and trailing icons
  .sv-icon-leading {
    margin-right: $action-icon-spacing;
    margin-left: calc(-1 * $action-icon-spacing);
  }
  
  .sv-icon-trailing {
    margin-left: $action-icon-spacing;
    margin-right: calc(-1 * $action-icon-spacing);
  }
}

/* ==========================================================================
   6. SIZE ADJUSTMENTS
   ========================================================================== */

// Size variant adjustments specific to action controls
.sv-ui-size-xs.sv-action-control-base {
  @include typography('xs', 'medium');
  padding-left: calc(var(--sv-padding-2) * $action-padding-x-factor);
  padding-right: calc(var(--sv-padding-2) * $action-padding-x-factor);
  min-width: calc($action-min-width * 0.75);
  
  .sv-icon {
    width: var(--sv-icon-size-xs);
    height: var(--sv-icon-size-xs);
  }
}

.sv-ui-size-sm.sv-action-control-base {
  @include typography('sm', 'medium');
  padding-left: calc(var(--sv-padding-2) * $action-padding-x-factor);
  padding-right: calc(var(--sv-padding-2) * $action-padding-x-factor);
  min-width: calc($action-min-width * 0.85);
}

.sv-ui-size-md.sv-action-control-base {
  @include typography('base', 'medium');
  // Default size uses the default padding defined in the base class
}

.sv-ui-size-lg.sv-action-control-base {
  @include typography('lg', 'medium');
  padding-left: calc(var(--sv-padding-4) * $action-padding-x-factor);
  padding-right: calc(var(--sv-padding-4) * $action-padding-x-factor);
  min-width: calc($action-min-width * 1.15);
  
  .sv-icon {
    width: var(--sv-icon-size-md);
    height: var(--sv-icon-size-md);
  }
}

.sv-ui-size-xl.sv-action-control-base {
  @include typography('xl', 'medium');
  padding-left: calc(var(--sv-padding-5) * $action-padding-x-factor);
  padding-right: calc(var(--sv-padding-5) * $action-padding-x-factor);
  min-width: calc($action-min-width * 1.3);
  
  .sv-icon {
    width: var(--sv-icon-size-lg);
    height: var(--sv-icon-size-lg);
  }
}

/* ==========================================================================
   7. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

// Enhance focus visibility for action controls
.sv-action-control-base {
  &:focus-visible {
    outline-offset: calc(var(--sv-focus-ring-offset) + 1px);
  }
  
  // Ensure that links functioning as buttons have proper roles
  &[href]:not([role]) {
    &.sv-action-primary,
    &.sv-action-secondary,
    &.sv-action-tertiary,
    &.sv-action-destructive {
      role: "button";
    }
  }
  
  // Ensure action controls have proper focus indication in high contrast mode
  @media (forced-colors: active) {
    &:focus {
      outline: 2px solid Highlight;
      outline-offset: 4px;
    }
    
    // Ensure proper color contrast for different action types
    &.sv-action-primary {
      border: 1px solid ButtonText;
      background-color: ButtonFace;
      color: ButtonText;
    }
    
    &.sv-action-destructive {
      border: 1px solid ButtonText;
      background-color: Mark;
      color: ButtonText;
    }
    
    &:disabled {
      color: GrayText;
      border-color: GrayText;
    }
  }
}