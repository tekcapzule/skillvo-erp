/**
 * UI Control Base - Core Styles
 * Version: 3.1.0
 * Last Updated: June 28, 2024
 * 
 * This file establishes the foundational styles for all interactive UI components
 * in the SkillVo design system. It serves as the first level in our 
 * three-tier styling architecture:
 * 1. sv-ui-control-base (this file) - Base styles for all interactive controls
 * 2. Category-specific base classes (e.g., sv-button-base, sv-input-base)
 * 3. Component-specific classes (e.g., sv-button, sv-input)
 * 
 * For extension points and layer boundaries documentation, see:
 * styles/docs/base-control-extensions.md
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. IMPORTS
   2. VARIABLES & CONFIGURATION
   3. BASE CLASS DEFINITION
   4. SIZE VARIATIONS
   ========================================================================== */

/* ==========================================================================
   1. IMPORTS
   ========================================================================== */
@use 'sass:map';
@use './../../abstracts/' as *;
@use './../utils/mixins/state' as state;
@use './../utils/mixins/layout' as layout;
@use './../utils/mixins/typography' as typography;
@use './../utils/mixins/accessibility' as a11y;
@use './../utils/mixins/print' as print;
@use './../utils/mixins/rtl' as rtl;

/* ==========================================================================
   2. VARIABLES & CONFIGURATION
   ========================================================================== */
// These variables are used only within this file and not exported

// Base dimensions
$control-height-sm: var(--sv-control-height-sm);
$control-height-md: var(--sv-control-height-md);
$control-height-lg: var(--sv-control-height-lg);

// Base paddings
$control-padding-x-sm: var(--sv-control-padding-x-sm);
$control-padding-x-md: var(--sv-control-padding-x-md);
$control-padding-x-lg: var(--sv-control-padding-x-lg);

/* ==========================================================================
   3. BASE CLASS DEFINITION
   ========================================================================== */

/**
 * The sv-ui-control-base class provides fundamental styling for all
 * interactive UI controls. This class should never be used directly in HTML,
 * but serves as the base class that other control classes will extend.
 * 
 * Extension points:
 * 1. Box model (height, padding, margin)
 * 2. Visual styling (colors, borders, shadows)
 * 3. State handling (hover, focus, disabled)
 * 4. Layout & positioning (display, flex properties)
 * 5. Typography (font size, weight, line-height)
 * 
 * See styles/docs/base-control-extensions.md for detailed documentation.
 */
.sv-ui-control-base {
  // Box model
  box-sizing: border-box;
  margin: 0;
  padding: calc(var(--sv-space-1) / 2) var(--sv-space-2);
  height: $control-height-md;
  
  // Typography
  @include typography.typography-base('md', 'regular', 'normal');
  color: var(--sv-text-primary);
  text-decoration: none;
  
  // Visual styling
  background-color: var(--sv-bg-element);
  border: 1px solid var(--sv-border-medium);
  border-radius: var(--sv-radius-md);
  
  // Other properties
  display: inline-flex;
  align-items: center;
  justify-content: center;
  vertical-align: middle;
  position: relative;
  user-select: none;
  transition: 
    color var(--sv-motion-duration-short) ease-in-out,
    background-color var(--sv-motion-duration-short) ease-in-out,
    border-color var(--sv-motion-duration-short) ease-in-out,
    box-shadow var(--sv-motion-duration-short) ease-in-out,
    filter var(--sv-motion-duration-short) ease-in-out;
  
  // Accessibility
  min-width: var(--sv-min-touch-target);
  min-height: var(--sv-min-touch-target);
  
  // States
  &:focus {
    @include state.focus-state;
  }
  
  &:focus-visible {
    @include state.focus-visible-state;
  }
  
  &:hover:not(:disabled):not(.disabled):not([readonly]):not(.readonly) {
    @include state.hover-state;
  }
  
  &:active:not(:disabled):not(.disabled):not([readonly]):not(.readonly) {
    @include state.active-state;
  }
  
  &:disabled,
  &.disabled {
    @include state.disabled-state;
  }
  
  &[readonly],
  &.readonly {
    @include state.readonly-state;
  }
  
  &.loading {
    @include state.loading-state;
  }
  
  &[aria-expanded="true"],
  &.expanded {
    @include state.expanded-state;
  }
  
  // Reduced motion
  @include a11y.reduced-motion;
  
  // High contrast mode
  @include a11y.high-contrast-mode {
    // Provide high contrast overrides
  }
  
  // Print styles
  @include print.print-control-base;
}

/* ==========================================================================
   4. SIZE VARIATIONS
   ========================================================================== */

/**
 * Size variations for controls
 */
.sv-ui-control-base {
  &.sv-size-sm {
    height: $control-height-sm;
    padding-left: $control-padding-x-sm;
    padding-right: $control-padding-x-sm;
    font-size: var(--sv-font-size-sm);
  }
  
  &.sv-size-md {
    height: $control-height-md;
    padding-left: $control-padding-x-md;
    padding-right: $control-padding-x-md;
    font-size: var(--sv-font-size-md);
  }
  
  &.sv-size-lg {
    height: $control-height-lg;
    padding-left: $control-padding-x-lg;
    padding-right: $control-padding-x-lg;
    font-size: var(--sv-font-size-lg);
  }
}