// ========================================
// Theme Manager
// ========================================
// This file manages the application's theming system and provides utilities
// for theme switching, theme-specific styles, and theme detection.

@use 'sass:map';
@use '../abstracts/variables/colors' as *;
@use '../abstracts/mixins' as *;

// ========================================
// Theme System Architecture
// ========================================
// 
// The theme system follows these principles:
//
// 1. CSS Custom Properties (Variables)
//    - All theme colors and properties are defined as CSS variables
//    - The light theme is defined on :root as the default
//    - Other themes override these variables using class selectors
//
// 2. Theme Switching
//    - Themes are toggled via data-theme attribute on the html element
//    - A theme-transition class controls animation timing during theme change
//    - Themes can be switched dynamically at runtime without page reload
//
// 3. Theme Selection Strategy
//    - User preference stored in localStorage has highest priority
//    - If no preference exists, system preference is detected (prefers-color-scheme)
//    - If neither exists, default to light theme
//
// 4. Theme Integration Points
//    - Angular ThemeService in core/services/theme.service.ts manages theme state
//    - User can toggle themes via UI in user-profile.component.ts
//    - HTML data attributes and CSS classes control actual style application

// ========================================
// Theme Variable Application
// ========================================

// Root theme (light theme by default)
:root {
  // Apply theme variables
  @include generate-theme-vars($light-theme-map);
  
  // Apply transition for smooth theme switching
  @include theme-transition();
  
  // Default color scheme
  color-scheme: light;
}

// Dark mode preference via OS
@media (prefers-color-scheme: dark) {
  :root:not([data-theme="light"]) {
    // Apply dark theme variables
    @include generate-theme-vars($dark-theme-map);
    
    color-scheme: dark;
  }
}

// Explicit light theme override
[data-theme="light"] {
  // Apply light theme variables
  @include generate-theme-vars($light-theme-map);
  
  
  color-scheme: light;
}

// Explicit dark theme override
[data-theme="dark"] {
  // Apply dark theme variables
  @include generate-theme-vars($dark-theme-map);
  
  color-scheme: dark;
}

// Generate theme utility classes
@include generate-theme-utility-classes($theme-colors);

// Theme toggle transition
html.color-scheme-transition,
html.color-scheme-transition *,
html.color-scheme-transition *::before,
html.color-scheme-transition *::after {
  transition: all 0.3s ease !important;
  transition-delay: 0 !important;
}

// ========================================
// Theme Utility Classes
// ========================================

// Text color utility classes for theming
.text-theme-primary {
  color: var(--primary-600);
  
  [data-theme="dark"] & {
    color: var(--primary-400);
  }
}

.text-theme-secondary {
  color: var(--secondary-600);
  
  [data-theme="dark"] & {
    color: var(--secondary-400);
  }
}

// Background color utility classes
.bg-theme-primary {
  background-color: var(--bg-primary);
}

.bg-theme-secondary {
  background-color: var(--bg-secondary);
}

.bg-theme-surface {
  background-color: var(--bg-surface);
}

.bg-theme-app {
  background-color: var(--bg-app);
}