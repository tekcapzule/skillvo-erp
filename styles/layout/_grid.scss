// ========================================
// Grid Layout System
// ========================================
// A responsive grid system for layout construction
// Based on CSS Grid with fallbacks to flexbox

// Import SASS math module
@use "sass:math";

// ========================================
// Grid Variables
// ========================================

:root {
  /* Grid Structure */
  --grid-columns: 12;
  --grid-gutter: var(--space-4, 16px);
  --grid-max-width: var(--breakpoint-xl, 1200px);
  
  /* Grid Breakpoints */
  --breakpoint-xs: 0;
  --breakpoint-sm: var(--space-144, 576px);
  --breakpoint-md: var(--space-192, 768px);
  --breakpoint-lg: var(--space-248, 992px);
  --breakpoint-xl: var(--space-300, 1200px);
  
  /* Container Padding */
  --container-padding-x: var(--space-4, 16px);
  --container-padding-y: 0;
}

// ========================================
// Container
// ========================================

.container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: var(--container-padding-x);
  padding-left: var(--container-padding-x);
  max-width: var(--grid-max-width);
  
  &-fluid {
    max-width: 100%;
  }
  
  &-sm {
    max-width: var(--breakpoint-sm);
  }
  
  &-md {
    max-width: var(--breakpoint-md);
  }
  
  &-lg {
    max-width: var(--breakpoint-lg);
  }
  
  &-xl {
    max-width: var(--breakpoint-xl);
  }
}

// ========================================
// Row
// ========================================

.row {
  display: flex;
  flex-wrap: wrap;
  margin-right: calc(var(--grid-gutter) / -2);
  margin-left: calc(var(--grid-gutter) / -2);
  
  &-no-gutters {
    margin-right: 0;
    margin-left: 0;
    
    > .col,
    > [class*="col-"] {
      padding-right: 0;
      padding-left: 0;
    }
  }
}

// ========================================
// Columns
// ========================================

.col {
  position: relative;
  width: 100%;
  padding-right: calc(var(--grid-gutter) / 2);
  padding-left: calc(var(--grid-gutter) / 2);
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
}

// Generate column classes for each breakpoint and size
@mixin make-grid-columns($breakpoint: '') {
  $infix: if($breakpoint == '', '', '-#{$breakpoint}');
  
  @for $i from 1 through 12 {
    .col#{$infix}-#{$i} {
      flex: 0 0 percentage(math.div($i, 12));
      max-width: percentage(math.div($i, 12));
    }
  }
  
  .col#{$infix}-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: 100%;
  }
  
  .offset#{$infix}-0 {
    margin-left: 0;
  }
  
  @for $i from 1 through 11 {
    .offset#{$infix}-#{$i} {
      margin-left: percentage(math.div($i, 12));
    }
  }
}

// Default (xs)
@include make-grid-columns();

// Small (sm)
@media (min-width: var(--breakpoint-sm)) {
  @include make-grid-columns('sm');
}

// Medium (md)
@media (min-width: var(--breakpoint-md)) {
  @include make-grid-columns('md');
}

// Large (lg)
@media (min-width: var(--breakpoint-lg)) {
  @include make-grid-columns('lg');
}

// Extra large (xl)
@media (min-width: var(--breakpoint-xl)) {
  @include make-grid-columns('xl');
}

// ========================================
// CSS Grid Layout (Modern)
// ========================================

.grid {
  display: grid;
  grid-template-columns: repeat(var(--grid-columns), 1fr);
  gap: var(--grid-gutter);
  
  &-no-gap {
    gap: 0;
  }
  
  // Responsive grid templates
  @media (min-width: var(--breakpoint-sm)) {
    &-sm-2 { grid-template-columns: repeat(2, 1fr); }
    &-sm-3 { grid-template-columns: repeat(3, 1fr); }
    &-sm-4 { grid-template-columns: repeat(4, 1fr); }
  }
  
  @media (min-width: var(--breakpoint-md)) {
    &-md-2 { grid-template-columns: repeat(2, 1fr); }
    &-md-3 { grid-template-columns: repeat(3, 1fr); }
    &-md-4 { grid-template-columns: repeat(4, 1fr); }
    &-md-6 { grid-template-columns: repeat(6, 1fr); }
  }
  
  @media (min-width: var(--breakpoint-lg)) {
    &-lg-2 { grid-template-columns: repeat(2, 1fr); }
    &-lg-3 { grid-template-columns: repeat(3, 1fr); }
    &-lg-4 { grid-template-columns: repeat(4, 1fr); }
    &-lg-6 { grid-template-columns: repeat(6, 1fr); }
    &-lg-12 { grid-template-columns: repeat(12, 1fr); }
  }
}

// ========================================
// Auto Layout Grid
// ========================================

.auto-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(var(--auto-grid-min-size, var(--space-64, 16rem)), 1fr));
  gap: var(--grid-gutter);
} 