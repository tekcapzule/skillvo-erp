/**
 * Multi-Select Component Styles
 * Version: 2.0.0
 * Last Updated: July 20, 2024
 * 
 * This file contains styles specific to the multi-select component,
 * extending the selection-control-base class. The multi-select allows
 * users to select multiple options from a dropdown list.
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. VARIABLES & CONFIGURATION
   2. MULTI-SELECT BASE STYLES
   3. MULTI-SELECT VARIATIONS
   4. MULTI-SELECT STATES
   5. MULTI-SELECT ANIMATIONS
   6. ACCESSIBILITY ENHANCEMENTS
   7. RESPONSIVE ADJUSTMENTS
   ========================================================================== */

/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */

@use './../../abstracts/variables/' as *;
@use './../../base/core/selection-controls' as selection;
@use './../../base/utils/mixins/state' as state;
@use './../../base/utils/mixins/typography' as typography;
@use './../../base/utils/mixins/accessibility' as a11y;
@use './../../base/utils/mixins/responsive' as responsive;

// Multi-select specific variables
$multiselect-max-height: var(--sv-size-64);
$multiselect-z-index: var(--sv-z-index-dropdown);
$multiselect-item-height: var(--sv-size-10);
$multiselect-transition: all var(--sv-motion-duration-short) var(--sv-motion-ease-standard);
$multiselect-shadow: var(--sv-shadow-lg);
$multiselect-tag-height: var(--sv-size-6);
$multiselect-tag-border-radius: var(--sv-radius-full);
$multiselect-border-radius: var(--sv-radius-md);
$multiselect-border-color: var(--sv-border-medium);
$multiselect-bg-color: var(--sv-bg-surface);

/* ==========================================================================
   2. MULTI-SELECT BASE STYLES
   ========================================================================== */

.sv-multiselect {
  // Extend the base selection control class
  @extend .sv-selection-control-base;
  position: relative;
  display: block;
  width: 100%;
  
  // The trigger/input field that opens the dropdown and displays selected options
  &__field {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    min-height: calc($multiselect-item-height);
    padding: var(--sv-padding-1) var(--sv-padding-2);
    background-color: $multiselect-bg-color;
    border: 1px solid $multiselect-border-color;
    border-radius: $multiselect-border-radius;
    cursor: text;
    transition: $multiselect-transition;
    
    // Dropdown arrow icon
    &::after {
      content: '';
      position: absolute;
      right: var(--sv-space-3);
      top: 50%;
      transform: translateY(-50%);
      width: 0;
      height: 0;
      border-left: 5px solid transparent;
      border-right: 5px solid transparent;
      border-top: 5px solid var(--sv-text-primary);
      transition: transform var(--sv-motion-duration-short) var(--sv-motion-ease-standard);
      pointer-events: none;
    }
    
    // Rotate arrow when open
    &.is-expanded::after, 
    &[aria-expanded="true"]::after {
      transform: translateY(-50%) rotate(180deg);
    }
    
    // Hover state
    &:hover {
      border-color: var(--sv-border-dark);
    }
    
    // Focus state
    &:focus-within {
      @include state.focus-state;
    }
  }
  
  // Placeholder text
  &__placeholder {
    color: var(--sv-text-tertiary);
    pointer-events: none;
    user-select: none;
  }
  
  // Input for search/filtering
  &__input {
    flex: 1;
    border: none;
    background: transparent;
    padding: var(--sv-padding-1) var(--sv-padding-1);
    font-size: inherit;
    color: var(--sv-text-primary);
    min-width: 50px;
    
    &:focus {
      outline: none;
    }
  }
  
  // The tags representing selected items
  &__tag {
    display: inline-flex;
    align-items: center;
    height: $multiselect-tag-height;
    margin: var(--sv-space-1);
    padding: 0 var(--sv-padding-2);
    background-color: var(--sv-bg-element);
    border: 1px solid $multiselect-border-color;
    border-radius: $multiselect-tag-border-radius;
    font-size: var(--sv-font-size-sm);
    transition: $multiselect-transition;
    max-width: calc(100% - var(--sv-space-2));
    
    &-text {
      @include typography.text-truncate;
      max-width: 200px;
    }
    
    &-remove {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      margin-left: var(--sv-space-1);
      width: 16px;
      height: 16px;
      border-radius: 50%;
      background: var(--sv-bg-element-hover);
      cursor: pointer;
      position: relative;
      
      &:hover {
        background: var(--sv-bg-element-active);
      }
      
      &::before,
      &::after {
        content: '';
        position: absolute;
        width: 8px;
        height: 2px;
        background: var(--sv-text-primary);
      }
      
      &::before {
        transform: rotate(45deg);
      }
      
      &::after {
        transform: rotate(-45deg);
      }
    }
  }
  
  // Clear all selected items button
  &__clear {
    margin-left: auto;
    margin-right: var(--sv-space-2);
    font-size: var(--sv-font-size-sm);
    color: var(--sv-text-secondary);
    background: none;
    border: none;
    padding: var(--sv-padding-1);
    cursor: pointer;
    
    &:hover {
      color: var(--sv-text-primary);
    }
  }
  
  // The dropdown menu container
  &__dropdown {
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;
    max-height: $multiselect-max-height;
    overflow-y: auto;
    background-color: $multiselect-bg-color;
    border: 1px solid $multiselect-border-color;
    border-radius: $multiselect-border-radius;
    box-shadow: $multiselect-shadow;
    z-index: $multiselect-z-index;
    margin-top: var(--sv-space-1);
    padding: var(--sv-padding-1) 0;
    display: none;
    
    // When the dropdown is open
    &.is-open {
      display: block;
    }
  }
  
  // The dropdown menu items with checkboxes
  &__option {
    display: flex;
    align-items: center;
    padding: var(--sv-padding-2) var(--sv-padding-3);
    min-height: $multiselect-item-height;
    cursor: pointer;
    transition: background-color var(--sv-motion-duration-short) var(--sv-motion-ease-standard);
    
    // Hover state
    &:hover {
      background-color: var(--sv-bg-element-hover);
    }
    
    // Selected state
    &.is-selected {
      background-color: var(--sv-bg-element-active);
      
      // Checkbox for selected items
      .sv-checkbox__control {
        background-color: var(--sv-primary);
        border-color: var(--sv-primary);
        
        &::after {
          transform: translate(-50%, -70%) rotate(-45deg) scale(1);
        }
      }
    }
    
    // Disabled state
    &.is-disabled {
      opacity: 0.65;
      cursor: not-allowed;
      color: var(--sv-text-tertiary);
      pointer-events: none;
    }
    
    // Checkbox for each option
    .sv-checkbox {
      margin: 0;
      margin-right: var(--sv-space-2);
    }
  }
  
  // Group label for grouped options
  &__group-label {
    display: block;
    padding: var(--sv-padding-1) var(--sv-padding-3);
    font-size: var(--sv-font-size-sm);
    color: var(--sv-text-secondary);
    font-weight: var(--sv-font-medium);
    text-transform: uppercase;
    letter-spacing: var(--sv-tracking-wide);
  }
  
  // Divider between groups
  &__divider {
    height: 1px;
    margin: var(--sv-space-1) 0;
    background-color: var(--sv-border-light);
  }
  
  // Label for the multi-select
  &__label {
    display: block;
    margin-bottom: var(--sv-space-1);
    font-weight: var(--sv-font-medium);
  }
  
  // Helper text below the multi-select
  &__helper-text {
    margin-top: var(--sv-space-1);
    font-size: var(--sv-font-size-sm);
    color: var(--sv-text-secondary);
  }
  
  // Native multiple select (for progressive enhancement/fallback)
  &__native-select {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
    margin: 0;
  }
}

/* ==========================================================================
   3. MULTI-SELECT VARIATIONS
   ========================================================================== */

// Chip style - for more compact tag appearance
.sv-multiselect--chip {
  .sv-multiselect__tag {
    height: calc($multiselect-tag-height * 0.8);
    padding: 0 var(--sv-padding-1);
    border-radius: $multiselect-tag-border-radius;
    font-size: var(--sv-font-size-xs);
    
    &-remove {
      width: 14px;
      height: 14px;
      
      &::before,
      &::after {
        width: 6px;
      }
    }
  }
}

// Small size
.sv-multiselect--small {
  .sv-multiselect__field {
    min-height: calc($multiselect-item-height * 0.8);
    padding: var(--sv-padding-1);
  }
  
  .sv-multiselect__tag {
    height: calc($multiselect-tag-height * 0.8);
    font-size: var(--sv-font-size-xs);
  }
  
  .sv-multiselect__option {
    padding: var(--sv-padding-1) var(--sv-padding-2);
    min-height: calc($multiselect-item-height * 0.8);
    font-size: var(--sv-font-size-sm);
  }
  
  .sv-multiselect__input {
    font-size: var(--sv-font-size-sm);
  }
}

// Large size
.sv-multiselect--large {
  .sv-multiselect__field {
    min-height: calc($multiselect-item-height * 1.2);
    padding: var(--sv-padding-2) var(--sv-padding-3);
  }
  
  .sv-multiselect__tag {
    height: calc($multiselect-tag-height * 1.2);
    font-size: var(--sv-font-size-base);
    
    &-remove {
      width: 18px;
      height: 18px;
      
      &::before,
      &::after {
        width: 10px;
      }
    }
  }
  
  .sv-multiselect__option {
    padding: var(--sv-padding-3) var(--sv-padding-4);
    min-height: calc($multiselect-item-height * 1.2);
    font-size: var(--sv-font-size-lg);
  }
  
  .sv-multiselect__input {
    font-size: var(--sv-font-size-lg);
  }
}

/* ==========================================================================
   4. MULTI-SELECT STATES
   ========================================================================== */

.sv-multiselect {
  // Disabled state
  &.is-disabled {
    .sv-multiselect__field {
      opacity: 0.65;
      cursor: not-allowed;
      background-color: var(--sv-bg-element);
      color: var(--sv-text-tertiary);
      pointer-events: none;
    }
    
    .sv-multiselect__helper-text {
      color: var(--sv-text-tertiary);
    }
    
    .sv-multiselect__tag {
      opacity: 0.7;
    }
  }
  
  // Error state
  &.is-invalid {
    .sv-multiselect__field {
      border-color: var(--sv-error);
    }
    
    .sv-multiselect__helper-text {
      color: var(--sv-error);
    }
  }
  
  // Valid state
  &.is-valid {
    .sv-multiselect__field {
      border-color: var(--sv-success);
    }
    
    .sv-multiselect__helper-text {
      color: var(--sv-success);
    }
  }
  
  // Required indicator
  &.is-required .sv-multiselect__label::after {
    content: "*";
    color: var(--sv-error);
    margin-left: var(--sv-space-1);
  }
}

/* ==========================================================================
   5. MULTI-SELECT ANIMATIONS
   ========================================================================== */

@keyframes sv-multiselect-fade-in {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes sv-multiselect-tag-appear {
  from {
    opacity: 0;
    transform: translateY(-5px) scale(0.9);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes sv-multiselect-tag-remove {
  from {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
  to {
    opacity: 0;
    transform: translateY(-5px) scale(0.9);
  }
}

.sv-multiselect--animate {
  .sv-multiselect__dropdown.is-open {
    animation: sv-multiselect-fade-in var(--sv-motion-duration-short) var(--sv-motion-ease-decelerate);
  }
  
  .sv-multiselect__tag {
    animation: sv-multiselect-tag-appear var(--sv-motion-duration-short) var(--sv-motion-ease-standard);
  }
  
  .sv-multiselect__tag.is-removing {
    animation: sv-multiselect-tag-remove var(--sv-motion-duration-short) var(--sv-motion-ease-standard) forwards;
  }
  
  // Respect user preferences
  @media (prefers-reduced-motion: reduce) {
    .sv-multiselect__dropdown.is-open,
    .sv-multiselect__tag,
    .sv-multiselect__tag.is-removing {
      animation: none;
    }
  }
}

/* ==========================================================================
   6. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

// High contrast mode adjustments
@media (forced-colors: active) {
  .sv-multiselect {
    &__field {
      border: 1px solid CanvasText;
      
      &::after {
        border-top-color: CanvasText;
      }
    }
    
    &__dropdown {
      border: 1px solid CanvasText;
    }
    
    &__tag {
      border: 1px solid CanvasText;
      
      &-remove::before,
      &-remove::after {
        background-color: CanvasText;
      }
    }
    
    &__option.is-selected {
      background-color: Highlight;
      color: Canvas;
      
      .sv-checkbox__control {
        background-color: Highlight;
        border-color: Canvas;
      }
    }
    
    &.is-invalid .sv-multiselect__field {
      border: 2px solid Mark;
    }
  }
}

/* ==========================================================================
   7. RESPONSIVE ADJUSTMENTS
   ========================================================================== */

@include responsive.breakpoint-down(sm) {
  .sv-multiselect {
    &__field {
      padding: var(--sv-padding-2);
    }
    
    &__tag {
      max-width: 150px;
      
      &-text {
        max-width: 120px;
      }
    }
    
    &__option {
      padding: var(--sv-padding-3) var(--sv-padding-2);
      min-height: var(--sv-min-touch-target, 44px); // Ensure touch-friendly size
    }
    
    &__label,
    &__helper-text {
      font-size: var(--sv-font-size-sm);
    }
  }
  
  // Make multiselects stack nicely on mobile
  .sv-multiselect + .sv-multiselect {
    margin-top: var(--sv-space-4);
  }
}