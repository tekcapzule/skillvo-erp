/**
 * Radio Button Component Styles
 * Version: 2.0.0
 * Last Updated: July 20, 2024
 * 
 * This file contains styles specific to the radio button component,
 * extending the selection-control-base class.
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. VARIABLES & CONFIGURATION
   2. RADIO BUTTON BASE STYLES
   3. RADIO BUTTON VARIATIONS
   4. RADIO BUTTON STATES
   5. RADIO BUTTON ANIMATIONS
   6. ACCESSIBILITY ENHANCEMENTS
   7. RESPONSIVE ADJUSTMENTS
   ========================================================================== */

@use './../../abstracts' as *;
@use './../../base/core/selection-controls' as selection;
@use './../../base/utils/mixins/state' as state;
@use './../../base/utils/mixins/typography' as typography;
@use './../../base/utils/mixins/accessibility' as a11y;
@use './../../base/utils/mixins/responsive' as responsive;

/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */

// Radio specific variables
$radio-border-radius: var(--sv-radius-full);
$radio-indicator-color: var(--sv-text-on-dark);
$radio-indicator-size: calc(var(--sv-size-4) * 0.5);
$radio-animation-duration: var(--sv-motion-duration-short);
$radio-animation-easing: var(--sv-motion-ease-standard);

/* ==========================================================================
   2. RADIO BUTTON BASE STYLES
   ========================================================================== */

.sv-radio {
  // Extend the base selection control class
  @extend .sv-selection-control-base ;
  
  // Radio-specific control styles
  &__control {
    border-radius: $radio-border-radius;
    
    // Radio-specific indicator (dot)
    &::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: $radio-indicator-size;
      height: $radio-indicator-size;
      border-radius: $radio-border-radius;
      background-color: $radio-indicator-color;
      transform: translate(-50%, -50%) scale(0);
      transition: transform $radio-animation-duration $radio-animation-easing;
    }
  }
  
  // Input handling
  &__input {
    // Checked state styling
    &:checked + .sv-radio__control::after {
      transform: translate(-50%, -50%) scale(1);
    }
  }
  
  // Description text
  &__description {
    display: block;
    margin-top: var(--sv-space-1);
    margin-left: calc(var(--sv-size-4) + var(--sv-space-3));
    font-size: var(--sv-font-size-sm);
    color: var(--sv-text-secondary);
  }
}

/* ==========================================================================
   3. RADIO BUTTON VARIATIONS
   ========================================================================== */

// Card radios - larger clickable area with more content
.sv-radio--card {
  display: flex;
  flex-direction: column;
  width: 100%;
  border: 1px solid var(--sv-border-medium);
  border-radius: var(--sv-radius-md);
  padding: var(--sv-padding-3);
  transition: border-color $radio-animation-duration $radio-animation-easing,
              background-color $radio-animation-duration $radio-animation-easing;
  
  &:hover {
    border-color: var(--sv-border-dark);
    background-color: var(--sv-bg-element-hover);
  }
  
  .sv-radio__control {
    margin-right: var(--sv-space-3);
  }
  
  .sv-radio__label {
    font-weight: var(--sv-font-medium);
  }
  
  &.is-selected,
  .sv-radio__input:checked ~ & {
    border-color: var(--sv-primary);
    background-color: var(--sv-bg-element-active);
  }
  
  // Content container for additional info
  &__content {
    margin-top: var(--sv-space-2);
    margin-left: calc(var(--sv-size-4) + var(--sv-space-3));
    color: var(--sv-text-secondary);
    font-size: var(--sv-text-sm);
  }
}

// Button-style radios
.sv-radio-button-group {
  display: inline-flex;
  border-radius: var(--sv-radius-md);
  border: 1px solid var(--sv-border-medium);
  overflow: hidden;
  
  .sv-radio--button {
    margin: 0;
    position: relative;
    
    &__input {
      position: absolute;
      opacity: 0;
    }
    
    // Hide the standard radio control
    .sv-radio__control {
      display: none;
    }
    
    // Style the label as a button
    &__label {
      margin: 0;
      padding: var(--sv-padding-2) var(--sv-padding-3);
      background-color: var(--sv-bg-surface);
      border-right: 1px solid var(--sv-border-medium);
      transition: all $radio-animation-duration $radio-animation-easing;
      text-align: center;
    }
    
    &:last-child .sv-radio--button__label {
      border-right: none;
    }
    
    // Hover state
    &:hover .sv-radio--button__label {
      background-color: var(--sv-bg-element-hover);
    }
    
    // Selected state
    &__input:checked + .sv-radio--button__label {
      background-color: var(--sv-primary);
      color: var(--sv-text-on-dark);
    }
    
    // Focus state
    &__input:focus-visible + .sv-radio--button__label {
      box-shadow: inset 0 0 0 2px var(--sv-focus-ring-color);
    }
    
    // Disabled state
    &__input:disabled + .sv-radio--button__label {
      opacity: 0.65;
      cursor: not-allowed;
      color: var(--sv-text-tertiary);
      background-color: var(--sv-bg-element);
    }
  }
}

/* ==========================================================================
   4. RADIO BUTTON STATES
   ========================================================================== */

// Custom states beyond what's inherited from selection-control-base
.sv-radio {
  // Read-only state - distinct from disabled
  &.is-readonly {
    cursor: default;
    
    .sv-radio__control {
      background-color: var(--sv-bg-element);
      border-color: var(--sv-border-light);
    }
    
    .sv-radio__label {
      color: var(--sv-text-secondary);
    }
  }
  
  // Required indicator
  &.is-required .sv-radio__label::after {
    content: "*";
    color: var(--sv-error);
    margin-left: var(--sv-space-1);
  }
  
  // Custom invalid/valid states (beyond what's in the base)
  &.is-invalid .sv-radio__description {
    color: var(--sv-error);
  }
  
  &.is-valid .sv-radio__description {
    color: var(--sv-success);
  }
}

/* ==========================================================================
   5. RADIO BUTTON ANIMATIONS
   ========================================================================== */

// Animation for radio when checked
@keyframes sv-radio-pulse {
  0% {
    transform: translate(-50%, -50%) scale(0);
  }
  50% {
    transform: translate(-50%, -50%) scale(1.2);
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
  }
}

// Apply animation class
.sv-radio--animate {
  .sv-radio__input:checked + .sv-radio__control::after {
    animation: sv-radio-pulse $radio-animation-duration $radio-animation-easing;
  }
  
  // Respect user preferences
  @media (prefers-reduced-motion: reduce) {
    .sv-radio__input:checked + .sv-radio__control::after {
      animation: none;
    }
  }
}

/* ==========================================================================
   6. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

// High contrast mode adjustments
@media (forced-colors: active) {
  .sv-radio {
    &__control {
      border: 2px solid CanvasText;
      
      &::after {
        background-color: Canvas;
      }
    }
    
    &__input:checked + .sv-radio__control {
      background-color: Highlight;
      border-color: Highlight;
      
      &::after {
        background-color: Canvas;
      }
    }
    
    &.is-invalid .sv-radio__control {
      border-color: Mark;
    }
  }
  
  .sv-radio--card {
    border: 1px solid CanvasText;
    
    &.is-selected,
    .sv-radio__input:checked ~ & {
      border: 2px solid Highlight;
    }
  }
  
  .sv-radio-button-group {
    border-color: CanvasText;
    
    .sv-radio--button__input:checked + .sv-radio--button__label {
      background-color: Highlight;
      color: Canvas;
    }
  }
}

/* ==========================================================================
   7. RESPONSIVE ADJUSTMENTS
   ========================================================================== */

@include responsive.breakpoint-down(sm) {
  .sv-radio--card {
    padding: var(--sv-padding-2);
    
    .sv-radio__label {
      font-size: var(--sv-text-sm);
    }
    
    &__content {
      font-size: var(--sv-text-xs);
    }
  }
  
  .sv-radio-button-group {
    flex-direction: column;
    
    .sv-radio--button {
      .sv-radio--button__label {
        border-right: none;
        border-bottom: 1px solid var(--sv-border-medium);
        width: 100%;
      }
      
      &:last-child .sv-radio--button__label {
        border-bottom: none;
      }
    }
  }
}