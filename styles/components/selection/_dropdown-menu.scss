/**
 * Dropdown Menu Component Styles
 * Version: 2.0.0
 * Last Updated: July 20, 2024
 * 
 * This file contains styles specific to the dropdown menu component,
 * extending the selection-control-base class. The dropdown menu allows
 * users to select a single option from a list of choices.
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. VARIABLES & CONFIGURATION
   2. DROPDOWN BASE STYLES
   3. DROPDOWN VARIATIONS
   4. DROPDOWN STATES
   5. DROPDOWN ANIMATIONS
   6. ACCESSIBILITY ENHANCEMENTS
   7. RESPONSIVE ADJUSTMENTS
   ========================================================================== */

@use './../../abstracts' as *;
@use './../../base/core/selection-controls' as selection;
@use './../../base/utils/mixins/state' as state;
@use './../../base/utils/mixins/typography' as typography;
@use './../../base/utils/mixins/accessibility' as a11y;
@use './../../base/utils/mixins/responsive' as responsive;

/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */

// Dropdown specific variables
$dropdown-max-height: var(--sv-size-64);
$dropdown-z-index: var(--sv-z-index-dropdown);
$dropdown-item-height: var(--sv-size-10);
$dropdown-transition: all var(--sv-motion-duration-short) var(--sv-motion-ease-standard);
$dropdown-shadow: var(--sv-shadow-lg);
$dropdown-border-radius: var(--sv-radius-md);
$dropdown-border-color: var(--sv-border-medium);
$dropdown-bg-color: var(--sv-bg-surface);

/* ==========================================================================
   2. DROPDOWN BASE STYLES
   ========================================================================== */

.sv-dropdown {
  // Extend the base selection control class
  @extend .sv-selection-control-base;
  position: relative;
  display: block;
  width: 100%;
  
  // The trigger button that opens/closes the dropdown
  &__trigger {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    padding: var(--sv-padding-2) var(--sv-padding-3);
    background-color: $dropdown-bg-color;
    border: 1px solid $dropdown-border-color;
    border-radius: $dropdown-border-radius;
    cursor: pointer;
    transition: $dropdown-transition;
    text-align: left;
    
    // Dropdown arrow icon
    &::after {
      content: '';
      width: 0;
      height: 0;
      border-left: 5px solid transparent;
      border-right: 5px solid transparent;
      border-top: 5px solid var(--sv-text-primary);
      transition: transform var(--sv-motion-duration-short) var(--sv-motion-ease-standard);
      margin-left: var(--sv-space-2);
    }
    
    // Selected value text
    &-text {
      @include typography.text-truncate;
      flex: 1;
    }
    
    // Rotate arrow when open
    &.is-expanded::after,
    &[aria-expanded="true"]::after {
      transform: rotate(180deg);
    }
    
    // Hover state
    &:hover {
      border-color: var(--sv-border-dark);
      background-color: var(--sv-bg-element-hover);
    }
    
    // Focus state
    &:focus-visible {
      @include state.focus-visible-state;
    }
  }
  
  // The dropdown menu container
  &__menu {
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;
    max-height: $dropdown-max-height;
    overflow-y: auto;
    background-color: $dropdown-bg-color;
    border: 1px solid $dropdown-border-color;
    border-radius: $dropdown-border-radius;
    box-shadow: $dropdown-shadow;
    z-index: $dropdown-z-index;
    margin-top: var(--sv-space-1);
    padding: var(--sv-padding-1) 0;
    display: none;
    
    // When the dropdown is open
    &.is-open {
      display: block;
    }
  }
  
  // The dropdown menu items
  &__item {
    display: flex;
    align-items: center;
    padding: var(--sv-padding-2) var(--sv-padding-3);
    min-height: $dropdown-item-height;
    cursor: pointer;
    transition: background-color var(--sv-motion-duration-short) var(--sv-motion-ease-standard);
    
    // Hover state
    &:hover {
      background-color: var(--sv-bg-element-hover);
    }
    
    // Selected state
    &.is-selected {
      background-color: var(--sv-bg-element-active);
      color: var(--sv-text-accent);
      font-weight: var(--sv-font-medium);
      
      // Checkmark icon for selected item
      &::after {
        content: '';
        margin-left: auto;
        width: 12px;
        height: 6px;
        border-left: 2px solid var(--sv-primary);
        border-bottom: 2px solid var(--sv-primary);
        transform: rotate(-45deg);
      }
    }
    
    // Disabled state
    &.is-disabled {
      opacity: 0.65;
      cursor: not-allowed;
      color: var(--sv-text-tertiary);
      pointer-events: none;
    }
  }
  
  // Optional icon in dropdown items
  &__item-icon {
    margin-right: var(--sv-space-2);
    color: var(--sv-text-secondary);
    flex-shrink: 0;
  }
  
  // Group label for grouped items
  &__group-label {
    display: block;
    padding: var(--sv-padding-1) var(--sv-padding-3);
    font-size: var(--sv-font-size-sm);
    color: var(--sv-text-secondary);
    font-weight: var(--sv-font-medium);
    text-transform: uppercase;
    letter-spacing: var(--sv-tracking-wide);
  }
  
  // Divider between dropdown items or groups
  &__divider {
    height: 1px;
    margin: var(--sv-space-1) 0;
    background-color: var(--sv-border-light);
  }
  
  // Label for the dropdown
  &__label {
    display: block;
    margin-bottom: var(--sv-space-1);
    font-weight: var(--sv-font-medium);
  }
  
  // Helper text below the dropdown
  &__helper-text {
    margin-top: var(--sv-space-1);
    font-size: var(--sv-font-size-sm);
    color: var(--sv-text-secondary);
  }
  
  // Native select (for progressive enhancement/fallback)
  &__native-select {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
    margin: 0;
  }
}

/* ==========================================================================
   3. DROPDOWN VARIATIONS
   ========================================================================== */

// Dropdown with a search input
.sv-dropdown--searchable {
  .sv-dropdown__search {
    position: sticky;
    top: 0;
    padding: var(--sv-padding-2);
    background-color: $dropdown-bg-color;
    border-bottom: 1px solid var(--sv-border-light);
    z-index: 1;
    
    &-input {
      width: 100%;
      padding: var(--sv-padding-1) var(--sv-padding-2);
      border: 1px solid $dropdown-border-color;
      border-radius: var(--sv-radius-sm);
      
      &:focus {
        @include state.focus-state;
      }
    }
  }
  
  .sv-dropdown__no-results {
    padding: var(--sv-padding-3);
    text-align: center;
    color: var(--sv-text-secondary);
  }
}

// Multi-level dropdown
.sv-dropdown--multilevel {
  .sv-dropdown__item--with-children {
    position: relative;
    
    &::after {
      content: '';
      width: 0;
      height: 0;
      border-top: 4px solid transparent;
      border-bottom: 4px solid transparent;
      border-left: 4px solid var(--sv-text-primary);
      margin-left: auto;
    }
    
    // Submenu styling
    .sv-dropdown__submenu {
      position: absolute;
      top: 0;
      left: 100%;
      width: 100%;
      background-color: $dropdown-bg-color;
      border: 1px solid $dropdown-border-color;
      border-radius: $dropdown-border-radius;
      box-shadow: $dropdown-shadow;
      display: none;
      z-index: $dropdown-z-index;
      
      &.is-open {
        display: block;
      }
    }
    
    &:hover > .sv-dropdown__submenu,
    &.is-expanded > .sv-dropdown__submenu {
      display: block;
    }
  }
}

// Small dropdown
.sv-dropdown--small {
  .sv-dropdown__trigger {
    padding: var(--sv-padding-1) var(--sv-padding-2);
    font-size: var(--sv-font-size-sm);
  }
  
  .sv-dropdown__item {
    padding: var(--sv-padding-1) var(--sv-padding-2);
    min-height: calc($dropdown-item-height * 0.8);
    font-size: var(--sv-font-size-sm);
  }
  
  .sv-dropdown__group-label {
    padding: var(--sv-padding-1) var(--sv-padding-2);
    font-size: var(--sv-font-size-xs);
  }
}

// Large dropdown
.sv-dropdown--large {
  .sv-dropdown__trigger {
    padding: var(--sv-padding-3) var(--sv-padding-4);
    font-size: var(--sv-font-size-lg);
  }
  
  .sv-dropdown__item {
    padding: var(--sv-padding-3) var(--sv-padding-4);
    min-height: calc($dropdown-item-height * 1.2);
    font-size: var(--sv-font-size-lg);
  }
  
  .sv-dropdown__group-label {
    padding: var(--sv-padding-2) var(--sv-padding-4);
    font-size: var(--sv-font-size-base);
  }
}

/* ==========================================================================
   4. DROPDOWN STATES
   ========================================================================== */

.sv-dropdown {
  // Disabled state
  &.is-disabled {
    .sv-dropdown__trigger {
      opacity: 0.65;
      cursor: not-allowed;
      background-color: var(--sv-bg-element);
      color: var(--sv-text-tertiary);
      pointer-events: none;
    }
    
    .sv-dropdown__helper-text {
      color: var(--sv-text-tertiary);
    }
  }
  
  // Error state
  &.is-invalid {
    .sv-dropdown__trigger {
      border-color: var(--sv-error);
    }
    
    .sv-dropdown__helper-text {
      color: var(--sv-error);
    }
  }
  
  // Valid state
  &.is-valid {
    .sv-dropdown__trigger {
      border-color: var(--sv-success);
    }
    
    .sv-dropdown__helper-text {
      color: var(--sv-success);
    }
  }
  
  // Required indicator
  &.is-required .sv-dropdown__label::after {
    content: "*";
    color: var(--sv-error);
    margin-left: var(--sv-space-1);
  }
}

/* ==========================================================================
   5. DROPDOWN ANIMATIONS
   ========================================================================== */

@keyframes sv-dropdown-fade-in {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes sv-dropdown-fade-out {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-10px);
  }
}

.sv-dropdown--animate {
  .sv-dropdown__menu.is-open {
    animation: sv-dropdown-fade-in var(--sv-motion-duration-short) var(--sv-motion-ease-decelerate);
  }
  
  // Respect user preferences
  @media (prefers-reduced-motion: reduce) {
    .sv-dropdown__menu.is-open {
      animation: none;
    }
  }
}

/* ==========================================================================
   6. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

// High contrast mode adjustments
@media (forced-colors: active) {
  .sv-dropdown {
    &__trigger {
      border: 1px solid CanvasText;
      
      &::after {
        border-top-color: CanvasText;
      }
    }
    
    &__menu {
      border: 1px solid CanvasText;
    }
    
    &__item.is-selected {
      background-color: Highlight;
      color: Canvas;
      
      &::after {
        border-color: Canvas;
      }
    }
    
    &.is-invalid .sv-dropdown__trigger {
      border: 2px solid Mark;
    }
  }
}

/* ==========================================================================
   7. RESPONSIVE ADJUSTMENTS
   ========================================================================== */

@include responsive.breakpoint-down(sm) {
  .sv-dropdown {
    &__trigger {
      padding: var(--sv-padding-2);
    }
    
    &__item {
      padding: var(--sv-padding-3) var(--sv-padding-2);
      min-height: var(--sv-min-touch-target, 44px); // Ensure touch-friendly size
    }
    
    &__label,
    &__helper-text {
      font-size: var(--sv-font-size-sm);
    }
  }
  
  // Make dropdowns stack nicely on mobile
  .sv-dropdown + .sv-dropdown {
    margin-top: var(--sv-space-4);
  }
  
  // For multilevel dropdowns on mobile
  .sv-dropdown--multilevel {
    .sv-dropdown__item--with-children {
      .sv-dropdown__submenu {
        position: static;
        margin-left: var(--sv-space-4);
        width: auto;
        border: none;
        box-shadow: none;
        max-height: 0;
        overflow: hidden;
        transition: max-height var(--sv-motion-duration-standard) var(--sv-motion-ease-standard);
        
        &.is-open {
          max-height: 500px;
        }
      }
    }
  }
}