/**
 * Toggle Switch Component Styles
 * Version: 2.0.0
 * Last Updated: July 20, 2024
 * 
 * This file contains styles specific to the toggle switch component,
 * extending the selection-control-base class.
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. VARIABLES & CONFIGURATION
   2. TOGGLE SWITCH BASE STYLES
   3. TOGGLE SWITCH VARIATIONS
   4. TOGGLE SWITCH STATES
   5. TOGGLE SWITCH ANIMATIONS
   6. ACCESSIBILITY ENHANCEMENTS
   7. RESPONSIVE ADJUSTMENTS
   ========================================================================== */

@use './../../abstracts' as *;
@use './../../base/core/selection-controls' as selection;
@use './../../base/utils/mixins/state' as state;
@use './../../base/utils/mixins/typography' as typography;
@use './../../base/utils/mixins/accessibility' as a11y;
@use './../../base/utils/mixins/responsive' as responsive;

/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */

// Toggle switch specific variables
$toggle-width: calc(var(--sv-size-4) * 1.75);
$toggle-height: var(--sv-size-4);
$toggle-thumb-size: calc(var(--sv-size-4) * 0.8);
$toggle-thumb-offset: calc((var(--sv-size-4) - $toggle-thumb-size) / 2);
$toggle-transition: all var(--sv-motion-duration-short) var(--sv-motion-ease-standard);
$toggle-thumb-color: var(--sv-text-on-dark);
$toggle-track-color-off: var(--sv-border-medium);
$toggle-track-color-on: var(--sv-primary);

/* ==========================================================================
   2. TOGGLE SWITCH BASE STYLES
   ========================================================================== */

.sv-toggle {
  // Extend the base selection control class
  @extend .sv-selection-control-base;
  display: inline-flex;
  align-items: center;
  
  // Input handling
  &__input {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
    margin: 0;
    
    &:focus-visible ~ .sv-toggle__control {
      box-shadow: 0 0 0 2px var(--sv-focus-ring-color);
    }
    
    &:checked ~ .sv-toggle__control {
      background-color: $toggle-track-color-on;
      
      &::after {
        transform: translateX(calc($toggle-width - $toggle-thumb-size - ($toggle-thumb-offset * 2)));
      }
    }
    
    &:disabled ~ .sv-toggle__control {
      opacity: 0.65;
      background-color: var(--sv-bg-element);
      cursor: not-allowed;
    }
    
    &:disabled ~ .sv-toggle__label {
      color: var(--sv-text-tertiary);
      cursor: not-allowed;
    }
  }
  
  // The switch track
  &__control {
    position: relative;
    display: inline-block;
    width: $toggle-width;
    height: $toggle-height;
    border-radius: var(--sv-radius-full);
    background-color: $toggle-track-color-off;
    transition: $toggle-transition;
    cursor: pointer;
    
    // The switch thumb/handle
    &::after {
      content: "";
      position: absolute;
      top: $toggle-thumb-offset;
      left: $toggle-thumb-offset;
      width: $toggle-thumb-size;
      height: $toggle-thumb-size;
      border-radius: var(--sv-radius-full);
      background-color: $toggle-thumb-color;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      transition: $toggle-transition;
    }
  }
  
  // Label styling
  &__label {
    margin-left: var(--sv-space-3);
    cursor: pointer;
    user-select: none;
  }
  
  // Description/helper text
  &__description {
    display: block;
    margin-top: var(--sv-space-1);
    margin-left: calc($toggle-width + var(--sv-space-3));
    font-size: var(--sv-font-size-sm);
    color: var(--sv-text-secondary);
  }
  
  // Icon slots (optional) for on/off indicators
  &__icon-on,
  &__icon-off {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: calc($toggle-height * 0.6);
    height: calc($toggle-height * 0.6);
    display: flex;
    align-items: center;
    justify-content: center;
    pointer-events: none;
    color: var(--sv-text-on-dark);
    transition: opacity var(--sv-motion-duration-short) ease;
  }
  
  &__icon-on {
    left: $toggle-thumb-offset;
    opacity: 0;
  }
  
  &__icon-off {
    right: $toggle-thumb-offset;
    opacity: 1;
  }
  
  // Show/hide icons based on toggle state
  &__input:checked ~ .sv-toggle__control {
    .sv-toggle__icon-on {
      opacity: 1;
    }
    
    .sv-toggle__icon-off {
      opacity: 0;
    }
  }
}

/* ==========================================================================
   3. TOGGLE SWITCH VARIATIONS
   ========================================================================== */

// Small toggle
.sv-toggle--small {
  $sm-toggle-width: calc(var(--sv-size-3) * 1.75);
  $sm-toggle-height: var(--sv-size-3);
  $sm-toggle-thumb-size: calc(var(--sv-size-3) * 0.8);
  $sm-toggle-thumb-offset: calc((var(--sv-size-3) - $sm-toggle-thumb-size) / 2);
  
  .sv-toggle__control {
    width: $sm-toggle-width;
    height: $sm-toggle-height;
    
    &::after {
      top: $sm-toggle-thumb-offset;
      left: $sm-toggle-thumb-offset;
      width: $sm-toggle-thumb-size;
      height: $sm-toggle-thumb-size;
    }
  }
  
  .sv-toggle__input:checked ~ .sv-toggle__control::after {
    transform: translateX(calc($sm-toggle-width - $sm-toggle-thumb-size - ($sm-toggle-thumb-offset * 2)));
  }
  
  .sv-toggle__label {
    font-size: var(--sv-font-size-sm);
  }
  
  .sv-toggle__description {
    font-size: var(--sv-font-size-xs);
    margin-left: calc($sm-toggle-width + var(--sv-space-3));
  }
  
  .sv-toggle__icon-on,
  .sv-toggle__icon-off {
    width: calc($sm-toggle-height * 0.6);
    height: calc($sm-toggle-height * 0.6);
  }
}

// Large toggle
.sv-toggle--large {
  $lg-toggle-width: calc(var(--sv-size-5) * 1.75);
  $lg-toggle-height: var(--sv-size-5);
  $lg-toggle-thumb-size: calc(var(--sv-size-5) * 0.8);
  $lg-toggle-thumb-offset: calc((var(--sv-size-5) - $lg-toggle-thumb-size) / 2);
  
  .sv-toggle__control {
    width: $lg-toggle-width;
    height: $lg-toggle-height;
    
    &::after {
      top: $lg-toggle-thumb-offset;
      left: $lg-toggle-thumb-offset;
      width: $lg-toggle-thumb-size;
      height: $lg-toggle-thumb-size;
    }
  }
  
  .sv-toggle__input:checked ~ .sv-toggle__control::after {
    transform: translateX(calc($lg-toggle-width - $lg-toggle-thumb-size - ($lg-toggle-thumb-offset * 2)));
  }
  
  .sv-toggle__label {
    font-size: var(--sv-font-size-lg);
  }
  
  .sv-toggle__description {
    font-size: var(--sv-font-size-base);
    margin-left: calc($lg-toggle-width + var(--sv-space-3));
  }
  
  .sv-toggle__icon-on,
  .sv-toggle__icon-off {
    width: calc($lg-toggle-height * 0.6);
    height: calc($lg-toggle-height * 0.6);
  }
}

// Square toggle
.sv-toggle--square {
  .sv-toggle__control {
    border-radius: var(--sv-radius-md);
    
    &::after {
      border-radius: var(--sv-radius-sm);
    }
  }
}

// Toggle with icons for yes/no, on/off
.sv-toggle--with-icons {
  .sv-toggle__control {
    padding: 0 $toggle-thumb-offset;
  }
}

/* ==========================================================================
   4. TOGGLE SWITCH STATES
   ========================================================================== */

.sv-toggle {
  // Read-only state - distinct from disabled
  &.is-readonly {
    cursor: default;
    
    .sv-toggle__control {
      opacity: 0.65;
      background-color: var(--sv-bg-element);
      pointer-events: none;
    }
    
    .sv-toggle__label {
      color: var(--sv-text-secondary);
    }
  }
  
  // Required indicator
  &.is-required .sv-toggle__label::after {
    content: "*";
    color: var(--sv-error);
    margin-left: var(--sv-space-1);
  }
  
  // Invalid state
  &.is-invalid {
    .sv-toggle__control {
      box-shadow: 0 0 0 1px var(--sv-error);
    }
    
    .sv-toggle__description {
      color: var(--sv-error);
    }
  }
  
  // Valid state
  &.is-valid {
    .sv-toggle__description {
      color: var(--sv-success);
    }
  }
}

/* ==========================================================================
   5. TOGGLE SWITCH ANIMATIONS
   ========================================================================== */

@keyframes sv-toggle-slide {
  0% {
    transform: translateX($toggle-thumb-offset);
  }
  50% {
    transform: translateX(calc(($toggle-width - $toggle-thumb-size) / 2));
  }
  100% {
    transform: translateX(calc($toggle-width - $toggle-thumb-size - $toggle-thumb-offset));
  }
}

.sv-toggle--animate {
  .sv-toggle__input:checked ~ .sv-toggle__control::after {
    animation: sv-toggle-slide var(--sv-motion-duration-standard) var(--sv-motion-ease-standard);
  }
  
  // Respect user preferences
  @media (prefers-reduced-motion: reduce) {
    .sv-toggle__input:checked ~ .sv-toggle__control::after {
      animation: none;
    }
  }
}

/* ==========================================================================
   6. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

// High contrast mode adjustments
@media (forced-colors: active) {
  .sv-toggle {
    &__control {
      border: 1px solid CanvasText;
      
      &::after {
        background-color: CanvasText;
        border: 1px solid Canvas;
      }
    }
    
    &__input:checked ~ .sv-toggle__control {
      background-color: Highlight;
      
      &::after {
        background-color: Canvas;
        border-color: Highlight;
      }
    }
    
    &.is-invalid .sv-toggle__control {
      border: 2px solid Mark;
    }
  }
}

/* ==========================================================================
   7. RESPONSIVE ADJUSTMENTS
   ========================================================================== */

@include responsive.breakpoint-down(sm) {
  .sv-toggle {
    &__control {
      // Slightly larger touch target on mobile
      height: calc($toggle-height * 1.1);
      width: calc($toggle-width * 1.1);
    }
    
    &__label {
      font-size: var(--sv-font-size-sm);
    }
    
    &__description {
      font-size: var(--sv-font-size-xs);
    }
  }
  
  // Stack toggles vertically with proper spacing
  .sv-toggle + .sv-toggle {
    margin-top: var(--sv-space-4);
  }
}