/**
 * Checkbox Component Styles
 * Version: 2.0.0
 * Last Updated: July 20, 2024
 * 
 * This file contains styles specific to the checkbox component,
 * extending the selection-control-base class.
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. VARIABLES & CONFIGURATION
   2. CHECKBOX BASE STYLES
   3. CHECKBOX VARIATIONS
   4. CHECKBOX STATES
   5. CHECKBOX ANIMATIONS
   6. ACCESSIBILITY ENHANCEMENTS
   7. RESPONSIVE ADJUSTMENTS
   ========================================================================== */

@use './../../abstracts' as *;
@use './../../base/core/selection-controls' as selection;
@use './../../base/utils/mixins/state' as state;
@use './../../base/utils/mixins/typography' as typography;
@use './../../base/utils/mixins/accessibility' as a11y;
@use './../../base/utils/mixins/responsive' as responsive;

/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */

// Checkbox specific variables
$checkbox-border-radius: var(--sv-radius-sm);
$checkbox-indicator-color: var(--sv-text-on-dark);
$checkbox-animation-duration: var(--sv-motion-duration-short);
$checkbox-animation-easing: var(--sv-motion-ease-standard);
$checkbox-indeterminate-height: 2px;
$checkbox-indeterminate-width: 50%;

/* ==========================================================================
   2. CHECKBOX BASE STYLES
   ========================================================================== */

.sv-checkbox {
  // Extend the base selection control class
  @extend .sv-selection-control-base !optional;
  
  // Checkbox-specific control styles
  &__control {
    border-radius: $checkbox-border-radius;
    
    // Checkbox-specific indicator (checkmark)
    &::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 40%;
      height: 20%;
      border-left: 2px solid $checkbox-indicator-color;
      border-bottom: 2px solid $checkbox-indicator-color;
      transform: translate(-50%, -70%) rotate(-45deg) scale(0);
      transition: transform $checkbox-animation-duration $checkbox-animation-easing;
    }
  }
  
  // Input handling
  &__input {
    // Indeterminate state styling
    &:indeterminate + .sv-checkbox__control::after {
      transform: translate(-50%, -50%) scale(1);
      width: $checkbox-indeterminate-width;
      height: $checkbox-indeterminate-height;
      border: none;
      background-color: $checkbox-indicator-color;
    }
    
    // Checked state styling
    &:checked + .sv-checkbox__control::after {
      transform: translate(-50%, -70%) rotate(-45deg) scale(1);
      transition: transform $checkbox-animation-duration $checkbox-animation-easing;
    }
  }
  
  // Description text
  &__description {
    display: block;
    margin-top: var(--sv-space-1);
    margin-left: calc(var(--sv-size-4) + var(--sv-space-3));
    font-size: var(--sv-font-size-sm);
    color: var(--sv-text-secondary);
  }
}

/* ==========================================================================
   3. CHECKBOX VARIATIONS
   ========================================================================== */

// Tile checkbox - a larger checkbox with more padding and optional description
.sv-checkbox--tile {
  display: flex;
  flex-direction: column;
  width: 100%;
  border: 1px solid var(--sv-border-medium);
  border-radius: var(--sv-radius-md);
  padding: var(--sv-padding-3);
  transition: border-color $checkbox-animation-duration $checkbox-animation-easing,
              background-color $checkbox-animation-duration $checkbox-animation-easing;
  
  &:hover {
    border-color: var(--sv-border-dark);
    background-color: var(--sv-bg-element-hover);
  }
  
  .sv-checkbox__control {
    margin-right: var(--sv-space-3);
  }
  
  .sv-checkbox__label {
    font-weight: var(--sv-font-medium);
  }
  
  &.is-selected,
  .sv-checkbox__input:checked ~ & {
    border-color: var(--sv-primary);
    background-color: var(--sv-bg-element-active);
  }
}

// Image checkbox - checkbox with an image
.sv-checkbox--image {
  position: relative;
  
  &__img-container {
    position: relative;
    margin-bottom: var(--sv-space-2);
    border-radius: var(--sv-radius-md);
    overflow: hidden;
    
    img {
      display: block;
      width: 100%;
      transition: opacity $checkbox-animation-duration $checkbox-animation-easing;
    }
  }
  
  .sv-checkbox__control {
    position: absolute;
    top: var(--sv-space-2);
    right: var(--sv-space-2);
    background-color: var(--sv-bg-surface);
    border-color: var(--sv-border-medium);
  }
  
  .sv-checkbox__input:checked ~ .sv-checkbox--image__img-container {
    box-shadow: 0 0 0 2px var(--sv-primary);
  }
  
  &:hover .sv-checkbox--image__img-container img {
    opacity: 0.9;
  }
}

/* ==========================================================================
   4. CHECKBOX STATES
   ========================================================================== */

// Custom states beyond what's inherited from selection-control-base
.sv-checkbox {
  // Read-only state - distinct from disabled
  &.is-readonly {
    cursor: default;
    
    .sv-checkbox__control {
      background-color: var(--sv-bg-element);
      border-color: var(--sv-border-light);
    }
    
    .sv-checkbox__label {
      color: var(--sv-text-secondary);
    }
  }
  
  // Required indicator
  &.is-required .sv-checkbox__label::after {
    content: "*";
    color: var(--sv-error);
    margin-left: var(--sv-space-1);
  }
  
  // Custom invalid/valid states (beyond what's in the base)
  &.is-invalid .sv-checkbox__description {
    color: var(--sv-error);
  }
  
  &.is-valid .sv-checkbox__description {
    color: var(--sv-success);
  }
}

/* ==========================================================================
   5. CHECKBOX ANIMATIONS
   ========================================================================== */

// Animation for checkbox when checked
@keyframes sv-checkbox-check {
  0% {
    transform: translate(-50%, -70%) rotate(-45deg) scale(0);
  }
  50% {
    transform: translate(-50%, -70%) rotate(-45deg) scale(1.2);
  }
  100% {
    transform: translate(-50%, -70%) rotate(-45deg) scale(1);
  }
}

// Apply animation class
.sv-checkbox--animate {
  .sv-checkbox__input:checked + .sv-checkbox__control::after {
    animation: sv-checkbox-check $checkbox-animation-duration $checkbox-animation-easing;
  }
  
  // Respect user preferences
  @media (prefers-reduced-motion: reduce) {
    .sv-checkbox__input:checked + .sv-checkbox__control::after {
      animation: none;
    }
  }
}

/* ==========================================================================
   6. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

// High contrast mode adjustments
@media (forced-colors: active) {
  .sv-checkbox {
    &__control {
      border: 2px solid CanvasText;
      
      &::after {
        border-color: Canvas;
      }
    }
    
    &__input:checked + .sv-checkbox__control {
      background-color: Highlight;
      border-color: Highlight;
      
      &::after {
        border-color: Canvas;
      }
    }
    
    &.is-invalid .sv-checkbox__control {
      border-color: Mark;
    }
  }
  
  .sv-checkbox--tile {
    border: 1px solid CanvasText;
    
    &.is-selected,
    .sv-checkbox__input:checked ~ & {
      border: 2px solid Highlight;
    }
  }
  
  .sv-checkbox--image {
    .sv-checkbox__input:checked ~ .sv-checkbox--image__img-container {
      outline: 2px solid Highlight;
      outline-offset: 2px;
    }
  }
}

/* ==========================================================================
   7. RESPONSIVE ADJUSTMENTS
   ========================================================================== */

@include responsive.breakpoint-down(sm) {
  .sv-checkbox--tile {
    padding: var(--sv-padding-2);
    
    .sv-checkbox__label {
      font-size: var(--sv-text-sm);
    }
  }
  
  .sv-checkbox--image {
    .sv-checkbox__control {
      top: var(--sv-space-1);
      right: var(--sv-space-1);
    }
  }
}