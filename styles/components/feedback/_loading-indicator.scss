/**
 * Loading Indicator Component - Specific Styles
 * Version: 2.0.0
 * Last Updated: July 3, 2024
 * 
 * This file establishes the specific styles for the loading indicator component
 * in the SkillVo design system. This serves as the third level in our 
 * three-tier styling architecture:
 * 1. sv-ui-control-base - Base styles for all interactive controls
 * 2. sv-feedback-control-base - Base styles for feedback controls
 * 3. sv-loading (this file) - Component-specific styles for loading indicators
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. IMPORTS
   2. VARIABLES & CONFIGURATION
   3. LOADING INDICATOR BASE
   4. LOADING INDICATOR TYPES
      4.1 Spinner
      4.2 Linear Progress
      4.3 Skeleton Loader
      4.4 Pulse Loader
   5. LOADING INDICATOR SIZES
   6. LOADING INDICATOR VARIANTS
   7. LOADING OVERLAY
   8. RESPONSIVE ADAPTATIONS
   9. ACCESSIBILITY CONSIDERATIONS
   ========================================================================== */

/* ==========================================================================
   1. IMPORTS
   ========================================================================== */
@use './../../abstracts/variables/' as *;
@use './../../base/utils/mixins/state' as state;
@use './../../base/utils/mixins/layout' as layout;
@use './../../base/utils/mixins/typography' as typography;
@use './../../base/utils/mixins/responsive' as responsive;
@use './../../base/utils/mixins/accessibility' as a11y;

/* ==========================================================================
   2. VARIABLES & CONFIGURATION
   ========================================================================== */

// Loading indicator specific dimensions
$spinner-size-xs: 16px;
$spinner-size-sm: 24px;
$spinner-size-md: 36px;
$spinner-size-lg: 48px;
$spinner-size-xl: 64px;

$spinner-border-width-xs: 2px;
$spinner-border-width-sm: 2px;
$spinner-border-width-md: 3px;
$spinner-border-width-lg: 4px;
$spinner-border-width-xl: 5px;

$progress-height-xs: 2px;
$progress-height-sm: 4px;
$progress-height-md: 6px;
$progress-height-lg: 8px;
$progress-height-xl: 10px;

// Loading indicator specific animations
$spinner-animation-duration: 0.8s;
$progress-animation-duration: 2s;
$pulse-animation-duration: 1.5s;
$skeleton-animation-duration: 1.8s;

// Loading indicator z-index
$loader-overlay-z-index: var(--sv-z-index-overlay);

/* ==========================================================================
   3. LOADING INDICATOR BASE
   ========================================================================== */

.sv-loading {
  // Extend the feedback control base to inherit all shared properties
  @extend .sv-feedback-control-base;
  
  // Reset padding and borders from feedback-base
  padding: 0;
  border: none;
  background: transparent;
  box-shadow: none;
  
  // Default positioning
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  
  // Default accessibility attributes
  &[aria-busy="true"] {
    pointer-events: none;
  }
  
  // BEM pattern for loading indicator elements
  &__label {
    font-size: var(--sv-font-size-sm);
    font-weight: var(--sv-font-weight-normal);
    line-height: var(--sv-line-height-normal);
    color: var(--sv-text-secondary);
    margin-left: var(--sv-space-3);
    user-select: none;
  }
}

/* ==========================================================================
   4. LOADING INDICATOR TYPES
   ========================================================================== */

/* 4.1 Spinner
   ========================================================================== */

.sv-loading {
  &__spinner {
    border-radius: 50%;
    border-style: solid;
    border-color: var(--sv-border-medium);
    border-top-color: var(--sv-primary);
    animation: sv-spinner-rotate $spinner-animation-duration linear infinite;
    
    // Default size - medium
    width: $spinner-size-md;
    height: $spinner-size-md;
    border-width: $spinner-border-width-md;
  }
  
  // Size variations for spinner
  &--spinner-xs &__spinner {
    width: $spinner-size-xs;
    height: $spinner-size-xs;
    border-width: $spinner-border-width-xs;
  }
  
  &--spinner-sm &__spinner {
    width: $spinner-size-sm;
    height: $spinner-size-sm;
    border-width: $spinner-border-width-sm;
  }
  
  &--spinner-lg &__spinner {
    width: $spinner-size-lg;
    height: $spinner-size-lg;
    border-width: $spinner-border-width-lg;
  }
  
  &--spinner-xl &__spinner {
    width: $spinner-size-xl;
    height: $spinner-size-xl;
    border-width: $spinner-border-width-xl;
  }
}

// Spinner keyframes
@keyframes sv-spinner-rotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* 4.2 Linear Progress
   ========================================================================== */

.sv-loading {
  &__progress {
    width: 100%;
    background-color: var(--sv-bg-element);
    overflow: hidden;
    position: relative;
    border-radius: var(--sv-radius-full);
    
    // Default size - medium
    height: $progress-height-md;
  }
  
  &__progress-bar {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-color: var(--sv-primary);
    transform-origin: left center;
  }
  
  &__progress-value {
    position: absolute;
    right: var(--sv-space-2);
    top: 50%;
    transform: translateY(-50%);
    font-size: var(--sv-font-size-xs);
    font-weight: var(--sv-font-weight-medium);
    line-height: var(--sv-line-height-normal);
    color: var(--sv-text-secondary);
    user-select: none;
  }
  
  // Size variations for progress
  &--progress-xs &__progress {
    height: $progress-height-xs;
  }
  
  &--progress-sm &__progress {
    height: $progress-height-sm;
  }
  
  &--progress-lg &__progress {
    height: $progress-height-lg;
  }
  
  &--progress-xl &__progress {
    height: $progress-height-xl;
  }
  
  // Indeterminate animation
  &--indeterminate &__progress-bar {
    width: 30%;
    animation: sv-progress-indeterminate $progress-animation-duration ease-in-out infinite;
  }
}

// Progress keyframes
@keyframes sv-progress-indeterminate {
  0% { 
    left: -30%;
    transform: scaleX(0.5);
  }
  50% { 
    left: 100%;
    transform: scaleX(1);
  }
  100% { 
    left: 100%;
    transform: scaleX(0.5);
  }
}

/* 4.3 Skeleton Loader
   ========================================================================== */

.sv-loading {
  &__skeleton {
    display: block;
    background: linear-gradient(
      90deg,
      var(--sv-bg-element) 0%,
      var(--sv-bg-element-hover) 50%,
      var(--sv-bg-element) 100%
    );
    background-size: 200% 100%;
    border-radius: var(--sv-radius-md);
    animation: sv-skeleton-wave $skeleton-animation-duration ease-in-out infinite;
    height: 16px;
    width: 100%;
  }
  
  // Skeleton variants
  &--skeleton-text &__skeleton {
    height: 16px;
    margin-bottom: var(--sv-space-2);
    
    &:last-child {
      width: 70%;
    }
  }
  
  &--skeleton-circle &__skeleton {
    border-radius: 50%;
    height: $spinner-size-md;
    width: $spinner-size-md;
  }
  
  &--skeleton-avatar &__skeleton {
    border-radius: 50%;
    height: 40px;
    width: 40px;
  }
  
  &--skeleton-card &__skeleton {
    height: 120px;
    border-radius: var(--sv-radius-lg);
  }
  
  &--skeleton-button &__skeleton {
    height: 36px;
    width: 120px;
    border-radius: var(--sv-radius-md);
  }
}

// Skeleton animation
@keyframes sv-skeleton-wave {
  0% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* 4.4 Pulse Loader
   ========================================================================== */

.sv-loading {
  &__pulse {
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
  
  &__pulse-dot {
    display: inline-block;
    width: 8px;
    height: 8px;
    margin: 0 4px;
    border-radius: 50%;
    background-color: var(--sv-primary);
    animation: sv-pulse-animation $pulse-animation-duration infinite ease-in-out;
    
    &:nth-child(2) {
      animation-delay: 0.2s;
    }
    
    &:nth-child(3) {
      animation-delay: 0.4s;
    }
  }
}

@keyframes sv-pulse-animation {
  0%, 80%, 100% {
    transform: scale(0.6);
    opacity: 0.6;
  }
  40% {
    transform: scale(1);
    opacity: 1;
  }
}

/* ==========================================================================
   5. LOADING INDICATOR SIZES
   ========================================================================== */

// Size variations are defined within each type's section

/* ==========================================================================
   6. LOADING INDICATOR VARIANTS
   ========================================================================== */

.sv-loading {
  // Primary color variant (default)
  &--primary {
    .sv-loading__spinner {
      border-top-color: var(--sv-primary);
    }
    
    .sv-loading__progress-bar {
      background-color: var(--sv-primary);
    }
    
    .sv-loading__pulse-dot {
      background-color: var(--sv-primary);
    }
  }
  
  // Secondary color variant
  &--secondary {
    .sv-loading__spinner {
      border-top-color: var(--sv-secondary);
    }
    
    .sv-loading__progress-bar {
      background-color: var(--sv-secondary);
    }
    
    .sv-loading__pulse-dot {
      background-color: var(--sv-secondary);
    }
  }
  
  // Success color variant
  &--success {
    .sv-loading__spinner {
      border-top-color: var(--sv-success);
    }
    
    .sv-loading__progress-bar {
      background-color: var(--sv-success);
    }
    
    .sv-loading__pulse-dot {
      background-color: var(--sv-success);
    }
  }
  
  // Warning color variant
  &--warning {
    .sv-loading__spinner {
      border-top-color: var(--sv-warning);
    }
    
    .sv-loading__progress-bar {
      background-color: var(--sv-warning);
    }
    
    .sv-loading__pulse-dot {
      background-color: var(--sv-warning);
    }
  }
  
  // Error color variant
  &--error {
    .sv-loading__spinner {
      border-top-color: var(--sv-error);
    }
    
    .sv-loading__progress-bar {
      background-color: var(--sv-error);
    }
    
    .sv-loading__pulse-dot {
      background-color: var(--sv-error);
    }
  }
  
  // Light variant for dark backgrounds
  &--light {
    .sv-loading__spinner {
      border-color: rgba(255, 255, 255, 0.2);
      border-top-color: rgba(255, 255, 255, 0.9);
    }
    
    .sv-loading__progress {
      background-color: rgba(255, 255, 255, 0.2);
    }
    
    .sv-loading__progress-bar {
      background-color: rgba(255, 255, 255, 0.9);
    }
    
    .sv-loading__pulse-dot {
      background-color: rgba(255, 255, 255, 0.9);
    }
    
    .sv-loading__label {
      color: rgba(255, 255, 255, 0.9);
    }
  }
}

/* ==========================================================================
   7. LOADING OVERLAY
   ========================================================================== */

.sv-loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(255, 255, 255, 0.7);
  z-index: $loader-overlay-z-index;
  
  // Variants
  &--fixed {
    position: fixed;
  }
  
  &--dark {
    background-color: rgba(0, 0, 0, 0.4);
    
    .sv-loading__label {
      color: rgba(255, 255, 255, 0.9);
    }
  }
  
  &--blur {
    backdrop-filter: blur(3px);
  }
  
  // Animation
  &.is-entering {
    animation: sv-overlay-fade-in 0.2s ease-out;
  }
  
  &.is-exiting {
    animation: sv-overlay-fade-out 0.2s ease-in;
  }
}

@keyframes sv-overlay-fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes sv-overlay-fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/* ==========================================================================
   8. RESPONSIVE ADAPTATIONS
   ========================================================================== */

@include responsive.media-breakpoint-down(sm) {
  .sv-loading-overlay {
    &--mobile-fullscreen {
      position: fixed;
      z-index: calc(#{$loader-overlay-z-index} + 10);
    }
  }
}

/* ==========================================================================
   9. ACCESSIBILITY CONSIDERATIONS
   ========================================================================== */

.sv-loading {
  // Screen reader only text
  &__sr-text {
    @include a11y.visually-hidden;
  }
  
  // Ensure loading indicators convey their state to assistive technologies
  &[aria-busy="true"] {
    // Add any additional styles needed for active loading state
  }
}