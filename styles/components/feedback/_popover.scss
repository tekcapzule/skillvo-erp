/**
 * Popover Component - Specific Styles
 * Version: 2.0.0
 * Last Updated: July 3, 2024
 * 
 * This file establishes the specific styles for the popover component
 * in the SkillVo design system. This serves as the third level in our 
 * three-tier styling architecture:
 * 1. sv-ui-control-base - Base styles for all interactive controls
 * 2. sv-feedback-control-base - Base styles for feedback controls
 * 3. sv-popover (this file) - Component-specific styles for popovers
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. IMPORTS
   2. VARIABLES & CONFIGURATION
   3. POPOVER BASE
   4. POPOVER PARTS (HEADER, BODY, FOOTER)
   5. POPOVER POSITIONS & ARROW PLACEMENT
   6. POPOVER ANIMATIONS
   7. POPOVER VARIANTS
   8. RESPONSIVE ADAPTATIONS
   ========================================================================== */

/* ==========================================================================
   1. IMPORTS
   ========================================================================== */
@use './../../abstracts/variables/' as *;
@use './../../base/utils/mixins/state' as state;
@use './../../base/utils/mixins/layout' as layout;
@use './../../base/utils/mixins/typography' as typography;
@use './../../base/utils/mixins/responsive' as responsive;
@use './../../base/utils/mixins/accessibility' as a11y;

/* ==========================================================================
   2. VARIABLES & CONFIGURATION
   ========================================================================== */

// Popover-specific dimensions
$popover-min-width: 200px;
$popover-max-width: 350px;
$popover-border-width: 1px;
$popover-border-radius: var(--sv-radius-md);
$popover-arrow-size: 8px;

// Popover-specific spacing
$popover-padding-x: var(--sv-space-4);
$popover-padding-y: var(--sv-space-3);
$popover-header-padding-y: var(--sv-space-2);
$popover-footer-padding-y: var(--sv-space-2);
$popover-offset: 10px;

// Popover-specific animation
$popover-animation-duration: var(--sv-motion-duration-medium);
$popover-transition-timing: var(--sv-motion-ease-standard);

// Popover z-index
$popover-z-index: var(--sv-z-index-popover);

/* ==========================================================================
   3. POPOVER BASE
   ========================================================================== */

.sv-popover {
  // Extend the feedback control base to inherit all shared properties
  @extend .sv-feedback-control-base;
  
  // Popover-specific layout and spacing
  min-width: $popover-min-width;
  max-width: $popover-max-width;
  padding: 0; // Padding managed by child elements
  
  // Structural styles
  position: absolute;
  z-index: $popover-z-index;
  display: none;
  border-width: $popover-border-width;
  border-style: solid;
  border-radius: $popover-border-radius;
  box-sizing: border-box;
  
  // Visual styling
  background-color: var(--sv-bg-surface);
  border-color: var(--sv-border-medium);
  box-shadow: var(--sv-shadow-md);
  
  // Focus handling
  &:focus {
    outline: none;
  }
  
  &:focus-visible {
    @include state.focus-visible-state;
  }
  
  // Transitions
  transition: opacity $popover-animation-duration $popover-transition-timing,
              transform $popover-animation-duration $popover-transition-timing;
}

/* ==========================================================================
   4. POPOVER PARTS (HEADER, BODY, FOOTER)
   ========================================================================== */

.sv-popover {
  // Popover header
  &__header {
    padding: $popover-header-padding-y $popover-padding-x;
    border-bottom: $popover-border-width solid var(--sv-border-light);
    font-size: var(--sv-font-size-base);
    font-weight: var(--sv-font-weight-semibold);
    line-height: var(--sv-line-height-normal);
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  // Popover title
  &__title {
    margin: 0;
    flex: 1;
  }
  
  // Close button
  &__close {
    background: transparent;
    border: none;
    padding: 0;
    margin: 0;
    cursor: pointer;
    width: var(--sv-icon-size-sm);
    height: var(--sv-icon-size-sm);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    color: var(--sv-text-secondary);
    transition: color var(--sv-motion-duration-short) $popover-transition-timing;
    
    &:hover {
      color: var(--sv-text-primary);
    }
    
    &:focus-visible {
      @include state.focus-visible-state;
    }
  }
  
  // Popover body
  &__body {
    padding: $popover-padding-y $popover-padding-x;
    font-size: var(--sv-font-size-sm);
    font-weight: var(--sv-font-weight-normal);
    line-height: var(--sv-line-height-normal);
  }
  
  // Popover footer
  &__footer {
    padding: $popover-footer-padding-y $popover-padding-x;
    border-top: $popover-border-width solid var(--sv-border-light);
    display: flex;
    justify-content: flex-end;
    gap: var(--sv-space-2);
  }
  
  // Arrow for the popover
  &__arrow {
    position: absolute;
    width: 0;
    height: 0;
    
    &::before,
    &::after {
      content: "";
      position: absolute;
      display: block;
      width: 0;
      height: 0;
      border-style: solid;
    }
    
    // Outer arrow (border color)
    &::before {
      border-width: $popover-arrow-size + $popover-border-width;
    }
    
    // Inner arrow (background color)
    &::after {
      border-width: $popover-arrow-size;
    }
  }
}

/* ==========================================================================
   5. POPOVER POSITIONS & ARROW PLACEMENT
   ========================================================================== */

.sv-popover {
  // Top position (popover above the trigger)
  &--position-top {
    margin-bottom: $popover-offset;
    
    .sv-popover__arrow {
      bottom: -($popover-arrow-size * 2);
      left: 50%;
      transform: translateX(-50%);
      
      &::before {
        bottom: -$popover-border-width;
        border-color: var(--sv-border-medium) transparent transparent transparent;
      }
      
      &::after {
        border-color: var(--sv-bg-surface) transparent transparent transparent;
      }
    }
    
    // Arrow position modifiers
    &.sv-popover--arrow-start .sv-popover__arrow {
      left: 15%;
    }
    
    &.sv-popover--arrow-end .sv-popover__arrow {
      left: auto;
      right: 15%;
      transform: translateX(50%);
    }
  }
  
  // Right position (popover to the right of the trigger)
  &--position-right {
    margin-left: $popover-offset;
    
    .sv-popover__arrow {
      left: -($popover-arrow-size * 2);
      top: 50%;
      transform: translateY(-50%);
      
      &::before {
        left: -$popover-border-width;
        border-color: transparent var(--sv-border-medium) transparent transparent;
      }
      
      &::after {
        border-color: transparent var(--sv-bg-surface) transparent transparent;
      }
    }
    
    // Arrow position modifiers
    &.sv-popover--arrow-start .sv-popover__arrow {
      top: 15%;
    }
    
    &.sv-popover--arrow-end .sv-popover__arrow {
      top: auto;
      bottom: 15%;
      transform: translateY(50%);
    }
  }
  
  // Bottom position (popover below the trigger)
  &--position-bottom {
    margin-top: $popover-offset;
    
    .sv-popover__arrow {
      top: -($popover-arrow-size * 2);
      left: 50%;
      transform: translateX(-50%);
      
      &::before {
        top: -$popover-border-width;
        border-color: transparent transparent var(--sv-border-medium) transparent;
      }
      
      &::after {
        border-color: transparent transparent var(--sv-bg-surface) transparent;
      }
    }
    
    // Arrow position modifiers
    &.sv-popover--arrow-start .sv-popover__arrow {
      left: 15%;
    }
    
    &.sv-popover--arrow-end .sv-popover__arrow {
      left: auto;
      right: 15%;
      transform: translateX(50%);
    }
  }
  
  // Left position (popover to the left of the trigger)
  &--position-left {
    margin-right: $popover-offset;
    
    .sv-popover__arrow {
      right: -($popover-arrow-size * 2);
      top: 50%;
      transform: translateY(-50%);
      
      &::before {
        right: -$popover-border-width;
        border-color: transparent transparent transparent var(--sv-border-medium);
      }
      
      &::after {
        border-color: transparent transparent transparent var(--sv-bg-surface);
      }
    }
    
    // Arrow position modifiers
    &.sv-popover--arrow-start .sv-popover__arrow {
      top: 15%;
    }
    
    &.sv-popover--arrow-end .sv-popover__arrow {
      top: auto;
      bottom: 15%;
      transform: translateY(50%);
    }
  }
  
  // No arrow variant
  &--no-arrow {
    .sv-popover__arrow {
      display: none;
    }
  }
}

/* ==========================================================================
   6. POPOVER ANIMATIONS
   ========================================================================== */

@keyframes sv-popover-fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes sv-popover-fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes sv-popover-scale-in {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes sv-popover-scale-out {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.9);
  }
}

.sv-popover {
  // Entry and exit animations
  &.is-entering {
    animation: sv-popover-scale-in $popover-animation-duration $popover-transition-timing;
    display: block;
    transform-origin: center;
    
    &.sv-popover--position-top {
      transform-origin: bottom center;
    }
    
    &.sv-popover--position-right {
      transform-origin: left center;
    }
    
    &.sv-popover--position-bottom {
      transform-origin: top center;
    }
    
    &.sv-popover--position-left {
      transform-origin: right center;
    }
  }
  
  &.is-exiting {
    animation: sv-popover-scale-out $popover-animation-duration $popover-transition-timing;
    display: block;
    transform-origin: center;
    
    &.sv-popover--position-top {
      transform-origin: bottom center;
    }
    
    &.sv-popover--position-right {
      transform-origin: left center;
    }
    
    &.sv-popover--position-bottom {
      transform-origin: top center;
    }
    
    &.sv-popover--position-left {
      transform-origin: right center;
    }
  }
  
  // Visibility state
  &.is-visible {
    display: block;
  }
}

/* ==========================================================================
   7. POPOVER VARIANTS
   ========================================================================== */

.sv-popover {
  // Info variant
  &--info {
    border-color: var(--sv-info);
    
    .sv-popover__header {
      background-color: rgba(var(--sv-info-rgb), 0.1);
      color: var(--sv-info);
      border-bottom-color: var(--sv-info);
    }
    
    .sv-popover__arrow::before {
      border-color: var(--sv-info);
    }
  }
  
  // Success variant
  &--success {
    border-color: var(--sv-success);
    
    .sv-popover__header {
      background-color: rgba(var(--sv-success-rgb), 0.1);
      color: var(--sv-success);
      border-bottom-color: var(--sv-success);
    }
    
    .sv-popover__arrow::before {
      border-color: var(--sv-success);
    }
  }
  
  // Warning variant
  &--warning {
    border-color: var(--sv-warning);
    
    .sv-popover__header {
      background-color: rgba(var(--sv-warning-rgb), 0.1);
      color: var(--sv-warning);
      border-bottom-color: var(--sv-warning);
    }
    
    .sv-popover__arrow::before {
      border-color: var(--sv-warning);
    }
  }
  
  // Error variant
  &--error {
    border-color: var(--sv-error);
    
    .sv-popover__header {
      background-color: rgba(var(--sv-error-rgb), 0.1);
      color: var(--sv-error);
      border-bottom-color: var(--sv-error);
    }
    
    .sv-popover__arrow::before {
      border-color: var(--sv-error);
    }
  }
  
  // Borderless variant
  &--borderless {
    border: none;
    box-shadow: var(--sv-shadow-lg);
    
    .sv-popover__header {
      border-bottom: none;
    }
    
    .sv-popover__footer {
      border-top: none;
    }
    
    .sv-popover__arrow::before {
      display: none;
    }
  }
  
  // Simple variant (content only, no header or footer)
  &--simple {
    .sv-popover__header,
    .sv-popover__footer {
      display: none;
    }
    
    .sv-popover__body {
      padding: $popover-padding-y $popover-padding-x;
    }
  }
}

/* ==========================================================================
   8. RESPONSIVE ADAPTATIONS
   ========================================================================== */

@include responsive.media-breakpoint-down(sm) {
  .sv-popover {
    max-width: calc(100vw - var(--sv-space-4) * 2);
    
    &__body {
      max-height: 60vh;
      overflow-y: auto;
    }
    
    &__footer {
      flex-direction: column;
      
      .sv-button {
        width: 100%;
        margin-bottom: var(--sv-space-2);
        
        &:last-child {
          margin-bottom: 0;
        }
      }
    }
  }
}