/**
 * Toast Component - Specific Styles
 * Version: 2.0.0
 * Last Updated: July 3, 2024
 * 
 * This file establishes the specific styles for the toast component
 * in the SkillVo design system. This serves as the third level in our 
 * three-tier styling architecture:
 * 1. sv-ui-control-base - Base styles for all interactive controls
 * 2. sv-feedback-control-base - Base styles for feedback controls
 * 3. sv-toast (this file) - Component-specific styles for toasts
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. IMPORTS
   2. VARIABLES & CONFIGURATION
   3. TOAST BASE
   4. TOAST VARIANTS
   5. TOAST POSITIONS
   6. TOAST ANIMATIONS
   7. TOAST CONTAINER
   8. RESPONSIVE ADAPTATIONS
   ========================================================================== */

/* ==========================================================================
   1. IMPORTS
   ========================================================================== */
@use './../../abstracts/variables/' as *;
@use './../../base/utils/mixins/state' as state;
@use './../../base/utils/mixins/layout' as layout;
@use './../../base/utils/mixins/typography' as typography;
@use './../../base/utils/mixins/responsive' as responsive;

/* ==========================================================================
   2. VARIABLES & CONFIGURATION
   ========================================================================== */

// Toast-specific dimensions
$toast-min-width: 300px;
$toast-max-width: 600px;
$toast-icon-size: var(--sv-icon-size-md);
$toast-border-width: 1px;
$toast-border-radius: var(--sv-radius-md);

// Toast-specific spacing
$toast-padding-x: var(--sv-space-4);
$toast-padding-y: var(--sv-space-3);
$toast-spacing: var(--sv-space-3);

// Toast-specific animation
$toast-animation-duration: var(--sv-motion-duration-medium);
$toast-transition-timing: var(--sv-motion-ease-standard);

// Toast z-index (should be higher than most components)
$toast-z-index: var(--sv-z-index-tooltip);

/* ==========================================================================
   3. TOAST BASE
   ========================================================================== */

.sv-toast {
  // Extend the feedback control base to inherit all shared properties
  @extend .sv-feedback-control-base;
  
  // Toast-specific layout and spacing
  padding: $toast-padding-y $toast-padding-x;
  min-width: $toast-min-width;
  max-width: $toast-max-width;
  width: auto;
  margin-bottom: $toast-spacing;
  
  // Structural styles
  position: fixed;
  z-index: $toast-z-index;
  border-width: $toast-border-width;
  border-style: solid;
  border-radius: $toast-border-radius;
  
  // Shadow for better visibility
  box-shadow: var(--sv-shadow-md);
  
  // Basic layout
  display: flex;
  align-items: center;
  pointer-events: auto;
  
  // Default position (bottom-right)
  bottom: var(--sv-space-4);
  right: var(--sv-space-4);
  
  // Transitions
  transition: opacity $toast-animation-duration $toast-transition-timing,
              transform $toast-animation-duration $toast-transition-timing;
  
  // BEM pattern for toast elements
  &__icon {
    flex-shrink: 0;
    margin-right: var(--sv-space-3);
    width: $toast-icon-size;
    height: $toast-icon-size;
  }
  
  &__content {
    flex: 1;
    min-width: 0; // Ensures text truncation works
  }
  
  &__title {
    font-size: var(--sv-font-size-base);
    font-weight: var(--sv-font-weight-semibold);
    line-height: var(--sv-line-height-normal);
    margin: 0 0 var(--sv-space-1) 0;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  
  &__message {
    font-size: var(--sv-font-size-sm);
    font-weight: var(--sv-font-weight-normal);
    line-height: var(--sv-line-height-normal);
    margin: 0;
    color: var(--sv-text-secondary);
  }
  
  &__close {
    flex-shrink: 0;
    margin-left: var(--sv-space-3);
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    width: var(--sv-icon-size-sm);
    height: var(--sv-icon-size-sm);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    color: var(--sv-text-secondary);
    transition: color $toast-animation-duration $toast-transition-timing;
    
    &:hover {
      color: var(--sv-text-primary);
    }
    
    &:focus-visible {
      @include state.focus-visible-state;
    }
  }
  
  &__progress {
    position: absolute;
    bottom: 0;
    left: 0;
    height: 3px;
    background-color: rgba(255, 255, 255, 0.3);
    transition: width linear;
  }
}

/* ==========================================================================
   4. TOAST VARIANTS
   ========================================================================== */

.sv-toast {
  // Info variant (default)
  &--info {
    background-color: var(--sv-info-light);
    border-color: var(--sv-info-light);
    
    .sv-toast__icon {
      color: var(--sv-info);
    }
    
    .sv-toast__progress {
      background-color: var(--sv-info);
    }
  }
  
  // Success variant
  &--success {
    background-color: var(--sv-success-light);
    border-color: var(--sv-success-light);
    
    .sv-toast__icon {
      color: var(--sv-success);
    }
    
    .sv-toast__progress {
      background-color: var(--sv-success);
    }
  }
  
  // Warning variant
  &--warning {
    background-color: var(--sv-warning-light);
    border-color: var(--sv-warning-light);
    
    .sv-toast__icon {
      color: var(--sv-warning);
    }
    
    .sv-toast__progress {
      background-color: var(--sv-warning);
    }
  }
  
  // Error variant
  &--error {
    background-color: var(--sv-error-light);
    border-color: var(--sv-error-light);
    
    .sv-toast__icon {
      color: var(--sv-error);
    }
    
    .sv-toast__progress {
      background-color: var(--sv-error);
    }
  }
  
  // Filled toast style
  &--filled {
    &.sv-toast--info {
      background-color: var(--sv-info);
      color: var(--sv-text-on-dark);
      border-color: var(--sv-info);
      
      .sv-toast__icon,
      .sv-toast__close,
      .sv-toast__message {
        color: var(--sv-text-on-dark);
      }
    }
    
    &.sv-toast--success {
      background-color: var(--sv-success);
      color: var(--sv-text-on-dark);
      border-color: var(--sv-success);
      
      .sv-toast__icon,
      .sv-toast__close,
      .sv-toast__message {
        color: var(--sv-text-on-dark);
      }
    }
    
    &.sv-toast--warning {
      background-color: var(--sv-warning);
      color: var(--sv-text-on-dark);
      border-color: var(--sv-warning);
      
      .sv-toast__icon,
      .sv-toast__close,
      .sv-toast__message {
        color: var(--sv-text-on-dark);
      }
    }
    
    &.sv-toast--error {
      background-color: var(--sv-error);
      color: var(--sv-text-on-dark);
      border-color: var(--sv-error);
      
      .sv-toast__icon,
      .sv-toast__close,
      .sv-toast__message {
        color: var(--sv-text-on-dark);
      }
    }
  }
}

/* ==========================================================================
   5. TOAST POSITIONS
   ========================================================================== */

.sv-toast {
  // Default position is bottom-right (set in base)
  
  // Top position
  &--position-top {
    top: var(--sv-space-4);
    bottom: auto;
    left: 50%;
    right: auto;
    transform: translateX(-50%);
  }
  
  // Top-left position
  &--position-top-left {
    top: var(--sv-space-4);
    bottom: auto;
    left: var(--sv-space-4);
    right: auto;
  }
  
  // Top-right position
  &--position-top-right {
    top: var(--sv-space-4);
    bottom: auto;
    right: var(--sv-space-4);
    left: auto;
  }
  
  // Bottom position
  &--position-bottom {
    bottom: var(--sv-space-4);
    top: auto;
    left: 50%;
    right: auto;
    transform: translateX(-50%);
  }
  
  // Bottom-left position
  &--position-bottom-left {
    bottom: var(--sv-space-4);
    top: auto;
    left: var(--sv-space-4);
    right: auto;
  }
  
  // Bottom-right position is the default
}

/* ==========================================================================
   6. TOAST ANIMATIONS
   ========================================================================== */

// Entry animations
@keyframes sv-toast-slide-in-down {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes sv-toast-slide-in-up {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

// Exit animations
@keyframes sv-toast-slide-out-up {
  from {
    transform: translateY(0);
    opacity: 1;
  }
  to {
    transform: translateY(-100%);
    opacity: 0;
  }
}

@keyframes sv-toast-slide-out-down {
  from {
    transform: translateY(0);
    opacity: 1;
  }
  to {
    transform: translateY(100%);
    opacity: 0;
  }
}

.sv-toast {
  // Entry animations based on position
  &.is-entering {
    &.sv-toast--position-top,
    &.sv-toast--position-top-left,
    &.sv-toast--position-top-right {
      animation: sv-toast-slide-in-down $toast-animation-duration $toast-transition-timing;
    }
    
    &.sv-toast--position-bottom,
    &.sv-toast--position-bottom-left,
    &.sv-toast--position-bottom-right {
      animation: sv-toast-slide-in-up $toast-animation-duration $toast-transition-timing;
    }
  }
  
  // Exit animations based on position
  &.is-exiting {
    &.sv-toast--position-top,
    &.sv-toast--position-top-left,
    &.sv-toast--position-top-right {
      animation: sv-toast-slide-out-up $toast-animation-duration $toast-transition-timing;
    }
    
    &.sv-toast--position-bottom,
    &.sv-toast--position-bottom-left,
    &.sv-toast--position-bottom-right {
      animation: sv-toast-slide-out-down $toast-animation-duration $toast-transition-timing;
    }
  }
}

/* ==========================================================================
   7. TOAST CONTAINER
   ========================================================================== */

.sv-toast-container {
  position: fixed;
  z-index: $toast-z-index;
  display: flex;
  flex-direction: column;
  pointer-events: none;
  
  // Default position (bottom right)
  bottom: 0;
  right: 0;
  
  // Container positions follow toast positions
  &--top {
    top: 0;
    bottom: auto;
    left: 50%;
    right: auto;
    transform: translateX(-50%);
  }
  
  &--top-left {
    top: 0;
    bottom: auto;
    left: 0;
    right: auto;
  }
  
  &--top-right {
    top: 0;
    bottom: auto;
    right: 0;
    left: auto;
  }
  
  &--bottom {
    bottom: 0;
    top: auto;
    left: 50%;
    right: auto;
    transform: translateX(-50%);
  }
  
  &--bottom-left {
    bottom: 0;
    top: auto;
    left: 0;
    right: auto;
  }
  
  &--bottom-right {
    // Default
  }
}

/* ==========================================================================
   8. RESPONSIVE ADAPTATIONS
   ========================================================================== */

@include responsive.media-breakpoint-down(sm) {
  .sv-toast {
    min-width: auto;
    max-width: 90vw;
    left: var(--sv-space-2);
    right: var(--sv-space-2);
    
    &--position-top,
    &--position-bottom {
      left: var(--sv-space-2);
      right: var(--sv-space-2);
      transform: none;
    }
    
    &__content {
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }
  
  .sv-toast-container {
    width: 100%;
    
    &--top,
    &--bottom {
      left: 0;
      right: 0;
      transform: none;
    }
  }
}