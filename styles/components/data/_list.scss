/**
 * Data List Component
 * Version: 1.1.0
 * Last Updated: June 30, 2024
 * 
 * This file provides styles for the data list component in the SkillVo design system.
 * It extends the sv-data-display-control-base class and adds list-specific styling.
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. VARIABLES & CONFIGURATION
   2. BASE LIST STYLES
   3. LIST ITEM STYLES
   4. LIST ITEM VARIATIONS
   5. LIST ITEM STATES & INTERACTIONS
   6. LIST VARIANTS
   7. UTILITY CLASSES
   8. NESTED LISTS
   9. RESPONSIVE BEHAVIOR
   ========================================================================== */

/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */
@use './../../abstracts/' as *;
@use './../../base/' as *;

// List-specific variables
$list-border-width: 1px;
$list-border-color: var(--sv-border-light);
$list-item-border-color: var(--sv-border-light);
$list-item-bg: var(--sv-bg-surface);
$list-item-hover-bg: var(--sv-bg-element-hover);
$list-item-active-bg: var(--sv-bg-element-active);
$list-item-selected-bg: var(--sv-bg-element-active);

// Spacing variables
$list-item-padding-x: var(--sv-padding-4);
$list-item-padding-y: var(--sv-padding-3);
$list-item-compact-padding-x: var(--sv-padding-3);
$list-item-compact-padding-y: var(--sv-padding-2);
$list-item-comfortable-padding-x: var(--sv-padding-5);
$list-item-comfortable-padding-y: var(--sv-padding-4);

// Typography variables
$list-item-font-size: var(--sv-text-base);
$list-title-font-size: var(--sv-text-lg);
$list-subtitle-font-size: var(--sv-text-base);
$list-caption-font-size: var(--sv-text-sm);

// Icon variables
$list-icon-size-sm: var(--sv-icon-size-sm);
$list-icon-size-md: var(--sv-icon-size-md);
$list-icon-size-lg: var(--sv-icon-size-lg);
$list-icon-margin: var(--sv-space-3);

// Animation variables
$list-transition-duration: var(--sv-motion-duration-medium);
$list-transition-timing: var(--sv-motion-ease-standard);

/* ==========================================================================
   2. BASE LIST STYLES
   ========================================================================== */

.sv-list {
  // Extend base data display class
  @extend .sv-data-display-control-base;
  
  // Reset list styles
  list-style: none;
  margin: 0;
  padding: 0;
  
  // Default styling
  width: 100%;
  border: $list-border-width solid $list-border-color;
  border-radius: var(--sv-radius-md);
  overflow: hidden;
  
  // Prevent text selection unless explicitly enabled
  &:not(.sv-list--selectable-text) {
    user-select: none;
  }
  
  // Default font size
  font-size: $list-item-font-size;
  
  // For scrollable lists
  &--scrollable {
    max-height: 400px; // Default max height, can be overridden
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    
    // Scrollbar styling
    &::-webkit-scrollbar {
      width: 8px;
    }
    
    &::-webkit-scrollbar-track {
      background-color: var(--sv-bg-element);
      border-radius: 4px;
    }
    
    &::-webkit-scrollbar-thumb {
      background-color: var(--sv-border-dark);
      border-radius: 4px;
      
      &:hover {
        background-color: var(--sv-text-tertiary);
      }
    }
  }
  
  // List header
  &__header {
    padding: $list-item-padding-y $list-item-padding-x;
    background-color: var(--sv-bg-secondary);
    font-weight: var(--sv-font-semibold);
    border-bottom: $list-border-width solid $list-border-color;
  }
  
  // List footer
  &__footer {
    padding: $list-item-padding-y $list-item-padding-x;
    background-color: var(--sv-bg-secondary);
    color: var(--sv-text-secondary);
    font-size: var(--sv-text-sm);
    border-top: $list-border-width solid $list-border-color;
  }
}

/* ==========================================================================
   3. LIST ITEM STYLES
   ========================================================================== */

.sv-list-item {
  position: relative;
  display: flex;
  align-items: center;
  padding: $list-item-padding-y $list-item-padding-x;
  background-color: $list-item-bg;
  border-bottom: $list-border-width solid $list-item-border-color;
  transition: 
    background-color $list-transition-duration $list-transition-timing,
    border-color $list-transition-duration $list-transition-timing,
    box-shadow $list-transition-duration $list-transition-timing;
  
  // Remove border from last item
  &:last-child {
    border-bottom: none;
  }
  
  // List item content wrapper
  &__content {
    flex: 1;
    min-width: 0; // Needed for text truncation to work
  }
  
  // Main item content
  &__primary {
    display: block;
    font-size: $list-item-font-size;
    color: var(--sv-text-primary);
    margin-bottom: var(--sv-space-1);
    
    // If there's only a primary text, remove the margin
    &:only-child {
      margin-bottom: 0;
    }
  }
  
  // Secondary item content
  &__secondary {
    display: block;
    font-size: $list-caption-font-size;
    color: var(--sv-text-secondary);
  }
  
  // Icon in list item
  &__icon {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: $list-icon-margin;
    flex-shrink: 0;
    color: var(--sv-text-secondary);
    
    // Icon size variations
    &--sm {
      width: $list-icon-size-sm;
      height: $list-icon-size-sm;
    }
    
    &--md {
      width: $list-icon-size-md;
      height: $list-icon-size-md;
    }
    
    &--lg {
      width: $list-icon-size-lg;
      height: $list-icon-size-lg;
    }
  }
  
  // Actions container (e.g., buttons, menu)
  &__actions {
    display: flex;
    align-items: center;
    margin-left: var(--sv-space-2);
    flex-shrink: 0;
    gap: var(--sv-space-2);
  }
  
  // Avatar in list item
  &__avatar {
    margin-right: $list-icon-margin;
    flex-shrink: 0;
    
    // Avatar size variations
    &--sm {
      width: var(--sv-avatar-sm);
      height: var(--sv-avatar-sm);
    }
    
    &--md {
      width: var(--sv-avatar-md);
      height: var(--sv-avatar-md);
    }
    
    &--lg {
      width: var(--sv-avatar-lg);
      height: var(--sv-avatar-lg);
    }
  }
  
  // For status indicator
  &__status {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    flex-shrink: 0;
    margin-right: var(--sv-space-3);
    
    &--success {
      background-color: var(--sv-success);
    }
    
    &--warning {
      background-color: var(--sv-warning);
    }
    
    &--error {
      background-color: var(--sv-error);
    }
    
    &--info {
      background-color: var(--sv-info);
    }
  }
  
  // For checkboxes in selectable lists
  &__checkbox {
    margin-right: var(--sv-space-3);
    flex-shrink: 0;
  }
  
  // For metadata (small text that appears at the end)
  &__meta {
    font-size: var(--sv-text-xs);
    color: var(--sv-text-tertiary);
    margin-left: var(--sv-space-2);
    flex-shrink: 0;
  }
}

/* ==========================================================================
   4. LIST ITEM VARIATIONS
   ========================================================================== */

// Density variations
.sv-list-item {
  &--compact {
    padding: $list-item-compact-padding-y $list-item-compact-padding-x;
  }
  
  &--comfortable {
    padding: $list-item-comfortable-padding-y $list-item-comfortable-padding-x;
  }
}

// Layout variations
.sv-list-item {
  // Two-line list item with primary and secondary text
  &--two-line {
    min-height: 64px;
  }
  
  // Three-line list item
  &--three-line {
    min-height: 88px;
    
    .sv-list-item__content {
      padding: var(--sv-space-1) 0;
    }
    
    .sv-list-item__secondary {
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
  }
  
  // List item with divider
  &--divider {
    border-bottom: $list-border-width solid $list-item-border-color;
  }
  
  // List item that's a header/separator
  &--header {
    padding: calc($list-item-padding-y / 2) $list-item-padding-x;
    background-color: var(--sv-bg-secondary);
    color: var(--sv-text-secondary);
    font-size: var(--sv-text-sm);
    font-weight: var(--sv-font-semibold);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
}

// List variations
.sv-list {
  // Dense list with smaller padding
  &--dense {
    .sv-list-item {
      padding: $list-item-compact-padding-y $list-item-compact-padding-x;
      
      &__primary {
        font-size: var(--sv-text-sm);
      }
      
      &__secondary {
        font-size: var(--sv-text-xs);
      }
    }
  }
  
  // Bordered list with visible borders between items
  &--bordered {
    .sv-list-item {
      border-bottom: $list-border-width solid $list-item-border-color;
      
      &:last-child {
        border-bottom: none;
      }
    }
  }
  
  // List with zebra striping
  &--striped {
    .sv-list-item:nth-child(even) {
      background-color: var(--sv-bg-element);
    }
  }
  
  // List for navigation
  &--nav {
    .sv-list-item {
      cursor: pointer;
      
      &:hover {
        background-color: $list-item-hover-bg;
      }
      
      &.is-active {
        background-color: $list-item-active-bg;
        font-weight: var(--sv-font-semibold);
      }
    }
  }
  
  // List for selection (checkboxes, radio buttons)
  &--selectable {
    .sv-list-item {
      cursor: pointer;
      
      &:hover {
        background-color: $list-item-hover-bg;
      }
      
      &.is-selected {
        background-color: $list-item-selected-bg;
      }
    }
  }
  
  // List with dividers between all items
  &--divided {
    .sv-list-item {
      border-bottom: $list-border-width solid $list-item-border-color;
      
      &:last-child {
        border-bottom: none;
      }
    }
  }
}

/* ==========================================================================
   5. LIST ITEM STATES & INTERACTIONS
   ========================================================================== */

.sv-list-item {
  // Hover state
  &:hover {
    &.is-interactive {
      background-color: $list-item-hover-bg;
    }
  }
  
  // Active/pressed state
  &:active,
  &.is-active {
    &.is-interactive {
      background-color: $list-item-active-bg;
    }
  }
  
  // Selected state
  &.is-selected {
    background-color: $list-item-selected-bg;
    
    &::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      width: 4px;
      background-color: var(--sv-primary);
    }
  }
  
  // Disabled state
  &.is-disabled {
    opacity: 0.5;
    pointer-events: none;
    
    .sv-list-item__primary,
    .sv-list-item__secondary {
      color: var(--sv-text-disabled);
    }
  }
  
  // Interactive item (clickable)
  &.is-interactive {
    cursor: pointer;
  }
  
  // Item with right chevron for navigation
  &.is-navigable {
    padding-right: calc($list-item-padding-x + 20px);
    
    &::after {
      content: '';
      position: absolute;
      right: $list-item-padding-x;
      width: 8px;
      height: 8px;
      border-top: 2px solid var(--sv-border-medium);
      border-right: 2px solid var(--sv-border-medium);
      transform: rotate(45deg);
    }
  }
  
  // Focused state for keyboard navigation
  &:focus-visible {
    outline: none;
    box-shadow: var(--sv-focus-ring);
    position: relative;
    z-index: 1;
  }
}

/* ==========================================================================
   6. LIST VARIANTS
   ========================================================================== */

// Simple list (flat, no borders)
.sv-list--simple {
  border: none;
  background-color: transparent;
  
  .sv-list-item {
    background-color: transparent;
    border: none;
    padding: calc($list-item-padding-y / 2) 0;
  }
}

// Card-style list (with shadow)
.sv-list--card {
  border: none;
  box-shadow: var(--sv-shadow-md);
  
  .sv-list__header {
    background-color: var(--sv-primary);
    color: var(--sv-text-on-primary);
    border: none;
  }
}

// Inline list (horizontal)
.sv-list--inline {
  display: flex;
  flex-wrap: wrap;
  
  .sv-list-item {
    border: none;
    border-right: $list-border-width solid $list-border-color;
    
    &:last-child {
      border-right: none;
    }
  }
}

// Contextual list variants
.sv-list {
  &--primary {
    border-color: var(--sv-primary);
    
    .sv-list__header {
      background-color: var(--sv-primary);
      color: var(--sv-text-on-primary);
    }
  }
  
  &--secondary {
    border-color: var(--sv-secondary);
    
    .sv-list__header {
      background-color: var(--sv-secondary);
      color: var(--sv-text-on-secondary);
    }
  }
  
  &--success {
    border-color: var(--sv-success);
    
    .sv-list__header {
      background-color: var(--sv-success);
      color: var(--sv-text-on-success);
    }
  }
  
  &--warning {
    border-color: var(--sv-warning);
    
    .sv-list__header {
      background-color: var(--sv-warning);
      color: var(--sv-text-on-warning);
    }
  }
  
  &--error {
    border-color: var(--sv-error);
    
    .sv-list__header {
      background-color: var(--sv-error);
      color: var(--sv-text-on-error);
    }
  }
}

/* ==========================================================================
   7. UTILITY CLASSES
   ========================================================================== */

// Text utilities
.sv-list-item {
  &__text-truncate {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
  }
  
  &__text-wrap {
    white-space: normal;
    word-break: break-word;
  }
}

// Empty list state
.sv-list--empty {
  padding: var(--sv-padding-5);
  text-align: center;
  color: var(--sv-text-secondary);
  
  .sv-list__empty-icon {
    margin-bottom: var(--sv-space-3);
    opacity: 0.5;
  }
  
  .sv-list__empty-message {
    font-size: $list-caption-font-size;
  }
}

// Loading state
.sv-list--loading {
  position: relative;
  min-height: 100px;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(255, 255, 255, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
  }
}

// Badge utilities
.sv-list-item__badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-width: 20px;
  height: 20px;
  border-radius: var(--sv-radius-full);
  background-color: var(--sv-bg-element);
  color: var(--sv-text-secondary);
  font-size: var(--sv-text-xs);
  padding: 0 var(--sv-space-1);
  margin-left: var(--sv-space-2);
  font-weight: var(--sv-font-semibold);
  flex-shrink: 0;
  
  &--primary {
    background-color: var(--sv-primary);
    color: var(--sv-text-on-primary);
  }
  
  &--success {
    background-color: var(--sv-success);
    color: var(--sv-text-on-success);
  }
  
  &--warning {
    background-color: var(--sv-warning);
    color: var(--sv-text-on-warning);
  }
  
  &--error {
    background-color: var(--sv-error);
    color: var(--sv-text-on-error);
  }
}

/* ==========================================================================
   8. NESTED LISTS
   ========================================================================== */

// For hierarchical data display
.sv-list-item__children {
  width: 100%;
  margin-top: var(--sv-space-2);
  padding-left: calc($list-icon-margin + 20px); // Indentation for nested items
  
  .sv-list-item {
    border-left: 1px dashed var(--sv-border-light);
    
    &:last-child {
      border-bottom: none;
    }
  }
}

// Collapsible nested list
.sv-list-item {
  &.is-expandable {
    display: flex;
    flex-wrap: wrap;
    
    &::before {
      content: '';
      display: inline-block;
      width: 8px;
      height: 8px;
      margin-right: var(--sv-space-2);
      border-bottom: 2px solid var(--sv-border-medium);
      border-right: 2px solid var(--sv-border-medium);
      transform: rotate(-45deg);
      transition: transform 0.2s ease;
    }
    
    &.is-expanded::before {
      transform: rotate(45deg);
    }
    
    &.is-expanded .sv-list-item__children {
      display: block;
    }
  }
  
  &__children {
    display: none;
  }
}

/* ==========================================================================
   9. RESPONSIVE BEHAVIOR
   ========================================================================== */

@media (max-width: 767px) {
  .sv-list-item {
    flex-direction: column;
    align-items: flex-start;
    
    &__actions {
      margin-left: 0;
      margin-top: var(--sv-space-2);
      width: 100%;
      justify-content: flex-end;
    }
    
    &__icon,
    &__avatar {
      margin-bottom: var(--sv-space-2);
      margin-right: 0;
      align-self: center;
    }
    
    &__meta {
      margin-left: 0;
      margin-top: var(--sv-space-1);
      width: 100%;
      text-align: right;
    }
    
    // Exception for simple list items - keep horizontal
    &.sv-list-item--simple {
      flex-direction: row;
      align-items: center;
      
      .sv-list-item__icon,
      .sv-list-item__avatar {
        margin-bottom: 0;
        margin-right: $list-icon-margin;
      }
    }
  }
  
  // Adjust inline lists on mobile
  .sv-list--inline {
    flex-direction: column;
    
    .sv-list-item {
      border-right: none;
      border-bottom: $list-border-width solid $list-border-color;
      
      &:last-child {
        border-bottom: none;
      }
    }
  }
}

// Only apply complex layout if screen is large enough
@media (min-width: 768px) {
  .sv-list-item {
    &--complex {
      display: grid;
      grid-template-columns: auto 1fr auto;
      grid-gap: var(--sv-space-3);
      align-items: center;
      
      .sv-list-item__icon,
      .sv-list-item__avatar,
      .sv-list-item__checkbox {
        grid-column: 1;
        margin-right: 0;
      }
      
      .sv-list-item__content {
        grid-column: 2;
      }
      
      .sv-list-item__actions,
      .sv-list-item__meta {
        grid-column: 3;
        margin-left: 0;
      }
    }
  }
}