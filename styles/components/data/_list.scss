/**
 * Data List Component
 * Version: 1.0.0
 * Last Updated: April 29, 2025
 * 
 * This file provides styles for the data list component in the SkillVo design system.
 * It extends the sv-data-display-base class and adds list-specific styling.
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. VARIABLES & CONFIGURATION
   2. BASE LIST STYLES
   3. LIST ITEM STYLES
   4. LIST ITEM VARIATIONS
   5. LIST ITEM STATES & INTERACTIONS
   6. LIST VARIANTS
   7. UTILITY CLASSES
   8. NESTED LISTS
   9. RESPONSIVE BEHAVIOR
   ========================================================================== */

/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */
@use './abstracts' as *;
@use './base' as *;
// List-specific variables
$list-border-width: 1px;
$list-border-color: var(--sv-border-light);
$list-item-border-color: var(--sv-border-light);
$list-item-bg: var(--sv-bg-surface);
$list-item-hover-bg: var(--sv-bg-element-hover);
$list-item-active-bg: var(--sv-bg-element-active);
$list-item-selected-bg: var(--sv-bg-element-active);

// Spacing variables
$list-item-padding-x: var(--sv-padding-4);
$list-item-padding-y: var(--sv-padding-3);
$list-item-compact-padding-x: var(--sv-padding-3);
$list-item-compact-padding-y: var(--sv-padding-2);
$list-item-comfortable-padding-x: var(--sv-padding-5);
$list-item-comfortable-padding-y: var(--sv-padding-4);

// Typography variables
$list-item-font-size: var(--sv-text-base);
$list-title-font-size: var(--sv-text-lg);
$list-subtitle-font-size: var(--sv-text-base);
$list-caption-font-size: var(--sv-text-sm);

// Icon variables
$list-icon-size-sm: var(--sv-icon-size-sm);
$list-icon-size-md: var(--sv-icon-size-md);
$list-icon-size-lg: var(--sv-icon-size-lg);
$list-icon-margin: var(--sv-space-3);

// Animation variables
$list-transition-duration: var(--sv-motion-duration-medium);
$list-transition-timing: var(--sv-motion-ease-standard);

/* ==========================================================================
   2. BASE LIST STYLES
   ========================================================================== */

.sv-list {
  // Extend base data display class
  @extend .sv-data-display-base;
  
  // Reset list styles
  list-style: none;
  margin: 0;
  padding: 0;
  
  // Default styling
  width: 100%;
  border: $list-border-width solid $list-border-color;
  border-radius: var(--sv-radius-md);
  overflow: hidden;
  
  // Prevent text selection unless explicitly enabled
  &:not(.sv-list-selectable-text) {
    user-select: none;
  }
  
  // Default font size
  font-size: $list-item-font-size;
  
  // For scrollable lists
  &.sv-list-scrollable {
    max-height: 400px; // Default max height, can be overridden
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    
    // Scrollbar styling
    &::-webkit-scrollbar {
      width: 8px;
    }
    
    &::-webkit-scrollbar-track {
      background-color: var(--sv-bg-element);
      border-radius: 4px;
    }
    
    &::-webkit-scrollbar-thumb {
      background-color: var(--sv-border-dark);
      border-radius: 4px;
      
      &:hover {
        background-color: var(--sv-text-tertiary);
      }
    }
  }
  
  // List header
  &-header {
    padding: $list-item-padding-y $list-item-padding-x;
    background-color: var(--sv-bg-secondary);
    font-weight: var(--sv-font-semibold);
    border-bottom: $list-border-width solid $list-border-color;
  }
  
  // List footer
  &-footer {
    padding: $list-item-padding-y $list-item-padding-x;
    background-color: var(--sv-bg-secondary);
    color: var(--sv-text-secondary);
    font-size: var(--sv-text-sm);
    border-top: $list-border-width solid $list-border-color;
  }
}

/* ==========================================================================
   3. LIST ITEM STYLES
   ========================================================================== */

.sv-list-item {
  position: relative;
  display: flex;
  align-items: center;
  padding: $list-item-padding-y $list-item-padding-x;
  background-color: $list-item-bg;
  border-bottom: $list-border-width solid $list-item-border-color;
  transition: 
    background-color $list-transition-duration $list-transition-timing,
    border-color $list-transition-duration $list-transition-timing,
    box-shadow $list-transition-duration $list-transition-timing;
  
  // Remove border from last item
  &:last-child {
    border-bottom: none;
  }
  
  // List item content wrapper
  &-content {
    flex: 1;
    min-width: 0; // Needed for text truncation to work
  }
  
  // Main item content
  &-primary {
    display: block;
    font-size: $list-item-font-size;
    color: var(--sv-text-primary);
    margin-bottom: var(--sv-space-1);
    
    // If there's only a primary text, remove the margin
    &:only-child {
      margin-bottom: 0;
    }
  }
  
  // Secondary item content
  &-secondary {
    display: block;
    font-size: $list-caption-font-size;
    color: var(--sv-text-secondary);
  }
  
  // Icon in list item
  &-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: $list-icon-margin;
    flex-shrink: 0;
    color: var(--sv-text-secondary);
    
    // Icon size variations
    &.sv-icon-sm {
      width: $list-icon-size-sm;
      height: $list-icon-size-sm;
    }
    
    &.sv-icon-md {
      width: $list-icon-size-md;
      height: $list-icon-size-md;
    }
    
    &.sv-icon-lg {
      width: $list-icon-size-lg;
      height: $list-icon-size-lg;
    }
  }
  
  // Action area (buttons, toggles, etc.)
  &-action {
    display: flex;
    align-items: center;
    margin-left: var(--sv-space-3);
    flex-shrink: 0;
    
    // Multiple actions
    & + .sv-list-item-action {
      margin-left: var(--sv-space-2);
    }
    
    // Hide overflow actions until item is hovered
    &.sv-action-overflow {
      opacity: 0;
      transition: opacity $list-transition-duration $list-transition-timing;
    }
  }
  
  // Avatar in list item
  &-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    margin-right: $list-icon-margin;
    flex-shrink: 0;
    background-color: var(--sv-bg-element);
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: var(--sv-font-medium);
    color: var(--sv-text-secondary);
    
    // Size variations
    &.sv-avatar-sm {
      width: 32px;
      height: 32px;
      font-size: var(--sv-text-sm);
    }
    
    &.sv-avatar-lg {
      width: 48px;
      height: 48px;
      font-size: var(--sv-text-lg);
    }
    
    // Container for avatar image
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 50%;
    }
  }
  
  // Checkbox or radio in list item
  &-selection {
    display: flex;
    align-items: center;
    margin-right: $list-icon-margin;
    flex-shrink: 0;
  }
}

/* ==========================================================================
   4. LIST ITEM VARIATIONS
   ========================================================================== */

// List item with primary and secondary content in columns
.sv-list-item-two-line {
  display: flex;
  flex-direction: column;
  justify-content: center;
  min-height: 60px;
  
  .sv-list-item-primary {
    font-weight: var(--sv-font-medium);
  }
}

// List item with primary, secondary, and tertiary content in columns
.sv-list-item-three-line {
  display: flex;
  flex-direction: column;
  justify-content: center;
  min-height: 80px;
  
  .sv-list-item-tertiary {
    display: block;
    font-size: var(--sv-text-xs);
    color: var(--sv-text-tertiary);
    margin-top: var(--sv-space-1);
  }
}

// List item with horizontal layout for data
.sv-list-item-horizontal {
  display: flex;
  align-items: center;
  justify-content: space-between;
  
  // Data field with label and value
  .sv-list-item-field {
    display: flex;
    flex-direction: column;
    margin-right: var(--sv-space-4);
    
    &:last-child {
      margin-right: 0;
    }
    
    // Field label
    .sv-field-label {
      font-size: var(--sv-text-xs);
      color: var(--sv-text-tertiary);
      margin-bottom: var(--sv-space-1);
    }
    
    // Field value
    .sv-field-value {
      font-size: var(--sv-text-base);
      color: var(--sv-text-primary);
      font-weight: var(--sv-font-medium);
    }
  }
}

// List item with badge
.sv-list-item-badge {
  position: relative;
  
  // Badge
  .sv-badge {
    display: inline-block;
    padding: var(--sv-padding-1) var(--sv-padding-2);
    border-radius: var(--sv-radius-full);
    font-size: var(--sv-text-xs);
    font-weight: var(--sv-font-medium);
    text-align: center;
    margin-left: var(--sv-space-2);
    background-color: var(--sv-bg-element);
    color: var(--sv-text-secondary);
    
    // Badge variants
    &.sv-badge-primary {
      background-color: var(--sv-primary);
      color: var(--sv-text-on-dark);
    }
    
    &.sv-badge-success {
      background-color: var(--sv-success);
      color: var(--sv-text-on-dark);
    }
    
    &.sv-badge-warning {
      background-color: var(--sv-warning);
      color: var(--sv-text-on-dark);
    }
    
    &.sv-badge-error {
      background-color: var(--sv-error);
      color: var(--sv-text-on-dark);
    }
    
    &.sv-badge-info {
      background-color: var(--sv-info);
      color: var(--sv-text-on-dark);
    }
  }
}

// List item with status indicator
.sv-list-item-status {
  // Status indicator
  .sv-status {
    position: relative;
    display: flex;
    align-items: center;
    
    &::before {
      content: "";
      display: inline-block;
      width: 8px;
      height: 8px;
      border-radius: 50%;
      margin-right: var(--sv-space-2);
    }
    
    &.sv-status-online::before {
      background-color: var(--sv-success);
    }
    
    &.sv-status-offline::before {
      background-color: var(--sv-error);
    }
    
    &.sv-status-away::before {
      background-color: var(--sv-warning);
    }
    
    &.sv-status-busy::before {
      background-color: var(--sv-error);
    }
  }
}

/* ==========================================================================
   5. LIST ITEM STATES & INTERACTIONS
   ========================================================================== */

// Interactive list
.sv-list-interactive {
  .sv-list-item {
    cursor: pointer;
    
    &:hover {
      background-color: $list-item-hover-bg;
      
      // Show overflow actions on hover
      .sv-action-overflow {
        opacity: 1;
      }
    }
    
    &:active {
      background-color: $list-item-active-bg;
    }
    
    // Focus state
    &:focus {
      outline: none;
      box-shadow: var(--sv-shadow-focus);
      z-index: 1; // Ensure focused items appear above others
    }
    
    &:focus-visible {
      outline: var(--sv-focus-ring-width) solid var(--sv-focus-ring-color);
      outline-offset: -1px;
    }
  }
}

// Selected state
.sv-list-item {
  &.sv-list-item-selected,
  &[aria-selected="true"] {
    background-color: $list-item-selected-bg;
    
    .sv-list-item-primary {
      font-weight: var(--sv-font-medium);
    }
    
    // Selected item with checkbox
    .sv-list-item-selection {
      input[type="checkbox"],
      input[type="radio"] {
        &:checked {
          + .sv-checkbox-indicator,
          + .sv-radio-indicator {
            background-color: var(--sv-primary);
            border-color: var(--sv-primary);
          }
        }
      }
    }
  }
}

// Disabled state
.sv-list-item {
  &.sv-list-item-disabled {
    opacity: 0.65;
    pointer-events: none;
    
    .sv-list-item-primary,
    .sv-list-item-secondary {
      color: var(--sv-text-tertiary);
    }
    
    .sv-list-item-icon {
      opacity: 0.5;
    }
  }
}

// Success state
.sv-list-item {
  &.sv-list-item-success {
    border-left: 3px solid var(--sv-success);
    padding-left: calc($list-item-padding-x - 3px);
  }
}

// Error state
.sv-list-item {
  &.sv-list-item-error {
    border-left: 3px solid var(--sv-error);
    padding-left: calc($list-item-padding-x - 3px);
  }
}

// Warning state
.sv-list-item {
  &.sv-list-item-warning {
    border-left: 3px solid var(--sv-warning);
    padding-left: calc($list-item-padding-x - 3px);
  }
}

/* ==========================================================================
   6. LIST VARIANTS
   ========================================================================== */

// Bordered variant (each item fully bordered)
.sv-list-bordered {
  .sv-list-item {
    border: $list-border-width solid $list-item-border-color;
    border-radius: var(--sv-radius-sm);
    margin: var(--sv-space-2);
    
    &:last-child {
      border-bottom: $list-border-width solid $list-item-border-color;
    }
  }
  
  // Adjust the container to account for item margins
  padding: var(--sv-space-1);
}

// Borderless variant
.sv-list-borderless {
  border: none;
  
  .sv-list-item {
    border-bottom: none;
    
    & + .sv-list-item {
      margin-top: var(--sv-space-1);
    }
  }
  
  .sv-list-header,
  .sv-list-footer {
    border: none;
  }
}

// Density variations
.sv-list-compact {
  font-size: var(--sv-text-sm);
  
  .sv-list-item {
    padding: $list-item-compact-padding-y $list-item-compact-padding-x;
  }
  
  .sv-list-header,
  .sv-list-footer {
    padding: $list-item-compact-padding-y $list-item-compact-padding-x;
  }
}

.sv-list-comfortable {
  .sv-list-item {
    padding: $list-item-comfortable-padding-y $list-item-comfortable-padding-x;
  }
  
  .sv-list-header,
  .sv-list-footer {
    padding: $list-item-comfortable-padding-y $list-item-comfortable-padding-x;
  }
}

// Grid list
.sv-list-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: var(--sv-space-3);
  padding: var(--sv-padding-3);
  
  .sv-list-item {
    display: flex;
    flex-direction: column;
    height: 100%;
    border: $list-border-width solid $list-item-border-color;
    border-radius: var(--sv-radius-md);
    
    // Grid item content layout
    .sv-list-item-content {
      display: flex;
      flex-direction: column;
      flex: 1;
    }
    
    // Move actions to bottom
    .sv-list-item-action {
      margin-top: var(--sv-space-3);
      margin-left: 0;
      justify-content: flex-end;
    }
  }
}

/* ==========================================================================
   7. UTILITY CLASSES
   ========================================================================== */

// Empty state for list
.sv-list-empty {
  .sv-list-empty-message {
    padding: var(--sv-padding-lg);
    text-align: center;
    color: var(--sv-text-secondary);
    font-style: italic;
  }
}

// Loading state for list
.sv-list-loading {
  position: relative;
  
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(var(--sv-bg-primary), 0.5);
    z-index: var(--sv-z-index-overlay);
    border-radius: var(--sv-radius-md);
  }
  
  &::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 24px;
    height: 24px;
    margin: -12px 0 0 -12px;
    border-radius: 50%;
    border: 2px solid rgba(var(--sv-primary-500-rgb), 0.3);
    border-top-color: var(--sv-primary);
    z-index: var(--sv-z-index-overlay);
    animation: spin 1s linear infinite;
  }
}

// Truncate text in list items
.sv-list-item-truncate {
  .sv-list-item-primary,
  .sv-list-item-secondary,
  .sv-list-item-tertiary {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// List with dividers between items
.sv-list-dividers {
  .sv-list-item {
    border-bottom: $list-border-width solid $list-item-border-color;
    
    &:last-child {
      border-bottom: none;
    }
  }
}

/* ==========================================================================
   8. NESTED LISTS
   ========================================================================== */

// Support for nested lists/tree view
.sv-list-nested {
  .sv-list-item-expandable {
    position: relative;
    
    // Expand/collapse control
    .sv-expand-control {
      position: absolute;
      left: var(--sv-space-2);
      width: 20px;
      height: 20px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: transform $list-transition-duration $list-transition-timing;
      
      &::before {
        content: "";
        border: solid var(--sv-text-secondary);
        border-width: 0 2px 2px 0;
        display: inline-block;
        padding: 2px;
        transform: rotate(45deg);
      }
      
      &[aria-expanded="true"]::before {
        transform: rotate(-135deg);
      }
    }
    
    // Adjust padding for expandable items
    padding-left: calc($list-item-padding-x + 20px);
  }
  
  // Nested list container
  .sv-nested-list {
    margin-left: var(--sv-space-8);
    border: none;
    
    .sv-list-item {
      border-left: 1px solid $list-item-border-color;
      border-radius: 0;
      
      &:last-child {
        border-bottom: none;
      }
    }
  }
  
  // Collapsed state
  .sv-nested-list-collapsed {
    display: none;
  }
}

/* ==========================================================================
   9. RESPONSIVE BEHAVIOR
   ========================================================================== */

// Mobile adaptations
@include breakpoint-down(md) {
  .sv-list {
    // Adjust padding for mobile
    .sv-list-item {
      padding: $list-item-compact-padding-y $list-item-compact-padding-x;
    }
    
    // Stack horizontal items on mobile
    .sv-list-item-horizontal {
      flex-direction: column;
      align-items: flex-start;
      
      .sv-list-item-field {
        margin-right: 0;
        margin-bottom: var(--sv-space-3);
        width: 100%;
      }
    }
    
    // Adjust grid list for mobile
    &.sv-list-grid {
      grid-template-columns: 1fr;
    }
    
    // Hide certain elements on mobile
    .sv-hide-mobile {
      display: none;
    }
    
    // Make actions more accessible on mobile
    .sv-list-item-action {
      &.sv-action-overflow {
        opacity: 1; // Always show actions on mobile
      }
    }
  }
  
  // Adjust nested lists for mobile
  .sv-list-nested {
    .sv-nested-list {
      margin-left: var(--sv-space-4);
    }
  }
}

// Tablet adaptations
@include breakpoint-between(md, lg) {
  .sv-list {
    // Adjust grid list for tablet
    &.sv-list-grid {
      grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
    }
    
    // Hide certain elements on tablet
    .sv-hide-tablet {
      display: none;
    }
  }
}

// Handle print styles
@media print {
  .sv-list {
    border: 1px solid #000;
    
    .sv-list-item {
      border-bottom: 1px solid #000;
      page-break-inside: avoid;
    }
    
    .sv-list-item-action {
      display: none;
    }
    
    // Ensure text is visible in print
    .sv-list-item-primary,
    .sv-list-item-secondary,
    .sv-list-item-tertiary {
      color: #000 !important;
    }
  }
}