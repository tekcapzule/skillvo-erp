/**
 * Data Grid Component
 * Version: 1.1.0
 * Last Updated: June 30, 2024
 * 
 * This file provides styles for the data grid component in the SkillVo design system.
 * It extends the sv-data-display-control-base class and adds grid-specific styling.
 * The data grid is designed for displaying data in a flexible grid layout with cards.
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. VARIABLES & CONFIGURATION
   2. BASE GRID STYLES
   3. GRID ITEM STYLES
   4. GRID ITEM VARIATIONS
   5. GRID ITEM STATES & INTERACTIONS
   6. GRID LAYOUTS
   7. GRID FILTERING & SORTING
   8. UTILITY CLASSES
   9. RESPONSIVE BEHAVIOR
   ========================================================================== */

/* ==========================================================================
   1. VARIABLES & CONFIGURATION
   ========================================================================== */
@use './../../abstracts/' as *;
@use './../../base/' as *;

// Grid-specific variables
$grid-gap: var(--sv-space-4);
$grid-item-border-width: 1px;
$grid-item-border-color: var(--sv-border-light);
$grid-item-bg: var(--sv-bg-surface);
$grid-item-hover-bg: var(--sv-bg-element-hover);
$grid-item-active-bg: var(--sv-bg-element-active);
$grid-item-selected-bg: var(--sv-bg-element-active);

// Spacing variables
$grid-padding: var(--sv-padding-4);
$grid-item-padding: var(--sv-padding-4);
$grid-item-compact-padding: var(--sv-padding-3);
$grid-item-comfortable-padding: var(--sv-padding-5);

// Column count variables for responsive design
$grid-columns-xs: 1;
$grid-columns-sm: 2;
$grid-columns-md: 3;
$grid-columns-lg: 4;
$grid-columns-xl: 5;

// Typography variables
$grid-title-font-size: var(--sv-text-lg);
$grid-title-font-weight: var(--sv-font-semibold);
$grid-subtitle-font-size: var(--sv-text-base);
$grid-caption-font-size: var(--sv-text-sm);

// Animation variables
$grid-transition-duration: var(--sv-motion-duration-medium);
$grid-transition-timing: var(--sv-motion-ease-standard);

// Item size variables
$grid-item-min-width: 200px;
$grid-item-min-height: 100px;
$grid-item-fixed-width: 250px;
$grid-item-fixed-height: 150px;

/* ==========================================================================
   2. BASE GRID STYLES
   ========================================================================== */

.sv-grid {
  // Extend base data display class
  @extend .sv-data-display-control-base;
  
  // Set display and layout properties
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($grid-item-min-width, 1fr));
  gap: $grid-gap;
  padding: $grid-padding;
  
  // Base styling
  width: 100%;
  border: $grid-item-border-width solid $grid-item-border-color;
  border-radius: var(--sv-radius-md);
  background-color: var(--sv-bg-secondary);
  
  // Prevent text selection unless explicitly enabled
  &:not(.sv-grid--selectable-text) {
    user-select: none;
  }
  
  // Grid header
  &__header {
    grid-column: 1 / -1;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: $grid-item-padding;
    background-color: var(--sv-bg-surface);
    border-bottom: $grid-item-border-width solid $grid-item-border-color;
    margin: -$grid-padding;
    margin-bottom: $grid-padding;
    border-top-left-radius: var(--sv-radius-md);
    border-top-right-radius: var(--sv-radius-md);
    
    // Grid title
    &-title {
      font-size: $grid-title-font-size;
      font-weight: $grid-title-font-weight;
      color: var(--sv-text-primary);
    }
    
    // Grid actions container
    &-actions {
      display: flex;
      align-items: center;
      gap: var(--sv-space-2);
    }
  }
  
  // Grid footer
  &__footer {
    grid-column: 1 / -1;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: $grid-item-padding;
    background-color: var(--sv-bg-surface);
    border-top: $grid-item-border-width solid $grid-item-border-color;
    margin: -$grid-padding;
    margin-top: $grid-padding;
    border-bottom-left-radius: var(--sv-radius-md);
    border-bottom-right-radius: var(--sv-radius-md);
    
    // Pagination or load more
    &-pagination {
      display: flex;
      align-items: center;
      gap: var(--sv-space-2);
    }
    
    // Summary information
    &-summary {
      font-size: var(--sv-text-sm);
      color: var(--sv-text-secondary);
    }
  }
  
  // Count display
  &__count {
    font-size: var(--sv-text-sm);
    color: var(--sv-text-secondary);
  }
  
  // For scrollable grid container
  &--scrollable {
    max-height: 600px; // Default max height, can be overridden
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    
    // Scrollbar styling
    &::-webkit-scrollbar {
      width: 8px;
    }
    
    &::-webkit-scrollbar-track {
      background-color: var(--sv-bg-element);
      border-radius: 4px;
    }
    
    &::-webkit-scrollbar-thumb {
      background-color: var(--sv-border-dark);
      border-radius: 4px;
      
      &:hover {
        background-color: var(--sv-text-tertiary);
      }
    }
  }
}

/* ==========================================================================
   3. GRID ITEM STYLES
   ========================================================================== */

.sv-grid-item {
  position: relative;
  display: flex;
  flex-direction: column;
  padding: $grid-item-padding;
  background-color: $grid-item-bg;
  border: $grid-item-border-width solid $grid-item-border-color;
  border-radius: var(--sv-radius-md);
  transition: 
    transform $grid-transition-duration $grid-transition-timing,
    box-shadow $grid-transition-duration $grid-transition-timing,
    background-color $grid-transition-duration $grid-transition-timing;
  
  // Item with shadow
  &--shadowed {
    border: none;
    box-shadow: var(--sv-shadow-sm);
    
    &:hover {
      box-shadow: var(--sv-shadow-md);
    }
  }
  
  // Item with elevation
  &--elevated {
    transform: translateY(0);
    
    &:hover {
      transform: translateY(-2px);
      box-shadow: var(--sv-shadow-md);
    }
  }
  
  // Item content areas
  &__header {
    display: flex;
    align-items: center;
    margin-bottom: var(--sv-space-3);
    
    &-icon {
      margin-right: var(--sv-space-3);
      color: var(--sv-text-secondary);
    }
    
    &-title {
      font-size: $grid-title-font-size;
      font-weight: $grid-title-font-weight;
      color: var(--sv-text-primary);
      margin: 0;
    }
  }
  
  &__content {
    flex: 1 1 auto;
    overflow: hidden;
    
    // For text truncation
    p {
      margin: 0 0 var(--sv-space-2);
      line-height: var(--sv-line-height-normal);
      
      &:last-child {
        margin-bottom: 0;
      }
    }
  }
  
  &__footer {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-top: var(--sv-space-3);
    padding-top: var(--sv-space-3);
    border-top: $grid-item-border-width solid $grid-item-border-color;
  }
  
  // For media content
  &__media {
    margin: calc(-1 * $grid-item-padding) calc(-1 * $grid-item-padding) var(--sv-space-3);
    overflow: hidden;
    
    img {
      width: 100%;
      height: auto;
      display: block;
      object-fit: cover;
    }
    
    // Top rounded corners only if it's the first child
    &:first-child img {
      border-top-left-radius: calc(var(--sv-radius-md) - 1px);
      border-top-right-radius: calc(var(--sv-radius-md) - 1px);
    }
  }
  
  // For badge or status indicator
  &__badge {
    position: absolute;
    top: var(--sv-space-2);
    right: var(--sv-space-2);
    z-index: 1;
    padding: var(--sv-space-1) var(--sv-space-2);
    font-size: var(--sv-text-xs);
    font-weight: var(--sv-font-semibold);
    color: var(--sv-text-on-primary);
    background-color: var(--sv-primary);
    border-radius: var(--sv-radius-full);
  }
}

/* ==========================================================================
   4. GRID ITEM VARIATIONS
   ========================================================================== */

// Size variations
.sv-grid-item {
  &--compact {
    padding: $grid-item-compact-padding;
  }
  
  &--comfortable {
    padding: $grid-item-comfortable-padding;
  }
  
  &--square {
    aspect-ratio: 1 / 1;
  }
  
  &--fixed-width {
    width: $grid-item-fixed-width;
  }
  
  &--fixed-height {
    height: $grid-item-fixed-height;
  }
}

// Grid layout variations for different screen sizes
.sv-grid {
  &--xs {
    grid-template-columns: repeat($grid-columns-xs, 1fr);
  }
  
  &--sm {
    grid-template-columns: repeat($grid-columns-sm, 1fr);
  }
  
  &--md {
    grid-template-columns: repeat($grid-columns-md, 1fr);
  }
  
  &--lg {
    grid-template-columns: repeat($grid-columns-lg, 1fr);
  }
  
  &--xl {
    grid-template-columns: repeat($grid-columns-xl, 1fr);
  }
}

/* ==========================================================================
   5. GRID ITEM STATES & INTERACTIONS
   ========================================================================== */

.sv-grid-item {
  // Hover state
  &:hover {
    background-color: $grid-item-hover-bg;
  }
  
  // Active state
  &:active,
  &.is-active {
    background-color: $grid-item-active-bg;
  }
  
  // Selected state
  &.is-selected {
    background-color: $grid-item-selected-bg;
    border-color: var(--sv-primary);
  }
  
  // Disabled state
  &.is-disabled {
    opacity: 0.5;
    pointer-events: none;
    cursor: not-allowed;
  }
  
  // Interactive items
  &--interactive {
    cursor: pointer;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    
    &:hover {
      transform: translateY(-2px);
      box-shadow: var(--sv-shadow-md);
    }
    
    &:active,
    &.is-active {
      transform: translateY(0);
      box-shadow: var(--sv-shadow-sm);
    }
  }
  
  // Loading state
  &.is-loading {
    position: relative;
    overflow: hidden;
    
    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 50%;
      height: 100%;
      background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.2),
        transparent
      );
      animation: loading-shine 1.5s infinite;
    }
  }
}

/* ==========================================================================
   6. GRID LAYOUTS
   ========================================================================== */

.sv-grid {
  // Masonry layout
  &--masonry {
    display: block;
    column-count: $grid-columns-md;
    column-gap: $grid-gap;
    
    .sv-grid-item {
      display: inline-block;
      width: 100%;
      margin-bottom: $grid-gap;
      break-inside: avoid;
    }
    
    @media (max-width: 991px) {
      column-count: $grid-columns-sm;
    }
    
    @media (max-width: 767px) {
      column-count: $grid-columns-xs;
    }
  }
  
  // Horizontal scroll layout for carousel-like grids
  &--horizontal-scroll {
    display: flex;
    flex-wrap: nowrap;
    overflow-x: auto;
    padding-bottom: var(--sv-space-3); // For scrollbar
    
    .sv-grid-item {
      flex: 0 0 auto;
      width: $grid-item-fixed-width;
      margin-right: $grid-gap;
      
      &:last-child {
        margin-right: 0;
      }
    }
    
    &::-webkit-scrollbar {
      height: 6px;
    }
    
    &::-webkit-scrollbar-track {
      background-color: var(--sv-bg-element);
      border-radius: 3px;
    }
    
    &::-webkit-scrollbar-thumb {
      background-color: var(--sv-border-dark);
      border-radius: 3px;
      
      &:hover {
        background-color: var(--sv-text-tertiary);
      }
    }
  }
}

/* ==========================================================================
   7. GRID FILTERING & SORTING
   ========================================================================== */

.sv-grid {
  // Filtered grid
  &--filtered {
    .sv-grid-item.is-hidden {
      display: none;
    }
  }
  
  // Filter controls
  &__filter-controls {
    margin-bottom: var(--sv-space-4);
    display: flex;
    flex-wrap: wrap;
    gap: var(--sv-space-2);
  }
  
  // Sort controls
  &__sort-controls {
    display: flex;
    align-items: center;
    margin-bottom: var(--sv-space-4);
    
    label {
      margin-right: var(--sv-space-2);
      font-size: var(--sv-text-sm);
      color: var(--sv-text-secondary);
    }
    
    select {
      padding: var(--sv-space-1) var(--sv-space-2);
      border: 1px solid var(--sv-border-medium);
      border-radius: var(--sv-radius-sm);
      font-size: var(--sv-text-sm);
    }
  }
}

/* ==========================================================================
   8. UTILITY CLASSES
   ========================================================================== */

// Text utilities
.sv-grid-item {
  &__title {
    font-size: $grid-title-font-size;
    font-weight: $grid-title-font-weight;
    color: var(--sv-text-primary);
    margin: 0 0 var(--sv-space-2);
  }
  
  &__subtitle {
    font-size: $grid-subtitle-font-size;
    color: var(--sv-text-secondary);
    margin: 0 0 var(--sv-space-3);
  }
  
  &__caption {
    font-size: $grid-caption-font-size;
    color: var(--sv-text-tertiary);
    margin: 0;
  }
}

// Truncation utilities
.sv-grid-item {
  &__text-truncate {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  
  &__text-clamp {
    display: -webkit-box;
    -webkit-line-clamp: 2; // Default to 2 lines
    -webkit-box-orient: vertical;
    overflow: hidden;
    
    &--1 {
      -webkit-line-clamp: 1;
    }
    
    &--3 {
      -webkit-line-clamp: 3;
    }
    
    &--4 {
      -webkit-line-clamp: 4;
    }
  }
}

/* ==========================================================================
   9. RESPONSIVE BEHAVIOR
   ========================================================================== */

// Default responsive behavior
@media (max-width: 1199px) {
  .sv-grid:not([class*="sv-grid--"]) {
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
  }
}

@media (max-width: 991px) {
  .sv-grid:not([class*="sv-grid--"]) {
    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
  }
}

@media (max-width: 767px) {
  .sv-grid:not([class*="sv-grid--"]) {
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  }
  
  .sv-grid__header,
  .sv-grid__footer {
    flex-direction: column;
    align-items: flex-start;
    
    &-actions,
    &-pagination {
      margin-top: var(--sv-space-2);
      width: 100%;
      justify-content: flex-end;
    }
  }
}

@media (max-width: 575px) {
  .sv-grid:not([class*="sv-grid--"]) {
    grid-template-columns: 1fr;
  }
  
  .sv-grid-item--fixed-width {
    width: 100%;
  }
}

// Keyframes for loading animation
@keyframes loading-shine {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}