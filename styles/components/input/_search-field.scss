/**
 * Search Field Component - Component-level Styles
 * Version: 2.1.0
 * Last Updated: July 15, 2024
 * 
 * This file defines styles for the Search Field component in the SkillVo design system.
 * It extends the input-control-base class and provides search field-specific styling.
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. IMPORTS & VARIABLES
   2. SEARCH FIELD BASE
   3. SEARCH FIELD ELEMENTS
   4. SEARCH FIELD VARIATIONS
   5. COMPONENT-SPECIFIC STATES
   6. SEARCH RESULTS
   7. RESPONSIVE ADJUSTMENTS
   ========================================================================== */

/* ==========================================================================
   1. IMPORTS & VARIABLES
   ========================================================================== */
@use './../../abstracts' as *;
@use './../../base/utils/mixins/state' as state;
@use './../../base/utils/mixins/layout' as layout;
@use './../../base/utils/mixins/responsive' as responsive;
@use './../../base/utils/mixins/accessibility' as a11y;

// Component-specific variables
$search-field-max-width: var(--sv-size-96);
$search-field-border-radius: var(--sv-radius-md);
$search-field-transition-duration: var(--sv-motion-duration-short);
$search-field-transition-timing: var(--sv-motion-ease-standard);
$search-field-icon-size: var(--sv-size-4);
$search-field-icon-color: var(--sv-text-secondary);
$search-field-clear-button-size: var(--sv-size-5);
$search-field-dropdown-max-height: var(--sv-size-64);
$search-field-dropdown-shadow: var(--sv-shadow-md);

/* ==========================================================================
   2. SEARCH FIELD BASE
   ========================================================================== */

.sv-search-field {
  // Extend the input control base styles
  @extend .sv-input-control-base !optional;
  
  // Unique properties for search field
  position: relative;
  max-width: $search-field-max-width;
  border-radius: $search-field-border-radius;
  
  // Add consistent transitions
  transition: border-color $search-field-transition-duration $search-field-transition-timing,
              box-shadow $search-field-transition-duration $search-field-transition-timing,
              background-color $search-field-transition-duration $search-field-transition-timing;
  
  // BEM-style elements
  &__wrapper {
    display: flex;
    flex-direction: column;
    width: 100%;
  }
  
  &__input {
    @extend .sv-input-control-base__field !optional;
    padding-left: calc($search-field-icon-size + var(--sv-space-5));
    padding-right: calc($search-field-clear-button-size + var(--sv-space-3));
    
    // Remove browser search styling
    &::-webkit-search-decoration,
    &::-webkit-search-cancel-button,
    &::-webkit-search-results-button,
    &::-webkit-search-results-decoration {
      -webkit-appearance: none;
    }
  }
  
  &__label {
    @extend .sv-input-control-base__label !optional;
  }
  
  &__helper-text {
    @extend .sv-input-control-base__helper-text !optional;
  }
  
  // Enhanced focus behavior
  &:focus-within {
    border-color: var(--sv-primary);
    box-shadow: var(--sv-shadow-focus);
  }
}

/* ==========================================================================
   3. SEARCH FIELD ELEMENTS
   ========================================================================== */

.sv-search-field {
  // Search icon
  &__icon {
    position: absolute;
    left: var(--sv-space-3);
    top: 50%;
    transform: translateY(-50%);
    width: $search-field-icon-size;
    height: $search-field-icon-size;
    display: flex;
    align-items: center;
    justify-content: center;
    color: $search-field-icon-color;
    pointer-events: none;
  }
  
  // Clear button
  &__clear {
    position: absolute;
    right: var(--sv-space-3);
    top: 50%;
    transform: translateY(-50%);
    width: $search-field-clear-button-size;
    height: $search-field-clear-button-size;
    display: flex;
    align-items: center;
    justify-content: center;
    background: transparent;
    border: none;
    color: $search-field-icon-color;
    cursor: pointer;
    padding: 0;
    opacity: 0;
    transition: opacity $search-field-transition-duration $search-field-transition-timing;
    
    &:hover {
      color: var(--sv-text-primary);
    }
    
    &:focus {
      outline: none;
    }
    
    &:focus-visible {
      outline: var(--sv-focus-ring-width) solid var(--sv-focus-ring-color);
      outline-offset: var(--sv-focus-ring-offset);
    }
    
    // Show when input has value
    &.is-visible {
      opacity: 1;
    }
  }
}

/* ==========================================================================
   4. SEARCH FIELD VARIATIONS
   ========================================================================== */

.sv-search-field {
  // Rounded search field (pill-shaped)
  &--rounded {
    border-radius: var(--sv-radius-pill);
    
    .sv-search-field__input {
      border-radius: var(--sv-radius-pill);
    }
  }
  
  // Compact search field
  &--compact {
    height: var(--sv-control-height-sm);
    font-size: var(--sv-font-size-sm);
    
    .sv-search-field__icon,
    .sv-search-field__clear {
      transform: translateY(-50%) scale(0.85);
    }
  }
  
  // Expanded search field
  &--expanded {
    height: var(--sv-control-height-lg);
    font-size: var(--sv-font-size-lg);
    
    .sv-search-field__icon,
    .sv-search-field__clear {
      transform: translateY(-50%) scale(1.15);
    }
  }
  
  // Inline search field (no borders unless focused)
  &--inline {
    border-color: transparent;
    background-color: transparent;
    
    &:hover:not(:disabled):not(.is-disabled):not(:focus-within) {
      background-color: var(--sv-bg-element-hover);
    }
    
    &:focus-within {
      background-color: var(--sv-bg-surface);
      border-color: var(--sv-primary);
    }
  }
}

/* ==========================================================================
   5. COMPONENT-SPECIFIC STATES
   ========================================================================== */

.sv-search-field {
  // Loading state
  &.is-loading {
    .sv-search-field__icon {
      animation: search-spin 1s linear infinite;
    }
    
    @keyframes search-spin {
      from {
        transform: translateY(-50%) rotate(0deg);
      }
      to {
        transform: translateY(-50%) rotate(360deg);
      }
    }
  }
  
  // Valid state
  &.is-valid {
    border-color: var(--sv-success);
    
    &:focus-within {
      box-shadow: 0 0 0 var(--sv-focus-ring-width) rgba(var(--sv-success-rgb), 0.25);
    }
    
    .sv-search-field__helper-text {
      color: var(--sv-success);
    }
  }
  
  // Invalid state
  &.is-invalid {
    border-color: var(--sv-error);
    
    &:focus-within {
      box-shadow: 0 0 0 var(--sv-focus-ring-width) rgba(var(--sv-error-rgb), 0.25);
    }
    
    .sv-search-field__helper-text {
      color: var(--sv-error);
    }
  }
  
  // Active state with results
  &.is-active {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border-bottom-color: var(--sv-border-light);
    
    &.sv-search-field--rounded {
      border-radius: var(--sv-radius-pill);
      border-bottom-left-radius: var(--sv-radius-md);
      border-bottom-right-radius: var(--sv-radius-md);
    }
  }
}

/* ==========================================================================
   6. SEARCH RESULTS
   ========================================================================== */

.sv-search-field {
  &__results {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    z-index: var(--sv-z-index-dropdown);
    background-color: var(--sv-bg-surface);
    border: 1px solid var(--sv-border-medium);
    border-top: 0;
    border-bottom-left-radius: $search-field-border-radius;
    border-bottom-right-radius: $search-field-border-radius;
    box-shadow: $search-field-dropdown-shadow;
    max-height: $search-field-dropdown-max-height;
    overflow-y: auto;
    
    // Hide by default
    display: none;
    
    // Show when active
    &.is-visible {
      display: block;
    }
    
    // Results list
    &-list {
      margin: 0;
      padding: 0;
      list-style: none;
    }
    
    // Individual result item
    &-item {
      padding: var(--sv-space-2) var(--sv-space-3);
      cursor: pointer;
      transition: background-color $search-field-transition-duration $search-field-transition-timing;
      
      &:hover {
        background-color: var(--sv-bg-element-hover);
      }
      
      &.is-selected {
        background-color: var(--sv-bg-element-active);
      }
      
      &:focus {
        outline: none;
        background-color: var(--sv-bg-element-hover);
      }
      
      &:focus-visible {
        outline: var(--sv-focus-ring-width) solid var(--sv-focus-ring-color);
        outline-offset: -2px;
      }
    }
    
    // Result group headings
    &-group {
      padding: var(--sv-space-1) var(--sv-space-3);
      font-size: var(--sv-font-size-xs);
      font-weight: var(--sv-font-weight-medium);
      color: var(--sv-text-secondary);
      text-transform: uppercase;
      letter-spacing: 0.05em;
      background-color: var(--sv-bg-element);
    }
    
    // Empty state
    &-empty {
      padding: var(--sv-space-3);
      text-align: center;
      color: var(--sv-text-secondary);
      font-size: var(--sv-font-size-sm);
    }
    
    // Highlight matched text
    &-highlight {
      font-weight: var(--sv-font-weight-medium);
      color: var(--sv-primary);
      background-color: rgba(var(--sv-primary-rgb), 0.1);
    }
  }
}

/* ==========================================================================
   7. RESPONSIVE ADJUSTMENTS
   ========================================================================== */

@include responsive.breakpoint-down(md) {
  .sv-search-field {
    // Adjust for mobile touch targets
    height: var(--sv-tap-target-size);
    
    &__results {
      max-height: 50vh; // Limit height on mobile
    }
  }
}

@include responsive.breakpoint-down(sm) {
  .sv-search-field {
    font-size: var(--sv-font-size-sm);
    
    // Full width on mobile
    width: 100%;
    max-width: 100%;
    
    &__results-item {
      padding: var(--sv-space-3); // Larger touch target for mobile
    }
  }
}