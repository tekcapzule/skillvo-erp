/**
 * Password Field Component - Component-level Styles
 * Version: 2.1.0
 * Last Updated: July 15, 2024
 * 
 * This file defines styles for the Password Field component in the SkillVo design system.
 * It extends the input-control-base class and provides password field-specific styling.
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. IMPORTS & VARIABLES
   2. PASSWORD FIELD BASE
   3. PASSWORD FIELD ELEMENTS
   4. PASSWORD FIELD STATES
   5. PASSWORD STRENGTH METER
   6. RESPONSIVE BEHAVIOR
   ========================================================================== */

/* ==========================================================================
   1. IMPORTS & VARIABLES
   ========================================================================== */
@use './../../abstracts/variables/' as *;
@use './../../base/utils/mixins/state' as state;
@use './../../base/utils/mixins/layout' as layout;
@use './../../base/utils/mixins/responsive' as responsive;
@use './../../base/utils/mixins/accessibility' as a11y;

// Component-specific variables
$password-field-max-width: var(--sv-size-64);
$password-field-letter-spacing: 0.125em;
$password-field-transition-duration: var(--sv-motion-duration-short);
$password-field-transition-timing: var(--sv-motion-ease-standard);
$password-toggle-size: var(--sv-size-5);
$password-toggle-color: var(--sv-text-secondary);
$password-toggle-hover-color: var(--sv-text-primary);
$password-strength-height: var(--sv-size-1);
$password-strength-margin-top: var(--sv-space-2);

/* ==========================================================================
   2. PASSWORD FIELD BASE
   ========================================================================== */

.sv-password-field {
  // Extend the input control base styles
  @extend .sv-input-control-base;
  
  // Unique properties for password field
  position: relative;
  max-width: $password-field-max-width;
  
  // Add consistent transitions
  transition: border-color $password-field-transition-duration $password-field-transition-timing,
              box-shadow $password-field-transition-duration $password-field-transition-timing,
              background-color $password-field-transition-duration $password-field-transition-timing;
  
  // BEM-style elements
  &__wrapper {
    display: flex;
    flex-direction: column;
    width: 100%;
  }
  
  &__input {
    @extend .sv-input-control-base__field;
    font-family: var(--sv-font-family-mono);
    letter-spacing: $password-field-letter-spacing;
    padding-right: calc($password-toggle-size + var(--sv-space-3));
    
    // Plain text mode
    &.is-plain-text {
      font-family: var(--sv-font-family-base);
      letter-spacing: normal;
    }
  }
  
  &__label {
    @extend .sv-input-control-base__label;
  }
  
  &__helper-text {
    @extend .sv-input-control-base__helper-text;
  }
  
  // Enhanced focus behavior
  &:focus-within {
    border-color: var(--sv-primary);
    box-shadow: var(--sv-shadow-focus);
  }
}

/* ==========================================================================
   3. PASSWORD FIELD ELEMENTS
   ========================================================================== */

.sv-password-field {
  // Toggle visibility button
  &__toggle {
    position: absolute;
    right: var(--sv-space-3);
    top: 50%;
    transform: translateY(-50%);
    width: $password-toggle-size;
    height: $password-toggle-size;
    display: flex;
    align-items: center;
    justify-content: center;
    color: $password-toggle-color;
    background: transparent;
    border: none;
    padding: 0;
    cursor: pointer;
    z-index: 2;
    
    &:hover {
      color: $password-toggle-hover-color;
    }
    
    &:focus {
      outline: none;
    }
    
    &:focus-visible {
      outline: var(--sv-focus-ring-width) solid var(--sv-focus-ring-color);
      outline-offset: var(--sv-focus-ring-offset);
    }
  }
  
  // Requirements list
  &__requirements {
    margin-top: var(--sv-space-2);
    padding-left: var(--sv-space-5);
    font-size: var(--sv-font-size-xs);
    color: var(--sv-text-secondary);
    list-style-type: none;
    
    &-item {
      position: relative;
      margin-bottom: var(--sv-space-1);
      
      &::before {
        content: "•";
        position: absolute;
        left: calc(-1 * var(--sv-space-4));
        color: var(--sv-text-tertiary);
      }
      
      &.is-valid::before {
        content: "✓";
        color: var(--sv-success);
      }
      
      &.is-invalid::before {
        content: "✗";
        color: var(--sv-error);
      }
    }
  }
}

/* ==========================================================================
   4. PASSWORD FIELD STATES
   ========================================================================== */

.sv-password-field {
  // Valid state
  &.is-valid {
    border-color: var(--sv-success);
    
    &:focus-within {
      box-shadow: 0 0 0 var(--sv-focus-ring-width) rgba(var(--sv-success-rgb), 0.25);
    }
    
    .sv-password-field__helper-text {
      color: var(--sv-success);
    }
  }
  
  // Invalid state
  &.is-invalid {
    border-color: var(--sv-error);
    
    &:focus-within {
      box-shadow: 0 0 0 var(--sv-focus-ring-width) rgba(var(--sv-error-rgb), 0.25);
    }
    
    .sv-password-field__helper-text {
      color: var(--sv-error);
    }
  }
  
  // Disabled state extensions (beyond base class handling)
  &.is-disabled,
  &:disabled {
    .sv-password-field__toggle,
    .sv-password-field__strength-meter {
      opacity: 0.5;
      pointer-events: none;
    }
  }
}

/* ==========================================================================
   5. PASSWORD STRENGTH METER
   ========================================================================== */

.sv-password-field {
  &__strength-meter {
    margin-top: $password-strength-margin-top;
    height: $password-strength-height;
    background-color: var(--sv-bg-element);
    border-radius: var(--sv-radius-pill);
    overflow: hidden;
    
    &-bar {
      height: 100%;
      width: 0;
      transition: width 0.3s ease, background-color 0.3s ease;
      
      &--weak {
        background-color: var(--sv-error);
        width: 25%;
      }
      
      &--fair {
        background-color: var(--sv-warning);
        width: 50%;
      }
      
      &--good {
        background-color: var(--sv-info);
        width: 75%;
      }
      
      &--strong {
        background-color: var(--sv-success);
        width: 100%;
      }
    }
  }
  
  &__strength-text {
    display: block;
    font-size: var(--sv-font-size-xs);
    margin-top: var(--sv-space-1);
    text-align: right;
    
    &--weak {
      color: var(--sv-error);
    }
    
    &--fair {
      color: var(--sv-warning);
    }
    
    &--good {
      color: var(--sv-info);
    }
    
    &--strong {
      color: var(--sv-success);
    }
  }
}

/* ==========================================================================
   6. RESPONSIVE BEHAVIOR
   ========================================================================== */

@include responsive.breakpoint-down(sm) {
  .sv-password-field {
    font-size: var(--sv-font-size-sm);
    
    // Full width on mobile
    width: 100%;
    max-width: 100%;
    
    &__requirements {
      font-size: var(--sv-font-size-xs);
    }
  }
}

@include responsive.breakpoint-down(xs) {
  .sv-password-field {
    &__toggle {
      right: var(--sv-space-2);
    }
  }
}