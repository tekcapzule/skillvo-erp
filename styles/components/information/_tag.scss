/**
 * Tag Component - Component-level Styles
 * Version: 1.1.0
 * Last Updated: July 15, 2024
 * 
 * This file defines styles for the Tag component in the SkillVo design system.
 * It extends the information-display-base class and provides tag-specific styling.
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. IMPORTS
   2. VARIABLES & CONFIGURATION
   3. TAG BASE CLASS
   4. TAG VARIATIONS
   5. TAG MODIFIERS
   6. TAG STATES
   7. TAG WITH ICONS & ACTIONS
   8. RESPONSIVE ADAPTATIONS
   9. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

/* ==========================================================================
   1. IMPORTS
   ========================================================================== */
@use './../../abstracts/variables/' as *;
@use './../../base/utils/mixins/state' as state;
@use './../../base/utils/mixins/layout' as layout;
@use './../../base/utils/mixins/responsive' as responsive;
@use 'sass:math';

/* ==========================================================================
   2. VARIABLES & CONFIGURATION
   ========================================================================== */

// Tag-specific variables
$tag-font-size: var(--sv-font-size-sm);
$tag-font-weight: var(--sv-font-weight-medium);
$tag-padding-x: var(--sv-space-3);
$tag-padding-y: var(--sv-space-1);
$tag-border-radius: var(--sv-radius-full);
$tag-border-width: 1px;
$tag-height: var(--sv-size-7);
$tag-gap: var(--sv-space-2);

// Tag colors
$tag-bg-color: var(--sv-bg-element);
$tag-text-color: var(--sv-text-primary);
$tag-border-color: var(--sv-border-light);

// Icon and avatar
$tag-icon-size: var(--sv-size-4);
$tag-avatar-size: var(--sv-size-5);
$tag-close-icon-size: var(--sv-size-4);
$tag-chip-icon-margin: var(--sv-space-1);

// Transitions
$tag-transition-duration: var(--sv-motion-duration-short);
$tag-transition-timing: var(--sv-motion-ease-standard);

/* ==========================================================================
   3. TAG BASE CLASS
   ========================================================================== */

.sv-tag {
  // Extend the information display base class
  @extend .sv-information-display-base;
  
  // Override and add tag-specific styles
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: $tag-height;
  padding: $tag-padding-y $tag-padding-x;
  border-radius: $tag-border-radius;
  font-size: $tag-font-size;
  font-weight: $tag-font-weight;
  line-height: 1;
  
  // Visual styling
  background-color: $tag-bg-color;
  color: $tag-text-color;
  border: $tag-border-width solid $tag-border-color;
  
  // Ensure text and icon alignment
  white-space: nowrap;
  vertical-align: middle;
  
  // Prevent text selection within tags
  user-select: none;
  
  // Transitions for interactive elements
  transition: background-color $tag-transition-duration $tag-transition-timing,
              color $tag-transition-duration $tag-transition-timing,
              border-color $tag-transition-duration $tag-transition-timing,
              box-shadow $tag-transition-duration $tag-transition-timing;
  
  // BEM pattern for tag elements
  &__content {
    display: inline-flex;
    align-items: center;
    gap: $tag-gap;
  }
  
  &__label {
    display: inline-block;
    max-width: 200px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  
  &__icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: $tag-icon-size;
    height: $tag-icon-size;
    flex-shrink: 0;
  }
  
  &__avatar {
    display: flex;
    align-items: center;
    justify-content: center;
    width: $tag-avatar-size;
    height: $tag-avatar-size;
    border-radius: 50%;
    overflow: hidden;
    flex-shrink: 0;
    margin-right: var(--sv-space-1);
    
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }
  
  &__close {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: $tag-close-icon-size;
    height: $tag-close-icon-size;
    margin-left: var(--sv-space-1);
    cursor: pointer;
    opacity: 0.7;
    flex-shrink: 0;
    
    &:hover {
      opacity: 1;
    }
  }
}

/* ==========================================================================
   4. TAG VARIATIONS
   ========================================================================== */

.sv-tag {
  // Color variants
  &--primary {
    background-color: var(--sv-primary);
    color: var(--sv-text-on-dark);
    border-color: var(--sv-primary);
  }
  
  &--secondary {
    background-color: var(--sv-secondary);
    color: var(--sv-text-on-dark);
    border-color: var(--sv-secondary);
  }
  
  &--success {
    background-color: var(--sv-success);
    color: var(--sv-text-on-dark);
    border-color: var(--sv-success);
  }
  
  &--warning {
    background-color: var(--sv-warning);
    color: var(--sv-text-on-dark);
    border-color: var(--sv-warning);
  }
  
  &--error {
    background-color: var(--sv-error);
    color: var(--sv-text-on-dark);
    border-color: var(--sv-error);
  }
  
  &--info {
    background-color: var(--sv-info);
    color: var(--sv-text-on-dark);
    border-color: var(--sv-info);
  }
  
  // Outlined variants
  &--outlined {
    background-color: transparent;
    
    &.sv-tag--primary {
      color: var(--sv-primary);
      border-color: var(--sv-primary);
    }
    
    &.sv-tag--secondary {
      color: var(--sv-secondary);
      border-color: var(--sv-secondary);
    }
    
    &.sv-tag--success {
      color: var(--sv-success);
      border-color: var(--sv-success);
    }
    
    &.sv-tag--warning {
      color: var(--sv-warning);
      border-color: var(--sv-warning);
    }
    
    &.sv-tag--error {
      color: var(--sv-error);
      border-color: var(--sv-error);
    }
    
    &.sv-tag--info {
      color: var(--sv-info);
      border-color: var(--sv-info);
    }
  }
  
  // Size variations
  &--sm {
    height: calc($tag-height * 0.85);
    font-size: var(--sv-font-size-xs);
    padding: calc($tag-padding-y * 0.8) calc($tag-padding-x * 0.8);
  }
  
  &--lg {
    height: calc($tag-height * 1.15);
    font-size: var(--sv-font-size-base);
    padding: calc($tag-padding-y * 1.2) calc($tag-padding-x * 1.2);
  }
  
  // Light variants (pastel colors)
  &--light {
    &.sv-tag--primary {
      background-color: rgba(var(--sv-primary-rgb), 0.15);
      color: var(--sv-primary-dark);
      border-color: transparent;
    }
    
    &.sv-tag--secondary {
      background-color: rgba(var(--sv-secondary-rgb), 0.15);
      color: var(--sv-secondary-dark);
      border-color: transparent;
    }
    
    &.sv-tag--success {
      background-color: rgba(var(--sv-success-rgb), 0.15);
      color: var(--sv-success-dark);
      border-color: transparent;
    }
    
    &.sv-tag--warning {
      background-color: rgba(var(--sv-warning-rgb), 0.15);
      color: var(--sv-warning-dark);
      border-color: transparent;
    }
    
    &.sv-tag--error {
      background-color: rgba(var(--sv-error-rgb), 0.15);
      color: var(--sv-error-dark);
      border-color: transparent;
    }
    
    &.sv-tag--info {
      background-color: rgba(var(--sv-info-rgb), 0.15);
      color: var(--sv-info-dark);
      border-color: transparent;
    }
  }
}

/* ==========================================================================
   5. TAG MODIFIERS
   ========================================================================== */

.sv-tag {
  // Square tag (instead of rounded)
  &--square {
    border-radius: var(--sv-radius-sm);
  }
  
  // Rounded tag (partial rounding)
  &--rounded {
    border-radius: var(--sv-radius-md);
  }
  
  // Tag without background
  &--text-only {
    background-color: transparent;
    border-color: transparent;
    padding-left: 0;
    padding-right: 0;
  }
  
  // Tag with counter
  &--with-counter {
    .sv-tag__counter {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      min-width: var(--sv-size-5);
      height: var(--sv-size-5);
      border-radius: var(--sv-radius-full);
      background-color: rgba(0, 0, 0, 0.2);
      color: inherit;
      font-size: calc($tag-font-size * 0.9);
      margin-left: var(--sv-space-1);
      padding: 0 var(--sv-space-1);
    }
    
    &.sv-tag--outlined {
      .sv-tag__counter {
        background-color: currentColor;
        color: var(--sv-bg-surface);
      }
    }
  }
}

/* ==========================================================================
   6. TAG STATES
   ========================================================================== */

.sv-tag {
  // Clickable tag
  &.is-clickable {
    cursor: pointer;
    
    &:hover:not(:disabled):not(.disabled) {
      filter: brightness(0.9);
    }
    
    &:active:not(:disabled):not(.disabled) {
      transform: translateY(1px);
    }
    
    &:focus-visible {
      @include state.focus-visible-state;
    }
  }
  
  // Selected tag
  &.is-selected {
    background-color: var(--sv-primary);
    color: var(--sv-text-on-dark);
    border-color: var(--sv-primary);
    
    &.sv-tag--outlined {
      background-color: rgba(var(--sv-primary-rgb), 0.1);
      color: var(--sv-primary);
    }
  }
  
  // Disabled tag
  &.is-disabled, &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
  
  // Removable tag transitioning out
  &.is-removing {
    opacity: 0;
    transform: scale(0.8);
    pointer-events: none;
  }
}

/* ==========================================================================
   7. TAG WITH ICONS & ACTIONS
   ========================================================================== */

.sv-tag {
  // For tags with leading icon
  &--with-icon {
    padding-left: calc($tag-padding-x * 0.7);
    
    .sv-tag__icon {
      margin-right: $tag-chip-icon-margin;
      
      svg, i {
        width: $tag-icon-size;
        height: $tag-icon-size;
      }
    }
  }
  
  // For tags with avatar
  &--with-avatar {
    padding-left: calc($tag-padding-x * 0.7);
    
    .sv-tag__avatar {
      margin-right: $tag-chip-icon-margin;
    }
  }
  
  // For tags that can be removed/closed
  &--closable {
    padding-right: calc($tag-padding-x * 0.7);
    
    .sv-tag__close {
      margin-left: $tag-chip-icon-margin;
      
      svg, i {
        width: calc($tag-close-icon-size * 0.8);
        height: calc($tag-close-icon-size * 0.8);
      }
    }
  }
}

/* ==========================================================================
   8. RESPONSIVE ADAPTATIONS
   ========================================================================== */

@include responsive.media-breakpoint-down(sm) {
  .sv-tag {
    // Smaller text and padding on mobile
    font-size: calc($tag-font-size * 0.9);
    padding: $tag-padding-y calc($tag-padding-x * 0.8);
    
    // Ensure compact tags on small screens
    &__label {
      max-width: 150px;
    }
    
    // Smaller icons on mobile
    &__icon, &__close {
      width: calc($tag-icon-size * 0.9);
      height: calc($tag-icon-size * 0.9);
    }
    
    // Smaller avatars on mobile
    &__avatar {
      width: calc($tag-avatar-size * 0.9);
      height: calc($tag-avatar-size * 0.9);
    }
    
    // Adjust gap for mobile
    &__content {
      gap: calc($tag-gap * 0.8);
    }
  }
}

/* ==========================================================================
   9. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

// High contrast mode enhancements
@media (forced-colors: active) {
  .sv-tag {
    border: 1px solid CanvasText;
    
    // Ensure visibility in high contrast mode
    &--primary, &--secondary, &--success, &--warning, &--error, &--info {
      border: 1px solid CanvasText;
      color: CanvasText;
    }
    
    // For clickable elements in high contrast mode
    &.is-clickable:hover:not(:disabled):not(.disabled) {
      text-decoration: underline;
    }
    
    // Ensure buttons have distinct appearance
    &__close {
      border: 1px solid currentColor;
      border-radius: 50%;
    }
  }
}