/**
 * Status Indicator Component - Component-level Styles
 * Version: 1.1.0
 * Last Updated: July 15, 2024
 * 
 * This file defines styles for the Status Indicator component in the SkillVo design system.
 * It extends the information-display-base class and provides status indicator-specific styling.
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. IMPORTS
   2. VARIABLES & CONFIGURATION
   3. STATUS INDICATOR BASE CLASS
   4. STATUS INDICATOR VARIATIONS
   5. STATUS INDICATOR ANIMATIONS
   6. STATUS INDICATOR STATES
   7. RESPONSIVE ADAPTATIONS
   8. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

/* ==========================================================================
   1. IMPORTS
   ========================================================================== */
@use './../../abstracts' as *;
@use './../../base/utils/mixins/state' as state;
@use './../../base/utils/mixins/layout' as layout;
@use './../../base/utils/mixins/responsive' as responsive;

/* ==========================================================================
   2. VARIABLES & CONFIGURATION
   ========================================================================== */

// Status indicator-specific variables
$status-font-size: var(--sv-font-size-sm);
$status-font-weight: var(--sv-font-weight-medium);
$status-dot-size: var(--sv-size-2);
$status-dot-size-lg: var(--sv-size-3);
$status-dot-size-sm: var(--sv-size-1-5);
$status-padding-x: var(--sv-space-2);
$status-padding-y: var(--sv-space-1);
$status-dot-margin: var(--sv-space-2);
$status-border-radius: var(--sv-radius-full);

// Status colors
$status-color-online: var(--sv-success);
$status-color-offline: var(--sv-error);
$status-color-away: var(--sv-warning);
$status-color-busy: var(--sv-error);
$status-color-available: var(--sv-success);
$status-color-inactive: var(--sv-text-disabled);
$status-color-pending: var(--sv-warning);
$status-color-approved: var(--sv-success);
$status-color-rejected: var(--sv-error);
$status-color-processing: var(--sv-info);

// Animations
$status-transition-duration: var(--sv-motion-duration-short);
$status-transition-timing: var(--sv-motion-ease-standard);
$status-pulse-duration: 2s;

/* ==========================================================================
   3. STATUS INDICATOR BASE CLASS
   ========================================================================== */

.sv-status {
  // Extend the information display base class
  @extend .sv-information-display-base !optional;
  
  // Override and add status indicator-specific styles
  display: inline-flex;
  align-items: center;
  font-size: $status-font-size;
  font-weight: $status-font-weight;
  padding: $status-padding-y $status-padding-x;
  
  // Default text color - overridden by specific status colors
  color: var(--sv-text-primary);
  
  // Transitions for smooth state changes
  transition: opacity $status-transition-duration $status-transition-timing,
              background-color $status-transition-duration $status-transition-timing;
  
  // BEM pattern for status indicator elements
  &__dot {
    display: inline-block;
    width: $status-dot-size;
    height: $status-dot-size;
    border-radius: $status-border-radius;
    margin-right: $status-dot-margin;
    flex-shrink: 0;
    
    // Default dot color - overridden by specific status colors
    background-color: currentColor;
  }
  
  &__text {
    line-height: 1;
  }
}

/* ==========================================================================
   4. STATUS INDICATOR VARIATIONS
   ========================================================================== */

.sv-status {
  // Status types (with appropriate colors)
  &--online {
    color: $status-color-online;
  }
  
  &--offline {
    color: $status-color-offline;
  }
  
  &--away {
    color: $status-color-away;
  }
  
  &--busy {
    color: $status-color-busy;
  }
  
  &--available {
    color: $status-color-available;
  }
  
  &--inactive {
    color: $status-color-inactive;
  }
  
  &--pending {
    color: $status-color-pending;
  }
  
  &--approved {
    color: $status-color-approved;
  }
  
  &--rejected {
    color: $status-color-rejected;
  }
  
  &--processing {
    color: $status-color-processing;
  }
  
  // Size variations
  &--sm {
    font-size: calc($status-font-size * 0.85);
    padding: calc($status-padding-y * 0.75) calc($status-padding-x * 0.75);
    
    .sv-status__dot {
      width: $status-dot-size-sm;
      height: $status-dot-size-sm;
      margin-right: calc($status-dot-margin * 0.75);
    }
  }
  
  &--lg {
    font-size: calc($status-font-size * 1.15);
    padding: calc($status-padding-y * 1.25) calc($status-padding-x * 1.25);
    
    .sv-status__dot {
      width: $status-dot-size-lg;
      height: $status-dot-size-lg;
      margin-right: calc($status-dot-margin * 1.25);
    }
  }
  
  // Dot-only variation (no text)
  &--dot-only {
    padding: 0;
    
    .sv-status__dot {
      margin-right: 0;
    }
    
    .sv-status__text {
      @include layout.hide-visually();
    }
  }
  
  // Badge-style variation
  &--badge {
    background-color: var(--sv-bg-element);
    border-radius: $status-border-radius;
    padding: calc($status-padding-y * 0.75) calc($status-padding-x * 1.25);
    
    &.sv-status--online {
      background-color: rgba(var(--sv-success-rgb), 0.15);
    }
    
    &.sv-status--offline {
      background-color: rgba(var(--sv-error-rgb), 0.15);
    }
    
    &.sv-status--away {
      background-color: rgba(var(--sv-warning-rgb), 0.15);
    }
    
    &.sv-status--busy {
      background-color: rgba(var(--sv-error-rgb), 0.15);
    }
    
    &.sv-status--available {
      background-color: rgba(var(--sv-success-rgb), 0.15);
    }
    
    &.sv-status--inactive {
      background-color: rgba(var(--sv-text-disabled-rgb, 0, 0, 0), 0.08);
    }
    
    &.sv-status--pending {
      background-color: rgba(var(--sv-warning-rgb), 0.15);
    }
    
    &.sv-status--approved {
      background-color: rgba(var(--sv-success-rgb), 0.15);
    }
    
    &.sv-status--rejected {
      background-color: rgba(var(--sv-error-rgb), 0.15);
    }
    
    &.sv-status--processing {
      background-color: rgba(var(--sv-info-rgb), 0.15);
    }
  }
}

/* ==========================================================================
   5. STATUS INDICATOR ANIMATIONS
   ========================================================================== */

.sv-status {
  // Pulsing animation for active status
  &--pulsing {
    .sv-status__dot {
      animation: status-pulse $status-pulse-duration infinite;
    }
    
    &.sv-status--online .sv-status__dot {
      box-shadow: 0 0 0 0 transparent;
    }
    
    &.sv-status--offline .sv-status__dot {
      box-shadow: 0 0 0 0 transparent;
    }
    
    &.sv-status--away .sv-status__dot {
      box-shadow: 0 0 0 0 transparent;
    }
    
    &.sv-status--busy .sv-status__dot {
      box-shadow: 0 0 0 0 transparent;
    }
    
    &.sv-status--processing .sv-status__dot {
      box-shadow: 0 0 0 0 transparent;
    }
  }
}

@keyframes status-pulse {
  0% {
    box-shadow: 0 0 0 0 transparent;
  }
  70% {
    box-shadow: 0 0 0 6px transparent;
  }
  100% {
    box-shadow: 0 0 0 0 transparent;
  }
}

/* ==========================================================================
   6. STATUS INDICATOR STATES
   ========================================================================== */

.sv-status {
  // Disabled state
  &.is-disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
  
  // Interactive status indicator
  &.is-interactive {
    cursor: pointer;
    
    &:hover:not(:disabled):not(.disabled) {
      opacity: 0.85;
    }
    
    &:focus-visible {
      @include state.focus-visible-state;
    }
  }
  
  // Animated entrance effect
  &.is-animating {
    animation: status-entrance 0.3s $status-transition-timing;
    
    @keyframes status-entrance {
      from {
        opacity: 0;
        transform: translateY(-4px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
  }
}

/* ==========================================================================
   7. RESPONSIVE ADAPTATIONS
   ========================================================================== */

@include responsive.breakpoint-down(sm) {
  .sv-status {
    // Smaller text on mobile
    font-size: calc($status-font-size * 0.9);
    
    // Reduced padding on mobile
    padding: calc($status-padding-y * 0.8) calc($status-padding-x * 0.8);
    
    // Smaller dot on mobile
    &__dot {
      width: calc($status-dot-size * 0.9);
      height: calc($status-dot-size * 0.9);
      margin-right: calc($status-dot-margin * 0.9);
    }
    
    // Ensure larger touch targets for interactive elements
    &.is-interactive {
      min-height: var(--sv-size-6);
      min-width: var(--sv-size-6);
      display: inline-flex;
      align-items: center;
      justify-content: center;
    }
  }
}

/* ==========================================================================
   8. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

// High contrast mode enhancements
@media (forced-colors: active) {
  .sv-status {
    &__dot {
      border: 1px solid CanvasText;
      
      // Use forced colors for high contrast mode
      background-color: CanvasText;
    }
    
    &--badge {
      border: 1px solid CanvasText;
    }
  }
}

// Respect reduced motion preference
@media (prefers-reduced-motion: reduce) {
  .sv-status {
    &--pulsing .sv-status__dot {
      animation: none;
    }
    
    &.is-animating {
      animation: none;
    }
  }
}