/**
 * Progress Indicator Component - Component-level Styles
 * Version: 1.1.0
 * Last Updated: July 15, 2024
 * 
 * This file defines styles for the Progress Indicator component in the SkillVo design system.
 * It extends the information-display-base class and provides progress indicator-specific styling.
 */

/* ==========================================================================
   TABLE OF CONTENTS:
   
   1. IMPORTS
   2. VARIABLES & CONFIGURATION
   3. PROGRESS INDICATOR BASE CLASS
   4. PROGRESS INDICATOR TYPES
   5. PROGRESS INDICATOR VARIATIONS
   6. PROGRESS INDICATOR STATES
   7. ANIMATIONS
   8. RESPONSIVE ADAPTATIONS
   9. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

/* ==========================================================================
   1. IMPORTS
   ========================================================================== */
@use './../../abstracts' as *;
@use './../../base/' as *;
@use './../../base/utils/mixins/state' as state;
@use './../../base/utils/mixins/layout' as layout;
@use './../../base/utils/mixins/responsive' as responsive;
@use 'sass:math';

/* ==========================================================================
   2. VARIABLES & CONFIGURATION
   ========================================================================== */

// Progress indicator-specific variables
$progress-font-size: var(--sv-font-size-sm);
$progress-font-weight: var(--sv-font-weight-medium);
$progress-height: var(--sv-size-2);
$progress-bar-height: var(--sv-size-1);
$progress-border-radius: var(--sv-radius-full);
$progress-margin: var(--sv-space-2);
$progress-circular-size: var(--sv-size-10);
$progress-circular-stroke-width: 4px;
$progress-circular-sm-size: var(--sv-size-6);
$progress-circular-lg-size: var(--sv-size-14);
$progress-steps-size: var(--sv-size-8);
$progress-steps-line-height: var(--sv-size-1);

// Progress colors
$progress-track-bg: var(--sv-bg-element);
$progress-track-border: var(--sv-border-light);
$progress-bar-bg: var(--sv-primary);
$progress-text-color: var(--sv-text-primary);
$progress-secondary-text: var(--sv-text-secondary);

// Animations
$progress-transition-duration: var(--sv-motion-duration-standard);
$progress-transition-timing: var(--sv-motion-ease-standard);
$progress-indeterminate-duration: 2s;
$progress-circular-duration: 1.4s;

/* ==========================================================================
   3. PROGRESS INDICATOR BASE CLASS
   ========================================================================== */

.sv-progress {
  // Extend the information display base class
  @extend .sv-information-display-base ;
  
  // Override and add progress indicator-specific styles
  display: flex;
  flex-direction: column;
  width: 100%;
  font-size: $progress-font-size;
  font-weight: $progress-font-weight;
  margin: $progress-margin 0;
  
  // Transitions for smooth updates
  transition: opacity $progress-transition-duration $progress-transition-timing;
  
  // BEM pattern for progress indicator elements
  &__label {
    display: flex;
    justify-content: space-between;
    margin-bottom: var(--sv-space-1);
    color: $progress-text-color;
  }
  
  &__text {
    font-weight: $progress-font-weight;
  }
  
  &__value {
    color: $progress-secondary-text;
  }
  
  &__container {
    position: relative;
    width: 100%;
    height: $progress-height;
    background-color: $progress-track-bg;
    border-radius: $progress-border-radius;
    overflow: hidden;
  }
  
  &__bar {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    background-color: $progress-bar-bg;
    border-radius: $progress-border-radius;
    transition: width $progress-transition-duration $progress-transition-timing;
  }
}

/* ==========================================================================
   4. PROGRESS INDICATOR TYPES
   ========================================================================== */

// Linear progress (default)
.sv-progress--linear {
  // Linear is the default style, so no additional styles needed
}

// Circular progress
.sv-progress--circular {
  width: auto;
  align-items: center;
  
  .sv-progress__container {
    position: relative;
    width: $progress-circular-size;
    height: $progress-circular-size;
    background-color: transparent;
    border-radius: 50%;
  }
  
  .sv-progress__label {
    margin-top: var(--sv-space-2);
    margin-bottom: 0;
    justify-content: center;
  }
  
  .sv-progress__svg {
    transform: rotate(-90deg);
    width: 100%;
    height: 100%;
  }
  
  .sv-progress__circle-bg {
    fill: none;
    stroke: $progress-track-bg;
    stroke-width: $progress-circular-stroke-width;
  }
  
  .sv-progress__circle-value {
    fill: none;
    stroke: $progress-bar-bg;
    stroke-width: $progress-circular-stroke-width;
    stroke-linecap: round;
    stroke-dasharray: 100;
    transition: stroke-dashoffset $progress-transition-duration $progress-transition-timing;
  }
  
  .sv-progress__text-value {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-weight: var(--sv-font-weight-semibold);
    font-size: var(--sv-font-size-sm);
    color: $progress-text-color;
  }
}

// Steps progress indicator
.sv-progress--steps {
  flex-direction: row;
  justify-content: space-between;
  margin: $progress-margin 0;
  position: relative;
  
  // Line connecting steps
  &::before {
    content: "";
    position: absolute;
    top: calc($progress-steps-size / 2);
    left: 0;
    width: 100%;
    height: $progress-steps-line-height;
    background-color: $progress-track-bg;
    transform: translateY(-50%);
    z-index: 1;
  }
  
  // Completed line
  &::after {
    content: "";
    position: absolute;
    top: calc($progress-steps-size / 2);
    left: 0;
    height: $progress-steps-line-height;
    background-color: $progress-bar-bg;
    transform: translateY(-50%);
    z-index: 1;
    transition: width $progress-transition-duration $progress-transition-timing;
  }
  
  .sv-progress__step {
    display: flex;
    flex-direction: column;
    align-items: center;
    z-index: 2;
    position: relative;
  }
  
  .sv-progress__step-indicator {
    width: $progress-steps-size;
    height: $progress-steps-size;
    border-radius: 50%;
    background-color: $progress-track-bg;
    border: 2px solid $progress-track-border;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: var(--sv-space-2);
    transition: background-color $progress-transition-duration $progress-transition-timing,
                border-color $progress-transition-duration $progress-transition-timing;
    
    &--completed {
      background-color: $progress-bar-bg;
      border-color: $progress-bar-bg;
      color: var(--sv-text-on-dark);
    }
    
    &--active {
      border-color: $progress-bar-bg;
      color: $progress-bar-bg;
    }
  }
  
  .sv-progress__step-text {
    font-size: var(--sv-font-size-xs);
    text-align: center;
    color: $progress-secondary-text;
    max-width: 100px;
    
    &--active {
      color: $progress-text-color;
      font-weight: var(--sv-font-weight-semibold);
    }
    
    &--completed {
      color: $progress-text-color;
    }
  }
}

/* ==========================================================================
   5. PROGRESS INDICATOR VARIATIONS
   ========================================================================== */

.sv-progress {
  // Size variations
  &--sm {
    &.sv-progress--linear {
      .sv-progress__container {
        height: calc($progress-height * 0.75);
      }
      
      .sv-progress__label {
        font-size: var(--sv-font-size-xs);
      }
    }
    
    &.sv-progress--circular {
      .sv-progress__container {
        width: $progress-circular-sm-size;
        height: $progress-circular-sm-size;
      }
      
      .sv-progress__circle-bg,
      .sv-progress__circle-value {
        stroke-width: calc($progress-circular-stroke-width * 0.75);
      }
      
      .sv-progress__text-value {
        font-size: var(--sv-font-size-xs);
      }
    }
    
    &.sv-progress--steps {
      .sv-progress__step-indicator {
        width: calc($progress-steps-size * 0.75);
        height: calc($progress-steps-size * 0.75);
      }
    }
  }
  
  &--lg {
    &.sv-progress--linear {
      .sv-progress__container {
        height: calc($progress-height * 1.5);
      }
      
      .sv-progress__label {
        font-size: var(--sv-font-size-base);
      }
    }
    
    &.sv-progress--circular {
      .sv-progress__container {
        width: $progress-circular-lg-size;
        height: $progress-circular-lg-size;
      }
      
      .sv-progress__circle-bg,
      .sv-progress__circle-value {
        stroke-width: calc($progress-circular-stroke-width * 1.25);
      }
      
      .sv-progress__text-value {
        font-size: var(--sv-font-size-base);
      }
    }
    
    &.sv-progress--steps {
      .sv-progress__step-indicator {
        width: calc($progress-steps-size * 1.25);
        height: calc($progress-steps-size * 1.25);
      }
      
      .sv-progress__step-text {
        font-size: var(--sv-font-size-sm);
      }
    }
  }
  
  // Color variations
  &--primary {
    .sv-progress__bar,
    &.sv-progress--circular .sv-progress__circle-value,
    &.sv-progress--steps::after,
    &.sv-progress--steps .sv-progress__step-indicator--completed {
      background-color: var(--sv-primary);
    }
    
    &.sv-progress--steps .sv-progress__step-indicator--active {
      border-color: var(--sv-primary);
      color: var(--sv-primary);
    }
  }
  
  &--secondary {
    .sv-progress__bar,
    &.sv-progress--circular .sv-progress__circle-value,
    &.sv-progress--steps::after,
    &.sv-progress--steps .sv-progress__step-indicator--completed {
      background-color: var(--sv-secondary);
    }
    
    &.sv-progress--steps .sv-progress__step-indicator--active {
      border-color: var(--sv-secondary);
      color: var(--sv-secondary);
    }
  }
  
  &--success {
    .sv-progress__bar,
    &.sv-progress--circular .sv-progress__circle-value,
    &.sv-progress--steps::after,
    &.sv-progress--steps .sv-progress__step-indicator--completed {
      background-color: var(--sv-success);
    }
    
    &.sv-progress--steps .sv-progress__step-indicator--active {
      border-color: var(--sv-success);
      color: var(--sv-success);
    }
  }
  
  &--warning {
    .sv-progress__bar,
    &.sv-progress--circular .sv-progress__circle-value,
    &.sv-progress--steps::after,
    &.sv-progress--steps .sv-progress__step-indicator--completed {
      background-color: var(--sv-warning);
    }
    
    &.sv-progress--steps .sv-progress__step-indicator--active {
      border-color: var(--sv-warning);
      color: var(--sv-warning);
    }
  }
  
  &--error {
    .sv-progress__bar,
    &.sv-progress--circular .sv-progress__circle-value,
    &.sv-progress--steps::after,
    &.sv-progress--steps .sv-progress__step-indicator--completed {
      background-color: var(--sv-error);
    }
    
    &.sv-progress--steps .sv-progress__step-indicator--active {
      border-color: var(--sv-error);
      color: var(--sv-error);
    }
  }
}

/* ==========================================================================
   6. PROGRESS INDICATOR STATES
   ========================================================================== */

.sv-progress {
  // Disabled state
  &.is-disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
  
  // Indeterminate state (loading)
  &.is-indeterminate {
    .sv-progress__bar {
      width: 50%;
      animation: progress-indeterminate $progress-indeterminate-duration infinite linear;
      background-image: linear-gradient(
        45deg,
        rgba(255, 255, 255, 0.15) 25%,
        transparent 25%,
        transparent 50%,
        rgba(255, 255, 255, 0.15) 50%,
        rgba(255, 255, 255, 0.15) 75%,
        transparent 75%,
        transparent
      );
      background-size: 40px 40px;
    }
    
    &.sv-progress--circular {
      .sv-progress__circle-value {
        animation: progress-circular $progress-circular-duration infinite linear;
        stroke-dasharray: 80 100;
        stroke-dashoffset: 0;
      }
      
      .sv-progress__text-value {
        display: none;
      }
    }
  }
  
  // Transitioning/Animating
  &.is-animating {
    .sv-progress__bar {
      transition: width 0.5s ease;
    }
    
    &.sv-progress--circular .sv-progress__circle-value {
      transition: stroke-dashoffset 0.5s ease;
    }
  }
}

/* ==========================================================================
   7. ANIMATIONS
   ========================================================================== */

@keyframes progress-indeterminate {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(200%);
  }
}

@keyframes progress-circular {
  0% {
    stroke-dasharray: 1 100;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 80 100;
    stroke-dashoffset: -25;
  }
  100% {
    stroke-dasharray: 1 100;
    stroke-dashoffset: -100;
  }
}

/* ==========================================================================
   8. RESPONSIVE ADAPTATIONS
   ========================================================================== */

@include responsive.breakpoint-down(md) {
  .sv-progress--steps {
    .sv-progress__step-text {
      font-size: calc($progress-font-size * 0.85);
      max-width: 80px;
    }
  }
}

@include responsive.breakpoint-down(sm) {
  .sv-progress {
    margin: calc($progress-margin * 0.75) 0;
    
    &__label {
      font-size: calc($progress-font-size * 0.9);
    }
    
    &--steps {
      .sv-progress__step-text {
        max-width: 60px;
        display: none;
      }
      
      .sv-progress__step-indicator {
        margin-bottom: 0;
      }
    }
  }
}

/* ==========================================================================
   9. ACCESSIBILITY ENHANCEMENTS
   ========================================================================== */

// ARIA attributes
.sv-progress__container {
  // For screen readers
  &[role="progressbar"] {
    // ARIA attributes handled by JavaScript
  }
}

// High contrast mode enhancements
@media (forced-colors: active) {
  .sv-progress {
    &__container {
      border: 1px solid CanvasText;
    }
    
    &__bar {
      background-color: Highlight;
    }
    
    &--steps {
      &::before {
        background-color: Canvas;
        border: 1px solid CanvasText;
      }
      
      &::after {
        background-color: Highlight;
      }
      
      .sv-progress__step-indicator {
        border: 1px solid CanvasText;
        
        &--completed {
          background-color: Highlight;
          border-color: Highlight;
        }
        
        &--active {
          border-color: Highlight;
        }
      }
    }
    
    &--circular {
      .sv-progress__circle-bg {
        stroke: CanvasText;
      }
      
      .sv-progress__circle-value {
        stroke: Highlight;
      }
    }
  }
}

// Respect reduced motion preference
@media (prefers-reduced-motion: reduce) {
  .sv-progress {
    &.is-indeterminate {
      .sv-progress__bar {
        animation: none;
        background-image: none;
      }
      
      &.sv-progress--circular .sv-progress__circle-value {
        animation: none;
      }
    }
    
    .sv-progress__bar,
    &.sv-progress--circular .sv-progress__circle-value {
      transition: none;
    }
  }
}